from z3 import *
a1 = [BitVec(f'a{i}', 32) for i in range(10)]
s = Solver()

s.add(-27 * a1[7]
     + -11 * a1[6]
     + 16 * a1[5]
     + a1[0]
     + 2 * a1[1]
     - a1[2]
     + 8 * a1[3]
     - 14 * a1[4]
     + 26 * a1[8]
     + 17 * a1[9] == 14462)

s.add(-30 * a1[8] + 13 * a1[5] + a1[3] + a1[1] + 2 * a1[0] - 15 * a1[4] - 24 * a1[6] + 16 * a1[7] + 36 * a1[9] == -2591)
s.add(16 * a1[6]
     + -21 * a1[5]
     + 7 * a1[3]
     + 3 * a1[1]
     - a1[0]
     - a1[2]
     + 12 * a1[4]
     - 23 * a1[7]
     + 25 * a1[8]
     - 18 * a1[9] == 2517)
s.add(-6 * a1[6] + 2 * a1[2] - a1[1] + 2 * a1[5] + 9 * a1[7] + 2 * a1[8] - 5 * a1[9] == 203)
s.add(-5 * a1[8] + 6 * a1[7] + 3 * a1[1] - a1[3] - a1[5] + a1[6] + 5 * a1[9] == 3547)
s.add(-9 * a1[8] + a1[4] + a1[2] + a1[7] - 5 * a1[9] == -7609)
s.add(2 * a1[5] + -a1[3] - a1[4] + a1[8] + 6 * a1[9] == 4884)
s.add(a1[6] - a1[7] + 2 * a1[8] == 1618)
s.add(a1[4] - a1[6] + 2 * a1[9] == 1096)
s.add(a1[8] + a1[4] + a1[3] + a1[2] + a1[1] + a1[0] - a1[5] - a1[6] - a1[7] - a1[9] == 711)
s.add(2 * (2 * a1[4] + a1[3]) + 5 * a1[5] == 7151 )

if (s.check() == sat):
    m = s.model()
    for i in range(10):
        print(m[a1[i]], end=" ")
        # 511 112 821 949 517 637 897 575 648 738
else:
    print("No solution")