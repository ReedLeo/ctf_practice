from z3 import *

eflag = [0xa7, 0xa6, 0x44, 0xdb, 0xbf, 0x2a, 0x88, 0xd7, 0xb1, 0xd3, 0x5e, 0xd2, 0x44, 0xed, 0xa6, 0x78, 0x5e, 0xed, 0xdb, 0x78, 0xfa, 0xed, 0xd4, 0xc2, 0x44, 0xc2, 0xd2, 0x8c, 0x5e, 0xfe, 0xd7, 0x70, 0x88, 0x27, 0x78, 0xc9, 0xaa, 0x27, 0xa7, 0xf9, 0xfa, 0xfe, 0x2d, 0xa9, 0x2d, 0x8c, 0xd4, 0x8c, 0x2d, 0xd3, 0xb9, 0x70, 0x44, 0x90, 0xa6, 0xc2, 0x2d, 0xb0, 0xdb, 0x81]
key = [0xcc,0xdb,0x85,0x27,0xe1,0xa6,0x90,0xa1,0xb9,0x5a,0x71,0xfa,0x5e,0x44,0xaa,0x49,0xbf,0xa7,0x25,0xed,0xd7,0x7a,0xfe,0xe2,0x2d,0x88,0x91,0xe5,0xcd,0xd4,0xb1,0xce,0xb0,0xf9,0xc2,0x8c,0x78,0x41,0x65,0xdd,0x9f,0x59,0x35,0x24,0x4e,0xc9,0xaf,0x60,0x57,0x70,0xb6,0xd3,0x2a,0xd2,0xa9,0x3a,0x52,0xe9,0x4a,0x2f,0xac,0x81,0x3e,0xc7]
idxs = [key.index(x) for x in eflag]

flag = ''
for i in range(0, 60, 4):
    s = Solver()
    x, y, z = BitVecs('x y z', 8)
    s.add(idxs[i] == x/4)
    s.add(idxs[i+1] == x%4*16+z/16)
    s.add(idxs[i+2] == z%16*4+y/64)
    s.add(idxs[i+3] == y%64)
    # all possible value must be a printable ASCII or '\0'
    s.add(x >= 0, x <= 126)
    s.add(y >= 0, y <= 126)
    s.add(z >= 0, z <= 126)
    if (s.check() == sat):
        m = s.model()
        flag += chr(m[x].as_long())
        flag += chr(m[y].as_long())
        flag += chr(m[z].as_long())
        if (i == 32):
            print(m, idxs[i:i+4])
    else:
        continue

print(flag)
# DASCTF{535d11d0-b76c-11ed-98a4-6fbc7c124bab}