0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x0|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x0; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x0|0x0|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x0|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x0|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x0|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed		// strlen(usrInput)
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x0|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x0; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x0|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x1|0x1|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x1|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x1|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x2|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x2|0x2|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x5|0x2|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x2|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x2|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x3|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x3|0x3|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x3|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x3|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x3|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x4; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x4|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x4|0x4|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x7|0x4|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x4|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x5; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x5|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x5|0x5|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x5|0x5|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x8|0x5|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x5|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x5|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x5|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x6|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x6|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x6|0x6|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x9|0x6|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x6|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x6|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x6|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x7|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x7|0x7|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x7|0x7|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xa|0x7|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x7|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x7|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x7|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x7|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x8; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x8|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x8|0x8|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x8|0x8|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xb|0x8|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x8|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x8|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x8|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x8|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x9|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x9|0x9|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x9|0x9|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xc|0x9|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x9|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x9|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x9|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x9|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xa; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xa|0xa|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa|0xa|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xd; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xd|0xa|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xa|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xa|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xb; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xb|0xb|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb|0xb|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xe; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xe|0xb|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xb|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xb|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xc; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xc|0xc|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xc|0xc|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xf; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0xc|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xc|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xc|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xd|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xd; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xd|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xd|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xd|0xd|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xd; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xd|0xd|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x10; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x10|0xd|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xd|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xd|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xd|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xd|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xd; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xe|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xe|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xe|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xe|0xe|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xe; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xe|0xe|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x11|0xe|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xe|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xe|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xe|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xe|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xe; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xf|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xf; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xf|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xf|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0xf|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xf; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xf|0xf|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x12; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x12|0xf|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xf|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xf|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xf|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xf|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xf; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x10; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x10|0x10|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x10|0x10|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x13; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x13|0x10|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x10|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x10|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x11|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x11; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x11|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x11|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x11|0x11|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x11; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x11|0x11|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x14; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x14|0x11|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x11|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x11|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x11|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x11|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x11; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x11|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x12|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x12; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x12|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x12|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x12|0x12|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x12; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x12|0x12|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x15; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x15|0x12|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x12|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x12|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x12|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x12|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x12; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x12|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x13|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x13; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x13|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x13|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x13|0x13|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x13; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x13|0x13|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x16; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x16|0x13|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x13|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x13|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x13|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x13|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x13; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x13|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x14|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x14; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x14|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x14|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x14|0x14|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x14; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x14|0x14|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x17; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x17|0x14|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x14|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x14|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x14|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x14|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x14; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x14|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x15|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x15; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x15|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x15|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x15|0x15|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x15; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x15|0x15|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x18; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x15|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x15|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x15|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x15|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x15|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x15; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x15|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x16; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x16|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x16|0x16|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x16|0x16|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x19; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x19|0x16|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x16|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x16|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x16|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x16|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x17|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x17; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x17|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x17|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x17|0x17|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x17; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x17|0x17|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x1a|0x17|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x17|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x17|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x17|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x17|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x17; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x17|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x18|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x18; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x18|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x18|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x18|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x18|0x18|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x1b|0x18|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x18|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x18|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x18|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x18|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x18|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x19|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x19; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x19|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x19|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x19|0x19|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x19; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x19|0x19|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x1c|0x19|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x19|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x19|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x19|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x19|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x19; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x19|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1a|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1a|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1a|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1a|0x1a|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1a; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x1a|0x1a|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x1d|0x1a|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x1a|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x1a|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1a|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1a|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1a; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1a|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1b|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1b|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1b|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1b|0x1b|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1b; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x1b|0x1b|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x1e|0x1b|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x1b|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x1b|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1b|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1b|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1b; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1b|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1c|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1c|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1c|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1c|0x1c|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1c; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x1c|0x1c|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x1f|0x1c|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x1c|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x1c|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1c|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1c|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1c; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1c|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1d|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1d|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1d|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1d|0x1d|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1d; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x1d|0x1d|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x20; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x20|0x1d|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x1d|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x1d|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1d|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1d|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1d; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1d|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1e|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1e|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1e|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1e|0x1e|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1e; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x1e|0x1e|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x21; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x21|0x1e|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x1e|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x1e|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1e|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1e|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1e; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1e|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1f|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1f|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1f|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1f|0x1f|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1f; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x1f|0x1f|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x22; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x22|0x1f|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x1f|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x1f|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1f|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1f|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1f; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1f|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x20|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x20; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x20|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x20|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x20|0x20|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x20; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x20|0x20|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x23; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x23|0x20|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x20|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x20|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x20|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x20|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x20; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x20|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x21; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x21|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x21|0x21|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x21|0x21|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x24; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x24|0x21|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x21|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x21|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x21|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x21|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x22|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x22; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x22|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x22|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x22|0x22|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x22; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x22|0x22|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x25; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x25|0x22|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x22|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x22|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x22|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x22|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x22; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x22|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x23|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x23; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x23|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x23|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x23|0x23|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x23; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x23|0x23|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x26; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x26|0x23|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x23|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x23|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x23|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x23|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x23; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x23|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x24|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x24; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x24|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x24|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x24|0x24|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x24; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x24|0x24|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x27; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x27|0x24|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x24|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x24|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x24|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x24|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x24; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x24|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x25|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x25; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x25|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x25|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x25|0x25|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x25; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x25|0x25|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x28; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x28|0x25|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x25|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x25|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x25|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x25|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x25; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x25|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x26|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x26; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x26|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x26|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x26|0x26|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x26; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x26|0x26|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x29; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x29|0x26|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x26|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x26|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x26|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x26|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x26; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x26|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x27|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x27; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x27|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x27|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x27|0x27|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x27; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x27|0x27|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x2a|0x27|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x27|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x27|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x27|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x27|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x27; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x27|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x28|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x28; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x28|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x28|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x28|0x28|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x28; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x28|0x28|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x2b|0x28|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x28|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x28|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x28|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x28|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x28; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x28|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x29|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x29; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x29|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x29|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x29|0x29|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x29; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x29|0x29|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x2c|0x29|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x29|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x29|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x29|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x29|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x29; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x29|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2a|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2a|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2a|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x2a|0x2a|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2a; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x2a|0x2a|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x2a|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x2a|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x2a|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2a|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2a|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2a; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2a|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2b|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2b|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2b|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x2b|0x2b|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2b; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x2b|0x2b|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x2e|0x2b|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x2b|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x2b|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2b|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2b|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2b; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2b|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2c|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2c|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2c|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x2c|0x2c|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2c; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x2c|0x2c|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x2f|0x2c|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x2c|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x2c|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2c|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2c|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2c; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2c|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2d|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2d|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2d|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x2d|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2d; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x2d|0x2d|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x30; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x30|0x2d|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x2d|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x2d|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2d|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2d|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2d; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2d|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2e|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2e|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2e|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x2e|0x2e|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2e; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x2e|0x2e|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x31; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x31|0x2e|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x2e|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x2e|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2e|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2e|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2e; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2e|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2f|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2f|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2f|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x2f|0x2f|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2f; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x2f|0x2f|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x32; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x32|0x2f|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x2f|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x2f|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2f|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2f|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2f; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2f|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x30|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x30; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x30|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x30|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x30|0x30|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x30; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x30|0x30|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x33; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x33|0x30|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x30|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x30|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x30|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x30|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x30; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x30|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x31|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x31; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x31|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x31|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x31|0x31|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x31; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x31|0x31|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x34; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x34|0x31|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x31|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x31|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x31|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x31|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x31; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x31|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x32|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x32; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x32|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x32|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x32|0x32|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x32; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x32|0x32|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x35; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x35|0x32|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x32|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x32|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x32|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x32|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x32; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x32|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x33|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x33; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x33|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x33|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x33|0x33|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x33; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x33|0x33|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x36; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x36|0x33|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x33|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x33|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x33|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x33|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x33; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x33|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x34|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x34; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x34|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x34|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x34|0x34|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x34; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x34|0x34|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x37; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x37|0x34|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x34|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x34|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x34|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x34|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x34; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x34|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x35|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x35; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x35|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x35|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x35|0x35|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x35; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x35|0x35|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x38; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x38|0x35|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x35|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x35|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x35|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x35|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x35; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x35|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x36|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x36; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x36|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x36|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x36|0x36|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x36; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x36|0x36|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x39; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x39|0x36|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x36|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x36|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x36|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x36|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x36; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x36|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x37|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x37; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x37|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x37|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x37|0x37|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x37; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x37|0x37|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x3a|0x37|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x37|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x37|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x37|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x37|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x37; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x37|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x38|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x38; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x38|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x38|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x38|0x38|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x38; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x38|0x38|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x3b|0x38|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x38|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x38|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x38|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x38|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x38; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x38|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x39|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x39; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x39|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x39|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x39|0x39|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x39; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x39|0x39|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x3c|0x39|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x39|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x39|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x39|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x39|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x39; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x39|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3a|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3a|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3a|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3a|0x3a|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3a; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x3a|0x3a|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x3d|0x3a|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x3a|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x3a|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3a|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3a|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3a; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3a|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3b|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3b|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3b|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3b|0x3b|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3b; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x3b|0x3b|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x3e|0x3b|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x3b|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x3b|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3b|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3b|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3b; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3b|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3c|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3c|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3c|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3c|0x3c|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3c; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x3c|0x3c|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x3c|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x3c|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x3c|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3c|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3c|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3c; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3c|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3d|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3d|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3d|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3d|0x3d|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3d; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x3d|0x3d|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x40; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x40|0x3d|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x3d|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x3d|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3d|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3d|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3d; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3d|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3e|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3e|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3e|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3e|0x3e|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3e; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x3e|0x3e|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x41; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x41|0x3e|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x3e|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x3e|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3e|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3e|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3e; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3e|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3f|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3f|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3f|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x3f|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3f; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x3f|0x3f|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x42; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x42|0x3f|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x3f|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x3f|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3f|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3f|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3f; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3f|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x40|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x40; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x40|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x40|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x40|0x40|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x40; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x40|0x40|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x43; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x43|0x40|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x40|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x40|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x40|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x40|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x40; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x40|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x41|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x41; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x41|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x41|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x41|0x41|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x41; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x41|0x41|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x44; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x44|0x41|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x41|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x41|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x41|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x41|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x41; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x41|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x42|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x42; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x42|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x42|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x42|0x42|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x42; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x42|0x42|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x45; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x45|0x42|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x42|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x42|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x42|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x42|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x42; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x42|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x43|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x43; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x43|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x43|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x43|0x43|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x43; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x43|0x43|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x46; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x46|0x43|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x43|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x43|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x43|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x43|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x43; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x43|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x44|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x44; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x44|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x44|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x44|0x44|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x44; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x44|0x44|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x47; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x47|0x44|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x44|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x44|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x44|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x44|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x44; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x44|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x45|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x45; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x45|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x45|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x45|0x45|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x45; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x45|0x45|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x48; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x48|0x45|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x45|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x45|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x45|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x45|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x45; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x45|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x46|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x46; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x46|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x46|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x46|0x46|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x46; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x46|0x46|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x49; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x49|0x46|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x46|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x46|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x46|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x46|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x46; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x46|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x47|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x47; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x47|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x47|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x47|0x47|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x47; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x47|0x47|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x4a|0x47|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x47|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x47|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x47|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x47|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x47; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x47|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x48|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x48; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x48|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x48|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x48|0x48|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x48; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x48|0x48|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x4b|0x48|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x48|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x48|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x48|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x48|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x48; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x48|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x49|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x49; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x49|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x49|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x49|0x49|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x49; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x49|0x49|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x4c|0x49|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x49|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x49|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x49|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x49|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x49; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x49|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4a|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x4a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4a|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4a|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x4a|0x4a|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4a; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x4a|0x4a|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x4d|0x4a|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4a|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x4a|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4a|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x4a|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4a; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4a|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4b|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x4b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4b|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4b|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x4b|0x4b|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4b; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x4b|0x4b|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x4e|0x4b|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4b|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x4b|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4b|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x4b|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4b; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4b|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4c|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x4c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4c|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4c|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x4c|0x4c|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4c; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x4c|0x4c|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x4f|0x4c|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4c|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x4c|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4c|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x4c|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4c; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4c|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4d|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x4d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4d|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4d|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x4d|0x4d|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4d; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x4d|0x4d|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x50; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x50|0x4d|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4d|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x4d|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4d|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x4d|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4d; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4d|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4e|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x4e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4e|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4e|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x4e|0x4e|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4e; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x4e|0x4e|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x51; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x51|0x4e|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4e|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x4e|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4e|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x4e|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4e; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4e|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4f|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x4f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4f|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4f|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x4f|0x4f|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4f; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x4f|0x4f|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x52; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x52|0x4f|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4f|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x4f|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4f|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x4f|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4f; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4f|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x50|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x50; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x50|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x50|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x50|0x50|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x50; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x50|0x50|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x53; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x53|0x50|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x50|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x50|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x50|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x50|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x50; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x50|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x51|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x51; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x51|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x51|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x51|0x51|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x51; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x51|0x51|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x54; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x54|0x51|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x51|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x51|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x51|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x51|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x51; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x51|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x52|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x52; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x52|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x52|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x52|0x52|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x52; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x52|0x52|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x55; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x55|0x52|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x52|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x52|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x52|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x52|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x52; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x52|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x53|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x53; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x53|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x53|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x53|0x53|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x53; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x53|0x53|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x56; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x56|0x53|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x53|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x53|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x53|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x53|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x53; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x53|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x54|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x54; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x54|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x54|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x54|0x54|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x54; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x54|0x54|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x57; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x57|0x54|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x54|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x54|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x54|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x54|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x54; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x54|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x55|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x55; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x55|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x55|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x55|0x55|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x55; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x55|0x55|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x58; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x58|0x55|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x55|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x55|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x55|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x55|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x55; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x55|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x56|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x56; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x56|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x56|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x56|0x56|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x56; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x56|0x56|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x59; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x59|0x56|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x56|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x56|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x56|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x56|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x56; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x56|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x57|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x57; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x57|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x57|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x57|0x57|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x57; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x57|0x57|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x5a|0x57|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x57|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x57|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x57|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x57|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x57; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x57|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x58|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x58; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x58|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x58|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x58|0x58|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x58; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x58|0x58|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x5b|0x58|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x58|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x58|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x58|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x58|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x58; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x58|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x59|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x59; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x59|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x59|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x59|0x59|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x59; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x59|0x59|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x5c|0x59|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x59|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x59|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x59|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x59|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x59; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x59|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5a|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x5a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x5a|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5a|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x5a|0x5a|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5a; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x5a|0x5a|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x5d|0x5a|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x5a|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x5a|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x5a|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x5a|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5a; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5a|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5b|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x5b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x5b|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5b|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x5b|0x5b|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5b; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x5b|0x5b|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x5e|0x5b|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x5b|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x5b|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x5b|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x5b|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5b; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5b|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5c|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x5c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x5c|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5c|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x5c|0x5c|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5c; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x5c|0x5c|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x5f|0x5c|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x5c|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x5c|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x5c|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x5c|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5c; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5c|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5d|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x5d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x5d|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5d|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x5d|0x5d|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5d; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x5d|0x5d|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x60; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x60|0x5d|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x5d|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x5d|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x5d|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x5d|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5d; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5d|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5e|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x5e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x5e|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5e|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x5e|0x5e|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5e; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x5e|0x5e|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x61; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x5e|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x5e|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x5e|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x5e|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x5e|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5e; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5e|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5f|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x5f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x5f|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5f|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x5f|0x5f|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5f; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x5f|0x5f|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x62; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x62|0x5f|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x5f|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x5f|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x5f|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x5f|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5f; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5f|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x60|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x60; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x60|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x60|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x60|0x60|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x60; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x60|0x60|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x63; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x63|0x60|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x60|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x60|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x60|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x60|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x60; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x60|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x61; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x61|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x61; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x61|0x61|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x64; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x64|0x61|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x61|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x61|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x61; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x62|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x62; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x62|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x62|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x62|0x62|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x62; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x62|0x62|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x65; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x65|0x62|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x62|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x62|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x62|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x62|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x62; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x62|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x63|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x63; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x63|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x63|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x63|0x63|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x63; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x63|0x63|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x66; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x66|0x63|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x63|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x63|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x63|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x63|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x63; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x63|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x64|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x64; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x64|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x64|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x64|0x64|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x64; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x64|0x64|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x67; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x67|0x64|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x64|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x64|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x64|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x64|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x64; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x64|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x65|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x65; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x65|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x65|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x65|0x65|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x65; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x65|0x65|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x68; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x68|0x65|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x65|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x65|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x65|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x65|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x65; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x65|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x66|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x66; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x66|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x66|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x66|0x66|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x66; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x66|0x66|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x69; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x69|0x66|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x66|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x66|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x66|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x66|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x66; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x66|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x67|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x67; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x67|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x67|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x67|0x67|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x67; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x67|0x67|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x6a|0x67|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x67|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x67|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x67|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x67|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x67; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x67|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x68|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x68; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x68|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x68|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x68|0x68|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x68; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x68|0x68|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x6b|0x68|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x68|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x68|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x68|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x68|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x68; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x68|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x69|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x69; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x69|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x69|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x69|0x69|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x69; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x69|0x69|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x6c|0x69|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x69|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x69|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x69|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x69|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x69; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x69|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6a|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x6a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x6a|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6a|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x6a|0x6a|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6a; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x6a|0x6a|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x6d|0x6a|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x6a|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x6a|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x6a|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x6a|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6a; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6a|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6b|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x6b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x6b|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6b|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x6b|0x6b|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6b; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x6b|0x6b|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x6e|0x6b|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x6b|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x6b|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x6b|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x6b|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6b; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6b|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6c|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x6c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x6c|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6c|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x6c|0x6c|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6c; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x6c|0x6c|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x6f|0x6c|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x6c|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x6c|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x6c|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x6c|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6c; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6c|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6d|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x6d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x6d|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6d|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x6d|0x6d|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6d; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x6d|0x6d|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x70; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x70|0x6d|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x6d|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x6d|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x6d|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x6d|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6d; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6d|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6e|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x6e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x6e|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6e|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x6e|0x6e|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6e; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x6e|0x6e|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x71; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x71|0x6e|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x6e|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x6e|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x6e|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x6e|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6e; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6e|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6f|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x6f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x6f|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6f|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x6f|0x6f|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6f; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x6f|0x6f|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x72; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x72|0x6f|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x6f|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x6f|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x6f|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x6f|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6f; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6f|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x70|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x70; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x70|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x70|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x70|0x70|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x70; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x70|0x70|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x73; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x73|0x70|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x70|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x70|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x70|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x70|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x70; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x70|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x71|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x71; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x71|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x71|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x71|0x71|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x71; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x71|0x71|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x74; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x74|0x71|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x71|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x71|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x71|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x71|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x71; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x71|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x72|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x72; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x72|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x72|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x72|0x72|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x72; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x72|0x72|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x75; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x75|0x72|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x72|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x72|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x72|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x72|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x72; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x72|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x73|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x73; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x73|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x73|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x73|0x73|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x73; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x73|0x73|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x76; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x76|0x73|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x73|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x73|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x73|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x73|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x73; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x73|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x74|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x74; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x74|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x74|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x74|0x74|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x74; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x74|0x74|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x77; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x77|0x74|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x74|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x74|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x74|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x74|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x74; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x74|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x75|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x75; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x75|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x75|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x75|0x75|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x75; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x75|0x75|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x78; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x78|0x75|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x75|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x75|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x75|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x75|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x75; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x75|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x76|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x76; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x76|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x76|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x76|0x76|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x76; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x76|0x76|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x79; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x79|0x76|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x76|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x76|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x76|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x76|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x76; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x76|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x77|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x77; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x77|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x77|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x77|0x77|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x77; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x77|0x77|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x7a|0x77|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x77|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x77|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x77|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x77|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x77; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x77|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x78|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x78; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x78|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x78|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x78|0x78|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x78; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x78|0x78|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x7b|0x78|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x78|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x78|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x78|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x78|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x78; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x78|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x79|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x79; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x79|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x79|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x79|0x79|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x79; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x79|0x79|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x7c|0x79|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x79|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x79|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x79|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x79|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x79; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x79|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7a|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x7a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x7a|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7a|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x7a|0x7a|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7a; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x7a|0x7a|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x7d|0x7a|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x7a|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x7a|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x7a|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x7a|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7a; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7a|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7b|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x7b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x7b|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7b|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x7b|0x7b|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7b; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x7b|0x7b|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x7e|0x7b|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x7b|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x7b|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x7b|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x7b|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7b; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7b|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7c|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x7c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x7c|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7c|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x7c|0x7c|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7c; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x7c|0x7c|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x7f|0x7c|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x7c|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x7c|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x7c|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x7c|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7c; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7c|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7d|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x7d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x7d|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7d|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x7d|0x7d|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7d; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x7d|0x7d|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x80; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x80|0x7d|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x7d|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x7d|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x7d|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x7d|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7d; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7d|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7e|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x7e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x7e|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7e|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x7e|0x7e|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7e; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x7e|0x7e|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x81; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x81|0x7e|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x7e|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x7e|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x7e|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x7e|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7e; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7e|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7f|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x7f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x7f|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7f|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x7f|0x7f|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7f; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x7f|0x7f|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x82; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x82|0x7f|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x7f|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x7f|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x7f|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x7f|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7f; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7f|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x80|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x80; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x80|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x80|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x80|0x80|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x80; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x80|0x80|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x83; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x83|0x80|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x80|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x80|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x80|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x80|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x80; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x80|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x81|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x81; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x81|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x81|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x81|0x81|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x81; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x81|0x81|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x84; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x84|0x81|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x81|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x81|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x81|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x81|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x81; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x81|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x82|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x82; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x82|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x82|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x82|0x82|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x82; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x82|0x82|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x85; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x85|0x82|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x82|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x82|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x82|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x82|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x82; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x82|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x83|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x83; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x83|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x83|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x83|0x83|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x83; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x83|0x83|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x86; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x86|0x83|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x83|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x83|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x83|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x83|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x83; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x83|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x84|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x84; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x84|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x84|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x84|0x84|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x84; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x84|0x84|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x87; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x87|0x84|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x84|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x84|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x84|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x84|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x84; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x84|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x85|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x85; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x85|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x85|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x85|0x85|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x85; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x85|0x85|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x88; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x88|0x85|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x85|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x85|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x85|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x85|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x85; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x85|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x86|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x86; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x86|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x86|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x86|0x86|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x86; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x86|0x86|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x89; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x89|0x86|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x86|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x86|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x86|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x86|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x86; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x86|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x87|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x87; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x87|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x87|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x87|0x87|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x87; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x87|0x87|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x8a|0x87|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x87|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x87|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x87|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x87|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x87; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x87|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x88|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x88; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x88|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x88|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x88|0x88|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x88; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x88|0x88|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x8b|0x88|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x88|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x88|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x88|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x88|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x88; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x88|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x89|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x89; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x89|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x89|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x89|0x89|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x89; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x89|0x89|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x8c|0x89|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x89|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x89|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x89|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x89|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x89; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x89|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8a|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x8a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x8a|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8a|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x8a|0x8a|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8a; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x8a|0x8a|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x8d|0x8a|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x8a|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x8a|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x8a|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x8a|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8a; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8a|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8b|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x8b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x8b|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8b|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x8b|0x8b|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8b; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x8b|0x8b|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x8e|0x8b|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x8b|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x8b|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x8b|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x8b|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8b; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8b|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8c|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x8c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x8c|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8c|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x8c|0x8c|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8c; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x8c|0x8c|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x8f|0x8c|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x8c|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x8c|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x8c|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x8c|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8c; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8c|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8d|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x8d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x8d|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8d|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x8d|0x8d|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8d; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x8d|0x8d|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x90; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x90|0x8d|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x8d|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x8d|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x8d|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x8d|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8d; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8d|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8e|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x8e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x8e|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8e|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x8e|0x8e|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8e; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x8e|0x8e|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x91; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x91|0x8e|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x8e|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x8e|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x8e|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x8e|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8e; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8e|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8f|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x8f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x8f|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8f|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x8f|0x8f|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8f; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x8f|0x8f|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x92; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x92|0x8f|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x8f|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x8f|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x8f|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x8f|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8f; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8f|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x90|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x90; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x90|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x90|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x90|0x90|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x90; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x90|0x90|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x93; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x93|0x90|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x90|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x90|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x90|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x90|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x90; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x90|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x91|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x91; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x91|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x91|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x91|0x91|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x91; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x91|0x91|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x94; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x94|0x91|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x91|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x91|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x91|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x91|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x91; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x91|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x92|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x92; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x92|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x92|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x92|0x92|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x92; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x92|0x92|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x95; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x95|0x92|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x92|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x92|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x92|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x92|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x92; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x92|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x93|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x93; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x93|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x93|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x93|0x93|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x93; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x93|0x93|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x96; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x96|0x93|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x93|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x93|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x93|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x93|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x93; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x93|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x94|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x94; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x94|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x94|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x94|0x94|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x94; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x94|0x94|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x97; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x97|0x94|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x94|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x94|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x94|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x94|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x94; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x94|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x95|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x95; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x95|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x95|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x95|0x95|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x95; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x95|0x95|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x98; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x98|0x95|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x95|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x95|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x95|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x95|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x95; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x95|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x96|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x96; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x96|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x96|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x96|0x96|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x96; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x96|0x96|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x99; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x99|0x96|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x96|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x96|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x96|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x96|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x96; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x96|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x97|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x97; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x97|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x97|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x97|0x97|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x97; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x97|0x97|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x9a|0x97|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x97|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x97|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x97|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x97|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x97; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x97|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x98|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x98; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x98|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x98|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x98|0x98|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x98; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x98|0x98|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x9b|0x98|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x98|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x98|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x98|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x98|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x98; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x98|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x99|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x99; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x99|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x99|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x99|0x99|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x99; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x99|0x99|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x9c|0x99|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x99|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x99|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x99|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x99|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x99; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x99|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9a|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x9a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x9a|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9a|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x9a|0x9a|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9a; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x9a|0x9a|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x9d|0x9a|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x9a|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x9a|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x9a|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x9a|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9a; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9a|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9b|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x9b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x9b|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9b|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x9b|0x9b|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9b; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x9b|0x9b|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x9e|0x9b|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x9b|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x9b|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x9b|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x9b|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9b; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9b|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9c|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x9c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x9c|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9c|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x9c|0x9c|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9c; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x9c|0x9c|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0x9f|0x9c|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x9c|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x9c|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x9c|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x9c|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9c; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9c|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9d|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x9d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x9d|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9d|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x9d|0x9d|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9d; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x9d|0x9d|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xa0|0x9d|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x9d|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x9d|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x9d|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x9d|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9d; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9d|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9e|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x9e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x9e|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9e|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x9e|0x9e|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9e; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x9e|0x9e|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xa1|0x9e|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x9e|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x9e|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x9e|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x9e|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9e; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9e|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9f|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x9f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x9f|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9f|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x9f|0x9f|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9f; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x9f|0x9f|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xa2|0x9f|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x9f|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0x9f|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x9f|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x9f|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9f; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9f|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa0|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xa0; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa0|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa0|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xa0|0xa0|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa0; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa0|0xa0|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa3; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xa3|0xa0|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xa0|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xa0|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa0|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa0|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa0; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa0|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa1|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xa1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa1|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa1|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xa1|0xa1|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa1; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa1|0xa1|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa4; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xa4|0xa1|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xa1|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xa1|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa1|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa1|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa1; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa1|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa2|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xa2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa2|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa2|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xa2|0xa2|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa2; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa2|0xa2|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa5; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xa5|0xa2|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xa2|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xa2|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa2|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa2|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa2; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa2|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa3|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xa3; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa3|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa3|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xa3|0xa3|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa3; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa3|0xa3|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa6; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xa6|0xa3|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xa3|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xa3|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa3|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa3|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa3; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa3|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa4|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xa4; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa4|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa4|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xa4|0xa4|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa4; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa4|0xa4|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa7; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xa7|0xa4|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xa4|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xa4|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa4|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa4|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa4; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa4|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa5|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xa5; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa5|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa5|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xa5|0xa5|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa5; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa5|0xa5|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa8; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xa8|0xa5|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xa5|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xa5|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa5|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa5|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa5; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa5|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa6|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xa6|0xa6|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa6; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa6|0xa6|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa9; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xa9|0xa6|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xa6|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xa6|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa6|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa6; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa7|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xa7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa7|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa7|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xa7|0xa7|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa7; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa7|0xa7|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xaa; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xaa|0xa7|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xa7|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xa7|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa7|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa7|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa7; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa7|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa8|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xa8; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa8|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa8|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xa8|0xa8|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa8; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa8|0xa8|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xab; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xab|0xa8|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xa8|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xa8|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa8|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa8|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa8; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa8|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa9|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xa9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa9|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa9|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xa9|0xa9|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa9; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa9|0xa9|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xac; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xac|0xa9|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xa9|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xa9|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa9|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa9|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa9; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa9|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xaa|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xaa; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xaa|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xaa|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xaa|0xaa|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xaa; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xaa|0xaa|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xad; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xad|0xaa|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xaa|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xaa|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xaa|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xaa|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xaa; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xaa|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xab|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xab; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xab|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xab|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xab|0xab|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xab; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xab|0xab|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xae; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xae|0xab|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xab|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xab|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xab|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xab|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xab; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xab|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xac|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xac; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xac|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xac|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xac|0xac|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xac; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xac|0xac|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xaf; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xaf|0xac|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xac|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xac|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xac|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xac|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xac; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xac|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xad|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xad; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xad|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xad|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xad|0xad|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xad; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xad|0xad|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xb0|0xad|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xad|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xad|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xad|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xad|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xad; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xad|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xae|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xae; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xae|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xae|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xae|0xae|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xae; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xae|0xae|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xb1|0xae|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xae|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xae|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xae|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xae|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xae; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xae|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xaf|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xaf; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xaf|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xaf|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xaf|0xaf|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xaf; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xaf|0xaf|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xb2|0xaf|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xaf|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xaf|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xaf|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xaf|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xaf; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xaf|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb0|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xb0; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb0|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb0|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xb0|0xb0|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb0; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb0|0xb0|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb3; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xb3|0xb0|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xb0|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xb0|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb0|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb0|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb0; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb0|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb1|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xb1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb1|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb1|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xb1|0xb1|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb1; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb1|0xb1|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb4; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xb4|0xb1|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xb1|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xb1|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb1|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb1|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb1; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb1|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb2|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xb2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb2|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb2|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xb2|0xb2|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb2; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb2|0xb2|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb5; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xb5|0xb2|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xb2|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xb2|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb2|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb2|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb2; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb2|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb3|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xb3; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb3|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb3|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xb3|0xb3|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb3; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb3|0xb3|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb6; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xb6|0xb3|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xb3|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xb3|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb3|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb3|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb3; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb3|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb4|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xb4; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb4|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb4|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xb4|0xb4|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb4; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb4|0xb4|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb7; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xb7|0xb4|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xb4|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xb4|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb4|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb4|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb4; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb4|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb5|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xb5; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb5|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb5|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xb5|0xb5|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb5; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb5|0xb5|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb8; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xb8|0xb5|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xb5|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xb5|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb5|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb5|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb5; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb5|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb6|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xb6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb6|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb6|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xb6|0xb6|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb6; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb6|0xb6|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb9; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xb9|0xb6|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xb6|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xb6|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb6|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb6|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb6; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb6|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb7|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xb7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb7|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb7|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xb7|0xb7|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb7; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb7|0xb7|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xba; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xba|0xb7|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xb7|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xb7|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb7|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb7|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb7; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb7|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb8|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xb8; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb8|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb8|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xb8|0xb8|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb8; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb8|0xb8|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xbb; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xbb|0xb8|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xb8|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xb8|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb8|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb8|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb8; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb8|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb9|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xb9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb9|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb9|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xb9|0xb9|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb9; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb9|0xb9|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xbc; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xbc|0xb9|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xb9|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xb9|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb9|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb9|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb9; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb9|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xba|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xba; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xba|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xba|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xba|0xba|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xba; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xba|0xba|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xbd; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xbd|0xba|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xba|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xba|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xba|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xba|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xba; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xba|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xbb|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xbb; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xbb|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xbb|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xbb|0xbb|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xbb; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xbb|0xbb|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xbe; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xbe|0xbb|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xbb|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xbb|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xbb|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xbb|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xbb; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xbb|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xbc|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xbc; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xbc|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xbc|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xbc|0xbc|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xbc; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xbc|0xbc|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xbf; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xbf|0xbc|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xbc|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xbc|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xbc|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xbc|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xbc; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xbc|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xbd|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xbd; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xbd|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xbd|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xbd|0xbd|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xbd; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xbd|0xbd|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xc0|0xbd|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xbd|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xbd|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xbd|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xbd|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xbd; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xbd|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xbe|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xbe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xbe|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xbe|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xbe|0xbe|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xbe; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xbe|0xbe|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xc1|0xbe|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xbe|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xbe|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xbe|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xbe|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xbe; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xbe|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xbf|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xbf; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xbf|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xbf|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xbf|0xbf|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xbf; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xbf|0xbf|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xc2|0xbf|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xbf|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xbf|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xbf|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xbf|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xbf; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xbf|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc0|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xc0; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc0|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc0|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xc0|0xc0|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc0; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xc0|0xc0|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc3; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xc3|0xc0|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xc0|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xc0|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc0|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc0|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc0; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc0|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc1|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xc1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc1|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc1|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xc1|0xc1|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc1; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xc1|0xc1|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc4; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xc4|0xc1|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xc1|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xc1|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc1|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc1|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc1; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc1|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc2|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xc2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc2|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc2|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xc2|0xc2|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc2; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xc2|0xc2|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc5; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xc5|0xc2|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xc2|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xc2|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc2|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc2|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc2; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc2|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc3|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xc3; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc3|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc3|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xc3|0xc3|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc3; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xc3|0xc3|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc6; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xc6|0xc3|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xc3|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xc3|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc3|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc3|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc3; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc3|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc4|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xc4; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc4|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc4|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xc4|0xc4|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc4; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xc4|0xc4|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc7; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xc7|0xc4|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xc4|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xc4|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc4|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc4|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc4; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc4|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc5|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xc5; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc5|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc5|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xc5|0xc5|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc5; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xc5|0xc5|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc8; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xc5|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xc5|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xc5|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc5|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc5|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc5; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc5|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc6|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xc6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc6|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc6|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xc6|0xc6|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc6; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xc6|0xc6|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc9; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xc9|0xc6|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xc6|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xc6|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc6|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc6|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc6; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc6|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc7|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xc7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc7|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc7|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xc7|0xc7|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc7; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xc7|0xc7|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xca; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xca|0xc7|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xc7|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x61; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x61|0xc7|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc7|0x0|0x0|0x0|0x0

0x42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x42:0x48] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc7|0x0|0x0|0x0|0x0|0x0

0x44: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc7; push(x + y);
	Opcodes@0x16a4f90[0x44:0x4a] = 0xfe|0x2f|0x0|0x86|0xc1|0x35
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc7|0x0|0x0|0x0|0x0

0x45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45:0x4b] = 0x2f|0x0|0x86|0xc1|0x35|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc8|0x0|0x0|0x0|0x0|0x0

0x47: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xc8; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47:0x4d] = 0x86|0xc1|0x35|0x2f|0x2|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc8|0x0|0x0|0x0|0x0

0x48: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x35; vmPc = 0x35;
	Opcodes@0x16a4f90[0x48:0x4e] = 0xc1|0x35|0x2f|0x2|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x35: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35:0x3b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x3
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x37: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x37:0x3d] = 0xe2|0xd2|0x2f|0x3|0xfe|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x38: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x38:0x3e] = 0xd2|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc8|0x0|0x0|0x0|0x0|0x0

0x39: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x39:0x3f] = 0x2f|0x3|0xfe|0xe2|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xc8|0x0|0x0|0x0|0x0

0x3b: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc8; push(x + y);
	Opcodes@0x16a4f90[0x3b:0x41] = 0xfe|0xe2|0x2f|0x0|0xf6|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xc8|0xc8|0x0|0x0|0x0

0x3c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xcb; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c:0x42] = 0xe2|0x2f|0x0|0xf6|0xed|0x4a
	Stack@0x16a0f80[0x304:0x2fe] = 0xcb|0xc8|0x0|0x0|0x0|0x0

0x3d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d:0x43] = 0x2f|0x0|0xf6|0xed|0x4a|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc8|0x0|0x0|0x0|0x0

0x3f: equal(x, y), opcode 0xf6
	y = pop() <- 0x0; x = pop() <- 0x0; push(x == y);
	Opcodes@0x16a4f90[0x3f:0x45] = 0xf6|0xed|0x4a|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x0|0xc8|0x0|0x0|0x0

0x40: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x4a; if (x != 0) vmPc = 0x4a;
	Opcodes@0x16a4f90[0x40:0x46] = 0xed|0x4a|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc8|0x0|0x0|0x0|0x0
	// end of strlen()


0x4a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4a:0x50] = 0x2f|0x2|0x86|0x2f|0x0|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc8|0x0|0x0|0x0|0x0|0x0

0x4c: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2; x = pop() <- 0xc8; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4c:0x52] = 0x86|0x2f|0x0|0x2f|0x0|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xc8|0x0|0x0|0x0|0x0

0x4d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4d:0x53] = 0x2f|0x0|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4f:0x55] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x51: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x0; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x51:0x57] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x52:0x58] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x54: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x54:0x5a] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x55: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x55:0x5b] = 0xd2|0x2f|0x103|0xfe|0x2f|0xcc
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x56: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x56:0x5c] = 0x2f|0x103|0xfe|0x2f|0xcc|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x0|0x0|0x0|0x0|0x0

0x58: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x0; push(x + y);
	Opcodes@0x16a4f90[0x58:0x5e] = 0xfe|0x2f|0xcc|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x0|0x0|0x0|0x0|0x0

0x59: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xcc; push(0xcc);
	Opcodes@0x16a4f90[0x59:0x5f] = 0x2f|0xcc|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x0|0x0|0x0|0x0|0x0

0x5b: swap(x, y), opcode 0xf8
	y = pop() <- 0xcc; x = pop() <- 0x103; push(y); push(x);
	Opcodes@0x16a4f90[0x5b:0x61] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xcc|0x103|0x0|0x0|0x0|0x0

0x5c: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x103; x = pop() <- 0xcc; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x5c:0x62] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0xcc|0x0|0x0|0x0|0x0
	// vmStack[0x103] = imm = 0xcc

0x5d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x5d:0x63] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x5f: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x0; push(x + y);
	Opcodes@0x16a4f90[0x5f:0x65] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x0|0x0|0x0|0x0|0x0

0x60: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x60:0x66] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x62: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x62:0x68] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1|0x0|0x0|0x0|0x0

0x63: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x63:0x69] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x65: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x65:0x6b] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x66: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x66:0x6c] = 0xd2|0x2f|0x103|0xfe|0x2f|0xdb
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x67: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x67:0x6d] = 0x2f|0x103|0xfe|0x2f|0xdb|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1|0x0|0x0|0x0|0x0

0x69: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x1; push(x + y);
	Opcodes@0x16a4f90[0x69:0x6f] = 0xfe|0x2f|0xdb|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x1|0x1|0x0|0x0|0x0

0x6a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xdb; push(0xdb);
	Opcodes@0x16a4f90[0x6a:0x70] = 0x2f|0xdb|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x104|0x1|0x0|0x0|0x0|0x0

0x6c: swap(x, y), opcode 0xf8
	y = pop() <- 0xdb; x = pop() <- 0x104; push(y); push(x);
	Opcodes@0x16a4f90[0x6c:0x72] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xdb|0x104|0x1|0x0|0x0|0x0

0x6d: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x104; x = pop() <- 0xdb; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x6d:0x73] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x104|0xdb|0x1|0x0|0x0|0x0

0x6e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x6e:0x74] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x70: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1; push(x + y);
	Opcodes@0x16a4f90[0x70:0x76] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1|0x0|0x0|0x0|0x0

0x71: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x71:0x77] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2|0x0|0x0|0x0|0x0|0x0

0x73: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x73:0x79] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2|0x0|0x0|0x0|0x0

0x74: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x74:0x7a] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x76: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x76:0x7c] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x77: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x77:0x7d] = 0xd2|0x2f|0x103|0xfe|0x2f|0x85
	Stack@0x16a0f80[0x303:0x2fd] = 0x2|0x0|0x0|0x0|0x0|0x0

0x78: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x78:0x7e] = 0x2f|0x103|0xfe|0x2f|0x85|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x2|0x0|0x0|0x0|0x0

0x7a: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x2; push(x + y);
	Opcodes@0x16a4f90[0x7a:0x80] = 0xfe|0x2f|0x85|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x2|0x2|0x0|0x0|0x0

0x7b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x85; push(0x85);
	Opcodes@0x16a4f90[0x7b:0x81] = 0x2f|0x85|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x105|0x2|0x0|0x0|0x0|0x0

0x7d: swap(x, y), opcode 0xf8
	y = pop() <- 0x85; x = pop() <- 0x105; push(y); push(x);
	Opcodes@0x16a4f90[0x7d:0x83] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x85|0x105|0x2|0x0|0x0|0x0

0x7e: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x105; x = pop() <- 0x85; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x7e:0x84] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x105|0x85|0x2|0x0|0x0|0x0

0x7f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x7f:0x85] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2|0x0|0x0|0x0|0x0|0x0

0x81: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2; push(x + y);
	Opcodes@0x16a4f90[0x81:0x87] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2|0x0|0x0|0x0|0x0

0x82: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x82:0x88] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0x0|0x0|0x0|0x0|0x0

0x84: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x84:0x8a] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3|0x0|0x0|0x0|0x0

0x85: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x85:0x8b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x87: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x87:0x8d] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x88: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x88:0x8e] = 0xd2|0x2f|0x103|0xfe|0x2f|0x27
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0x0|0x0|0x0|0x0|0x0

0x89: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x89:0x8f] = 0x2f|0x103|0xfe|0x2f|0x27|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x3|0x0|0x0|0x0|0x0

0x8b: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x3; push(x + y);
	Opcodes@0x16a4f90[0x8b:0x91] = 0xfe|0x2f|0x27|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x3|0x3|0x0|0x0|0x0

0x8c: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x27; push(0x27);
	Opcodes@0x16a4f90[0x8c:0x92] = 0x2f|0x27|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x106|0x3|0x0|0x0|0x0|0x0

0x8e: swap(x, y), opcode 0xf8
	y = pop() <- 0x27; x = pop() <- 0x106; push(y); push(x);
	Opcodes@0x16a4f90[0x8e:0x94] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x27|0x106|0x3|0x0|0x0|0x0

0x8f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x106; x = pop() <- 0x27; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x8f:0x95] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x106|0x27|0x3|0x0|0x0|0x0

0x90: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x90:0x96] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0x0|0x0|0x0|0x0|0x0

0x92: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3; push(x + y);
	Opcodes@0x16a4f90[0x92:0x98] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3|0x0|0x0|0x0|0x0

0x93: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x93:0x99] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x95: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x4; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x95:0x9b] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x96: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x96:0x9c] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x98: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x98:0x9e] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x99: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x99:0x9f] = 0xd2|0x2f|0x103|0xfe|0x2f|0xe1
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x9a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x9a:0xa0] = 0x2f|0x103|0xfe|0x2f|0xe1|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x4|0x0|0x0|0x0|0x0

0x9c: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x9c:0xa2] = 0xfe|0x2f|0xe1|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x4|0x4|0x0|0x0|0x0

0x9d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xe1; push(0xe1);
	Opcodes@0x16a4f90[0x9d:0xa3] = 0x2f|0xe1|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x107|0x4|0x0|0x0|0x0|0x0

0x9f: swap(x, y), opcode 0xf8
	y = pop() <- 0xe1; x = pop() <- 0x107; push(y); push(x);
	Opcodes@0x16a4f90[0x9f:0xa5] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xe1|0x107|0x4|0x0|0x0|0x0

0xa0: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x107; x = pop() <- 0xe1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xa0:0xa6] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x107|0xe1|0x4|0x0|0x0|0x0

0xa1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0xa1:0xa7] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0xa3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0xa3:0xa9] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0xa4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xa4:0xaa] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0xa6: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x5; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xa6:0xac] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x5|0x0|0x0|0x0|0x0

0xa7: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xa7:0xad] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0xa9: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0xa9:0xaf] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0xaa: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0xaa:0xb0] = 0xd2|0x2f|0x103|0xfe|0x2f|0xa6
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0xab: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0xab:0xb1] = 0x2f|0x103|0xfe|0x2f|0xa6|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x5|0x5|0x0|0x0|0x0|0x0

0xad: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0xad:0xb3] = 0xfe|0x2f|0xa6|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x5|0x5|0x0|0x0|0x0

0xae: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xa6; push(0xa6);
	Opcodes@0x16a4f90[0xae:0xb4] = 0x2f|0xa6|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x108|0x5|0x0|0x0|0x0|0x0

0xb0: swap(x, y), opcode 0xf8
	y = pop() <- 0xa6; x = pop() <- 0x108; push(y); push(x);
	Opcodes@0x16a4f90[0xb0:0xb6] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xa6|0x108|0x5|0x0|0x0|0x0

0xb1: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x108; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xb1:0xb7] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x108|0xa6|0x5|0x0|0x0|0x0

0xb2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0xb2:0xb8] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0xb4: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0xb4:0xba] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5|0x0|0x0|0x0|0x0

0xb5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xb5:0xbb] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0x0|0x0|0x0|0x0|0x0

0xb7: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xb7:0xbd] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x6|0x0|0x0|0x0|0x0

0xb8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xb8:0xbe] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0xba: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0xba:0xc0] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0xbb: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0xbb:0xc1] = 0xd2|0x2f|0x103|0xfe|0x2f|0x90
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0x0|0x0|0x0|0x0|0x0

0xbc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0xbc:0xc2] = 0x2f|0x103|0xfe|0x2f|0x90|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x6|0x0|0x0|0x0|0x0

0xbe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x6; push(x + y);
	Opcodes@0x16a4f90[0xbe:0xc4] = 0xfe|0x2f|0x90|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x6|0x6|0x0|0x0|0x0

0xbf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x90; push(0x90);
	Opcodes@0x16a4f90[0xbf:0xc5] = 0x2f|0x90|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x109|0x6|0x0|0x0|0x0|0x0

0xc1: swap(x, y), opcode 0xf8
	y = pop() <- 0x90; x = pop() <- 0x109; push(y); push(x);
	Opcodes@0x16a4f90[0xc1:0xc7] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x90|0x109|0x6|0x0|0x0|0x0

0xc2: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x109; x = pop() <- 0x90; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xc2:0xc8] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x109|0x90|0x6|0x0|0x0|0x0

0xc3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0xc3:0xc9] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0x0|0x0|0x0|0x0|0x0

0xc5: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6; push(x + y);
	Opcodes@0x16a4f90[0xc5:0xcb] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6|0x0|0x0|0x0|0x0

0xc6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xc6:0xcc] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x7|0x0|0x0|0x0|0x0|0x0

0xc8: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xc8:0xce] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x7|0x0|0x0|0x0|0x0

0xc9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xc9:0xcf] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0xcb: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0xcb:0xd1] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0xcc: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0xcc:0xd2] = 0xd2|0x2f|0x103|0xfe|0x2f|0xa1
	Stack@0x16a0f80[0x303:0x2fd] = 0x7|0x0|0x0|0x0|0x0|0x0

0xcd: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0xcd:0xd3] = 0x2f|0x103|0xfe|0x2f|0xa1|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x7|0x7|0x0|0x0|0x0|0x0

0xcf: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x7; push(x + y);
	Opcodes@0x16a4f90[0xcf:0xd5] = 0xfe|0x2f|0xa1|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x7|0x7|0x0|0x0|0x0

0xd0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xa1; push(0xa1);
	Opcodes@0x16a4f90[0xd0:0xd6] = 0x2f|0xa1|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x10a|0x7|0x0|0x0|0x0|0x0

0xd2: swap(x, y), opcode 0xf8
	y = pop() <- 0xa1; x = pop() <- 0x10a; push(y); push(x);
	Opcodes@0x16a4f90[0xd2:0xd8] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xa1|0x10a|0x7|0x0|0x0|0x0

0xd3: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x10a; x = pop() <- 0xa1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xd3:0xd9] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x10a|0xa1|0x7|0x0|0x0|0x0

0xd4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0xd4:0xda] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x7|0x0|0x0|0x0|0x0|0x0

0xd6: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7; push(x + y);
	Opcodes@0x16a4f90[0xd6:0xdc] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7|0x0|0x0|0x0|0x0

0xd7: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xd7:0xdd] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x8|0x0|0x0|0x0|0x0|0x0

0xd9: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x8; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xd9:0xdf] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x8|0x0|0x0|0x0|0x0

0xda: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xda:0xe0] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0xdc: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0xdc:0xe2] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0xdd: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0xdd:0xe3] = 0xd2|0x2f|0x103|0xfe|0x2f|0xb9
	Stack@0x16a0f80[0x303:0x2fd] = 0x8|0x0|0x0|0x0|0x0|0x0

0xde: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0xde:0xe4] = 0x2f|0x103|0xfe|0x2f|0xb9|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x8|0x8|0x0|0x0|0x0|0x0

0xe0: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x8; push(x + y);
	Opcodes@0x16a4f90[0xe0:0xe6] = 0xfe|0x2f|0xb9|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x8|0x8|0x0|0x0|0x0

0xe1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xb9; push(0xb9);
	Opcodes@0x16a4f90[0xe1:0xe7] = 0x2f|0xb9|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x10b|0x8|0x0|0x0|0x0|0x0

0xe3: swap(x, y), opcode 0xf8
	y = pop() <- 0xb9; x = pop() <- 0x10b; push(y); push(x);
	Opcodes@0x16a4f90[0xe3:0xe9] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xb9|0x10b|0x8|0x0|0x0|0x0

0xe4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x10b; x = pop() <- 0xb9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xe4:0xea] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x10b|0xb9|0x8|0x0|0x0|0x0

0xe5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0xe5:0xeb] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x8|0x0|0x0|0x0|0x0|0x0

0xe7: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8; push(x + y);
	Opcodes@0x16a4f90[0xe7:0xed] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8|0x0|0x0|0x0|0x0

0xe8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xe8:0xee] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x9|0x0|0x0|0x0|0x0|0x0

0xea: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xea:0xf0] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x9|0x0|0x0|0x0|0x0

0xeb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xeb:0xf1] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0xed: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0xed:0xf3] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0xee: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0xee:0xf4] = 0xd2|0x2f|0x103|0xfe|0x2f|0x5a
	Stack@0x16a0f80[0x303:0x2fd] = 0x9|0x0|0x0|0x0|0x0|0x0

0xef: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0xef:0xf5] = 0x2f|0x103|0xfe|0x2f|0x5a|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x9|0x9|0x0|0x0|0x0|0x0

0xf1: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x9; push(x + y);
	Opcodes@0x16a4f90[0xf1:0xf7] = 0xfe|0x2f|0x5a|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x9|0x9|0x0|0x0|0x0

0xf2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x5a; push(0x5a);
	Opcodes@0x16a4f90[0xf2:0xf8] = 0x2f|0x5a|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x10c|0x9|0x0|0x0|0x0|0x0

0xf4: swap(x, y), opcode 0xf8
	y = pop() <- 0x5a; x = pop() <- 0x10c; push(y); push(x);
	Opcodes@0x16a4f90[0xf4:0xfa] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x5a|0x10c|0x9|0x0|0x0|0x0

0xf5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x10c; x = pop() <- 0x5a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xf5:0xfb] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x10c|0x5a|0x9|0x0|0x0|0x0

0xf6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0xf6:0xfc] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x9|0x0|0x0|0x0|0x0|0x0

0xf8: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9; push(x + y);
	Opcodes@0x16a4f90[0xf8:0xfe] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9|0x0|0x0|0x0|0x0

0xf9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xf9:0xff] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xa|0x0|0x0|0x0|0x0|0x0

0xfb: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xa; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xfb:0x101] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xa|0x0|0x0|0x0|0x0

0xfc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xfc:0x102] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0xfe: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0xfe:0x104] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0xff: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0xff:0x105] = 0xd2|0x2f|0x103|0xfe|0x2f|0x71
	Stack@0x16a0f80[0x303:0x2fd] = 0xa|0x0|0x0|0x0|0x0|0x0

0x100: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x100:0x106] = 0x2f|0x103|0xfe|0x2f|0x71|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0xa|0xa|0x0|0x0|0x0|0x0

0x102: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0xa; push(x + y);
	Opcodes@0x16a4f90[0x102:0x108] = 0xfe|0x2f|0x71|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0xa|0xa|0x0|0x0|0x0

0x103: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x71; push(0x71);
	Opcodes@0x16a4f90[0x103:0x109] = 0x2f|0x71|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x10d|0xa|0x0|0x0|0x0|0x0

0x105: swap(x, y), opcode 0xf8
	y = pop() <- 0x71; x = pop() <- 0x10d; push(y); push(x);
	Opcodes@0x16a4f90[0x105:0x10b] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x71|0x10d|0xa|0x0|0x0|0x0

0x106: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x10d; x = pop() <- 0x71; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x106:0x10c] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x10d|0x71|0xa|0x0|0x0|0x0

0x107: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x107:0x10d] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa|0x0|0x0|0x0|0x0|0x0

0x109: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa; push(x + y);
	Opcodes@0x16a4f90[0x109:0x10f] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa|0x0|0x0|0x0|0x0

0x10a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x10a:0x110] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb|0x0|0x0|0x0|0x0|0x0

0x10c: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xb; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x10c:0x112] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xb|0x0|0x0|0x0|0x0

0x10d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x10d:0x113] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x10f: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x10f:0x115] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x110: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x110:0x116] = 0xd2|0x2f|0x103|0xfe|0x2f|0xfa
	Stack@0x16a0f80[0x303:0x2fd] = 0xb|0x0|0x0|0x0|0x0|0x0

0x111: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x111:0x117] = 0x2f|0x103|0xfe|0x2f|0xfa|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0xb|0xb|0x0|0x0|0x0|0x0

0x113: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0xb; push(x + y);
	Opcodes@0x16a4f90[0x113:0x119] = 0xfe|0x2f|0xfa|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0xb|0xb|0x0|0x0|0x0

0x114: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xfa; push(0xfa);
	Opcodes@0x16a4f90[0x114:0x11a] = 0x2f|0xfa|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x10e|0xb|0x0|0x0|0x0|0x0

0x116: swap(x, y), opcode 0xf8
	y = pop() <- 0xfa; x = pop() <- 0x10e; push(y); push(x);
	Opcodes@0x16a4f90[0x116:0x11c] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xfa|0x10e|0xb|0x0|0x0|0x0

0x117: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x10e; x = pop() <- 0xfa; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x117:0x11d] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x10e|0xfa|0xb|0x0|0x0|0x0

0x118: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x118:0x11e] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb|0x0|0x0|0x0|0x0|0x0

0x11a: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb; push(x + y);
	Opcodes@0x16a4f90[0x11a:0x120] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb|0x0|0x0|0x0|0x0

0x11b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x11b:0x121] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc|0x0|0x0|0x0|0x0|0x0

0x11d: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xc; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x11d:0x123] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xc|0x0|0x0|0x0|0x0

0x11e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x11e:0x124] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x120: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x120:0x126] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x121: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x121:0x127] = 0xd2|0x2f|0x103|0xfe|0x2f|0x5e
	Stack@0x16a0f80[0x303:0x2fd] = 0xc|0x0|0x0|0x0|0x0|0x0

0x122: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x122:0x128] = 0x2f|0x103|0xfe|0x2f|0x5e|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0xc|0xc|0x0|0x0|0x0|0x0

0x124: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0xc; push(x + y);
	Opcodes@0x16a4f90[0x124:0x12a] = 0xfe|0x2f|0x5e|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0xc|0xc|0x0|0x0|0x0

0x125: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x5e; push(0x5e);
	Opcodes@0x16a4f90[0x125:0x12b] = 0x2f|0x5e|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x10f|0xc|0x0|0x0|0x0|0x0

0x127: swap(x, y), opcode 0xf8
	y = pop() <- 0x5e; x = pop() <- 0x10f; push(y); push(x);
	Opcodes@0x16a4f90[0x127:0x12d] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x5e|0x10f|0xc|0x0|0x0|0x0

0x128: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x10f; x = pop() <- 0x5e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x128:0x12e] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x10f|0x5e|0xc|0x0|0x0|0x0

0x129: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x129:0x12f] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc|0x0|0x0|0x0|0x0|0x0

0x12b: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc; push(x + y);
	Opcodes@0x16a4f90[0x12b:0x131] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc|0x0|0x0|0x0|0x0

0x12c: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x12c:0x132] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xd|0x0|0x0|0x0|0x0|0x0

0x12e: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xd; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x12e:0x134] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xd|0x0|0x0|0x0|0x0

0x12f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x12f:0x135] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x131: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x131:0x137] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x132: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x132:0x138] = 0xd2|0x2f|0x103|0xfe|0x2f|0x44
	Stack@0x16a0f80[0x303:0x2fd] = 0xd|0x0|0x0|0x0|0x0|0x0

0x133: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x133:0x139] = 0x2f|0x103|0xfe|0x2f|0x44|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0xd|0xd|0x0|0x0|0x0|0x0

0x135: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0xd; push(x + y);
	Opcodes@0x16a4f90[0x135:0x13b] = 0xfe|0x2f|0x44|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0xd|0xd|0x0|0x0|0x0

0x136: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x44; push(0x44);
	Opcodes@0x16a4f90[0x136:0x13c] = 0x2f|0x44|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x110|0xd|0x0|0x0|0x0|0x0

0x138: swap(x, y), opcode 0xf8
	y = pop() <- 0x44; x = pop() <- 0x110; push(y); push(x);
	Opcodes@0x16a4f90[0x138:0x13e] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x44|0x110|0xd|0x0|0x0|0x0

0x139: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x110; x = pop() <- 0x44; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x139:0x13f] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x110|0x44|0xd|0x0|0x0|0x0

0x13a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x13a:0x140] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xd|0x0|0x0|0x0|0x0|0x0

0x13c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xd; push(x + y);
	Opcodes@0x16a4f90[0x13c:0x142] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd|0x0|0x0|0x0|0x0

0x13d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x13d:0x143] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xe|0x0|0x0|0x0|0x0|0x0

0x13f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x13f:0x145] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xe|0x0|0x0|0x0|0x0

0x140: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x140:0x146] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x142: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x142:0x148] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x143: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x143:0x149] = 0xd2|0x2f|0x103|0xfe|0x2f|0xaa
	Stack@0x16a0f80[0x303:0x2fd] = 0xe|0x0|0x0|0x0|0x0|0x0

0x144: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x144:0x14a] = 0x2f|0x103|0xfe|0x2f|0xaa|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0xe|0xe|0x0|0x0|0x0|0x0

0x146: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0xe; push(x + y);
	Opcodes@0x16a4f90[0x146:0x14c] = 0xfe|0x2f|0xaa|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0xe|0xe|0x0|0x0|0x0

0x147: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xaa; push(0xaa);
	Opcodes@0x16a4f90[0x147:0x14d] = 0x2f|0xaa|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x111|0xe|0x0|0x0|0x0|0x0

0x149: swap(x, y), opcode 0xf8
	y = pop() <- 0xaa; x = pop() <- 0x111; push(y); push(x);
	Opcodes@0x16a4f90[0x149:0x14f] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xaa|0x111|0xe|0x0|0x0|0x0

0x14a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x111; x = pop() <- 0xaa; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x14a:0x150] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x111|0xaa|0xe|0x0|0x0|0x0

0x14b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x14b:0x151] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xe|0x0|0x0|0x0|0x0|0x0

0x14d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xe; push(x + y);
	Opcodes@0x16a4f90[0x14d:0x153] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe|0x0|0x0|0x0|0x0

0x14e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x14e:0x154] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xf|0x0|0x0|0x0|0x0|0x0

0x150: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xf; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x150:0x156] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0xf|0x0|0x0|0x0|0x0

0x151: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x151:0x157] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x153: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x153:0x159] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x154: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x154:0x15a] = 0xd2|0x2f|0x103|0xfe|0x2f|0x49
	Stack@0x16a0f80[0x303:0x2fd] = 0xf|0x0|0x0|0x0|0x0|0x0

0x155: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x155:0x15b] = 0x2f|0x103|0xfe|0x2f|0x49|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0xf|0x0|0x0|0x0|0x0

0x157: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0xf; push(x + y);
	Opcodes@0x16a4f90[0x157:0x15d] = 0xfe|0x2f|0x49|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0xf|0xf|0x0|0x0|0x0

0x158: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x49; push(0x49);
	Opcodes@0x16a4f90[0x158:0x15e] = 0x2f|0x49|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x112|0xf|0x0|0x0|0x0|0x0

0x15a: swap(x, y), opcode 0xf8
	y = pop() <- 0x49; x = pop() <- 0x112; push(y); push(x);
	Opcodes@0x16a4f90[0x15a:0x160] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x49|0x112|0xf|0x0|0x0|0x0

0x15b: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x112; x = pop() <- 0x49; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x15b:0x161] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x112|0x49|0xf|0x0|0x0|0x0

0x15c: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x15c:0x162] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xf|0x0|0x0|0x0|0x0|0x0

0x15e: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xf; push(x + y);
	Opcodes@0x16a4f90[0x15e:0x164] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf|0x0|0x0|0x0|0x0

0x15f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x15f:0x165] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x161: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x10; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x161:0x167] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x162: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x162:0x168] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x164: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x164:0x16a] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x165: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x165:0x16b] = 0xd2|0x2f|0x103|0xfe|0x2f|0xbf
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x166: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x166:0x16c] = 0x2f|0x103|0xfe|0x2f|0xbf|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x10|0x10|0x0|0x0|0x0|0x0

0x168: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x168:0x16e] = 0xfe|0x2f|0xbf|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x10|0x10|0x0|0x0|0x0

0x169: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xbf; push(0xbf);
	Opcodes@0x16a4f90[0x169:0x16f] = 0x2f|0xbf|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x113|0x10|0x0|0x0|0x0|0x0

0x16b: swap(x, y), opcode 0xf8
	y = pop() <- 0xbf; x = pop() <- 0x113; push(y); push(x);
	Opcodes@0x16a4f90[0x16b:0x171] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xbf|0x113|0x10|0x0|0x0|0x0

0x16c: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x113; x = pop() <- 0xbf; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x16c:0x172] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x113|0xbf|0x10|0x0|0x0|0x0

0x16d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x16d:0x173] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x16f: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x16f:0x175] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x10|0x0|0x0|0x0|0x0

0x170: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x170:0x176] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x11|0x0|0x0|0x0|0x0|0x0

0x172: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x11; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x172:0x178] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x11|0x0|0x0|0x0|0x0

0x173: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x173:0x179] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x175: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x175:0x17b] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x176: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x176:0x17c] = 0xd2|0x2f|0x103|0xfe|0x2f|0xa7
	Stack@0x16a0f80[0x303:0x2fd] = 0x11|0x0|0x0|0x0|0x0|0x0

0x177: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x177:0x17d] = 0x2f|0x103|0xfe|0x2f|0xa7|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x11|0x11|0x0|0x0|0x0|0x0

0x179: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x11; push(x + y);
	Opcodes@0x16a4f90[0x179:0x17f] = 0xfe|0x2f|0xa7|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x11|0x11|0x0|0x0|0x0

0x17a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xa7; push(0xa7);
	Opcodes@0x16a4f90[0x17a:0x180] = 0x2f|0xa7|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x114|0x11|0x0|0x0|0x0|0x0

0x17c: swap(x, y), opcode 0xf8
	y = pop() <- 0xa7; x = pop() <- 0x114; push(y); push(x);
	Opcodes@0x16a4f90[0x17c:0x182] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xa7|0x114|0x11|0x0|0x0|0x0

0x17d: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x114; x = pop() <- 0xa7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x17d:0x183] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x114|0xa7|0x11|0x0|0x0|0x0

0x17e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x17e:0x184] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x11|0x0|0x0|0x0|0x0|0x0

0x180: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x11; push(x + y);
	Opcodes@0x16a4f90[0x180:0x186] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x11|0x0|0x0|0x0|0x0

0x181: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x181:0x187] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x12|0x0|0x0|0x0|0x0|0x0

0x183: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x12; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x183:0x189] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x12|0x0|0x0|0x0|0x0

0x184: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x184:0x18a] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x186: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x186:0x18c] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x187: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x187:0x18d] = 0xd2|0x2f|0x103|0xfe|0x2f|0x25
	Stack@0x16a0f80[0x303:0x2fd] = 0x12|0x0|0x0|0x0|0x0|0x0

0x188: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x188:0x18e] = 0x2f|0x103|0xfe|0x2f|0x25|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x12|0x12|0x0|0x0|0x0|0x0

0x18a: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x12; push(x + y);
	Opcodes@0x16a4f90[0x18a:0x190] = 0xfe|0x2f|0x25|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x12|0x12|0x0|0x0|0x0

0x18b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x25; push(0x25);
	Opcodes@0x16a4f90[0x18b:0x191] = 0x2f|0x25|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x115|0x12|0x0|0x0|0x0|0x0

0x18d: swap(x, y), opcode 0xf8
	y = pop() <- 0x25; x = pop() <- 0x115; push(y); push(x);
	Opcodes@0x16a4f90[0x18d:0x193] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x25|0x115|0x12|0x0|0x0|0x0

0x18e: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x115; x = pop() <- 0x25; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x18e:0x194] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x115|0x25|0x12|0x0|0x0|0x0

0x18f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x18f:0x195] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x12|0x0|0x0|0x0|0x0|0x0

0x191: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x12; push(x + y);
	Opcodes@0x16a4f90[0x191:0x197] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x12|0x0|0x0|0x0|0x0

0x192: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x192:0x198] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x13|0x0|0x0|0x0|0x0|0x0

0x194: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x13; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x194:0x19a] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x13|0x0|0x0|0x0|0x0

0x195: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x195:0x19b] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x197: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x197:0x19d] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x198: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x198:0x19e] = 0xd2|0x2f|0x103|0xfe|0x2f|0xed
	Stack@0x16a0f80[0x303:0x2fd] = 0x13|0x0|0x0|0x0|0x0|0x0

0x199: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x199:0x19f] = 0x2f|0x103|0xfe|0x2f|0xed|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x13|0x13|0x0|0x0|0x0|0x0

0x19b: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x13; push(x + y);
	Opcodes@0x16a4f90[0x19b:0x1a1] = 0xfe|0x2f|0xed|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x13|0x13|0x0|0x0|0x0

0x19c: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xed; push(0xed);
	Opcodes@0x16a4f90[0x19c:0x1a2] = 0x2f|0xed|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x116|0x13|0x0|0x0|0x0|0x0

0x19e: swap(x, y), opcode 0xf8
	y = pop() <- 0xed; x = pop() <- 0x116; push(y); push(x);
	Opcodes@0x16a4f90[0x19e:0x1a4] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xed|0x116|0x13|0x0|0x0|0x0

0x19f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x116; x = pop() <- 0xed; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x19f:0x1a5] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x116|0xed|0x13|0x0|0x0|0x0

0x1a0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x1a0:0x1a6] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x13|0x0|0x0|0x0|0x0|0x0

0x1a2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x13; push(x + y);
	Opcodes@0x16a4f90[0x1a2:0x1a8] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x13|0x0|0x0|0x0|0x0

0x1a3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x1a3:0x1a9] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x14|0x0|0x0|0x0|0x0|0x0

0x1a5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x14; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x1a5:0x1ab] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x14|0x0|0x0|0x0|0x0

0x1a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x1a6:0x1ac] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x1a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x1a8:0x1ae] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x1a9: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x1a9:0x1af] = 0xd2|0x2f|0x103|0xfe|0x2f|0xd7
	Stack@0x16a0f80[0x303:0x2fd] = 0x14|0x0|0x0|0x0|0x0|0x0

0x1aa: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x1aa:0x1b0] = 0x2f|0x103|0xfe|0x2f|0xd7|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x14|0x14|0x0|0x0|0x0|0x0

0x1ac: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x14; push(x + y);
	Opcodes@0x16a4f90[0x1ac:0x1b2] = 0xfe|0x2f|0xd7|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x14|0x14|0x0|0x0|0x0

0x1ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xd7; push(0xd7);
	Opcodes@0x16a4f90[0x1ad:0x1b3] = 0x2f|0xd7|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x117|0x14|0x0|0x0|0x0|0x0

0x1af: swap(x, y), opcode 0xf8
	y = pop() <- 0xd7; x = pop() <- 0x117; push(y); push(x);
	Opcodes@0x16a4f90[0x1af:0x1b5] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xd7|0x117|0x14|0x0|0x0|0x0

0x1b0: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x117; x = pop() <- 0xd7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x1b0:0x1b6] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x117|0xd7|0x14|0x0|0x0|0x0

0x1b1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x1b1:0x1b7] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x14|0x0|0x0|0x0|0x0|0x0

0x1b3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x14; push(x + y);
	Opcodes@0x16a4f90[0x1b3:0x1b9] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x14|0x0|0x0|0x0|0x0

0x1b4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x1b4:0x1ba] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x15|0x0|0x0|0x0|0x0|0x0

0x1b6: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x15; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x1b6:0x1bc] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x15|0x0|0x0|0x0|0x0

0x1b7: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x1b7:0x1bd] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x1b9: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x1b9:0x1bf] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x1ba: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x1ba:0x1c0] = 0xd2|0x2f|0x103|0xfe|0x2f|0x7a
	Stack@0x16a0f80[0x303:0x2fd] = 0x15|0x0|0x0|0x0|0x0|0x0

0x1bb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x1bb:0x1c1] = 0x2f|0x103|0xfe|0x2f|0x7a|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x15|0x15|0x0|0x0|0x0|0x0

0x1bd: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x15; push(x + y);
	Opcodes@0x16a4f90[0x1bd:0x1c3] = 0xfe|0x2f|0x7a|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x15|0x15|0x0|0x0|0x0

0x1be: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x7a; push(0x7a);
	Opcodes@0x16a4f90[0x1be:0x1c4] = 0x2f|0x7a|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x118|0x15|0x0|0x0|0x0|0x0

0x1c0: swap(x, y), opcode 0xf8
	y = pop() <- 0x7a; x = pop() <- 0x118; push(y); push(x);
	Opcodes@0x16a4f90[0x1c0:0x1c6] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x7a|0x118|0x15|0x0|0x0|0x0

0x1c1: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x118; x = pop() <- 0x7a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x1c1:0x1c7] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x118|0x7a|0x15|0x0|0x0|0x0

0x1c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x1c2:0x1c8] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x15|0x0|0x0|0x0|0x0|0x0

0x1c4: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x15; push(x + y);
	Opcodes@0x16a4f90[0x1c4:0x1ca] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x15|0x0|0x0|0x0|0x0

0x1c5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x1c5:0x1cb] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x1c7: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x16; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x1c7:0x1cd] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x16|0x0|0x0|0x0|0x0

0x1c8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x1c8:0x1ce] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x1ca: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x1ca:0x1d0] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x1cb: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x1cb:0x1d1] = 0xd2|0x2f|0x103|0xfe|0x2f|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x1cc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x1cc:0x1d2] = 0x2f|0x103|0xfe|0x2f|0xfe|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x16|0x16|0x0|0x0|0x0|0x0

0x1ce: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x1ce:0x1d4] = 0xfe|0x2f|0xfe|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x16|0x16|0x0|0x0|0x0

0x1cf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xfe; push(0xfe);
	Opcodes@0x16a4f90[0x1cf:0x1d5] = 0x2f|0xfe|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x119|0x16|0x0|0x0|0x0|0x0

0x1d1: swap(x, y), opcode 0xf8
	y = pop() <- 0xfe; x = pop() <- 0x119; push(y); push(x);
	Opcodes@0x16a4f90[0x1d1:0x1d7] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xfe|0x119|0x16|0x0|0x0|0x0

0x1d2: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x119; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x1d2:0x1d8] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x119|0xfe|0x16|0x0|0x0|0x0

0x1d3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x1d3:0x1d9] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x1d5: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x1d5:0x1db] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x16|0x0|0x0|0x0|0x0

0x1d6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x1d6:0x1dc] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x17|0x0|0x0|0x0|0x0|0x0

0x1d8: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x17; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x1d8:0x1de] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x17|0x0|0x0|0x0|0x0

0x1d9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x1d9:0x1df] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x1db: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x1db:0x1e1] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x1dc: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x1dc:0x1e2] = 0xd2|0x2f|0x103|0xfe|0x2f|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x17|0x0|0x0|0x0|0x0|0x0

0x1dd: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x1dd:0x1e3] = 0x2f|0x103|0xfe|0x2f|0xe2|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x17|0x17|0x0|0x0|0x0|0x0

0x1df: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x17; push(x + y);
	Opcodes@0x16a4f90[0x1df:0x1e5] = 0xfe|0x2f|0xe2|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x17|0x17|0x0|0x0|0x0

0x1e0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xe2; push(0xe2);
	Opcodes@0x16a4f90[0x1e0:0x1e6] = 0x2f|0xe2|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x11a|0x17|0x0|0x0|0x0|0x0

0x1e2: swap(x, y), opcode 0xf8
	y = pop() <- 0xe2; x = pop() <- 0x11a; push(y); push(x);
	Opcodes@0x16a4f90[0x1e2:0x1e8] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xe2|0x11a|0x17|0x0|0x0|0x0

0x1e3: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x11a; x = pop() <- 0xe2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x1e3:0x1e9] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x11a|0xe2|0x17|0x0|0x0|0x0

0x1e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x1e4:0x1ea] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x17|0x0|0x0|0x0|0x0|0x0

0x1e6: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x17; push(x + y);
	Opcodes@0x16a4f90[0x1e6:0x1ec] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x17|0x0|0x0|0x0|0x0

0x1e7: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x1e7:0x1ed] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x18|0x0|0x0|0x0|0x0|0x0

0x1e9: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x18; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x1e9:0x1ef] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x18|0x0|0x0|0x0|0x0

0x1ea: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x1ea:0x1f0] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x1ec: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x1ec:0x1f2] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x1ed: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x1ed:0x1f3] = 0xd2|0x2f|0x103|0xfe|0x2f|0x2d
	Stack@0x16a0f80[0x303:0x2fd] = 0x18|0x0|0x0|0x0|0x0|0x0

0x1ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x1ee:0x1f4] = 0x2f|0x103|0xfe|0x2f|0x2d|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x18|0x0|0x0|0x0|0x0

0x1f0: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x1f0:0x1f6] = 0xfe|0x2f|0x2d|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x18|0x0|0x0|0x0

0x1f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2d; push(0x2d);
	Opcodes@0x16a4f90[0x1f1:0x1f7] = 0x2f|0x2d|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x18|0x0|0x0|0x0|0x0

0x1f3: swap(x, y), opcode 0xf8
	y = pop() <- 0x2d; x = pop() <- 0x11b; push(y); push(x);
	Opcodes@0x16a4f90[0x1f3:0x1f9] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2d|0x11b|0x18|0x0|0x0|0x0

0x1f4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x11b; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x1f4:0x1fa] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x11b|0x2d|0x18|0x0|0x0|0x0

0x1f5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x1f5:0x1fb] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x18|0x0|0x0|0x0|0x0|0x0

0x1f7: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x1f7:0x1fd] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x18|0x0|0x0|0x0|0x0

0x1f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x1f8:0x1fe] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x19|0x0|0x0|0x0|0x0|0x0

0x1fa: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x19; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x1fa:0x200] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x19|0x0|0x0|0x0|0x0

0x1fb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x1fb:0x201] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x1fd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x1fd:0x203] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x1fe: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x1fe:0x204] = 0xd2|0x2f|0x103|0xfe|0x2f|0x88
	Stack@0x16a0f80[0x303:0x2fd] = 0x19|0x0|0x0|0x0|0x0|0x0

0x1ff: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x1ff:0x205] = 0x2f|0x103|0xfe|0x2f|0x88|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x19|0x19|0x0|0x0|0x0|0x0

0x201: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x19; push(x + y);
	Opcodes@0x16a4f90[0x201:0x207] = 0xfe|0x2f|0x88|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x19|0x19|0x0|0x0|0x0

0x202: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x88; push(0x88);
	Opcodes@0x16a4f90[0x202:0x208] = 0x2f|0x88|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x11c|0x19|0x0|0x0|0x0|0x0

0x204: swap(x, y), opcode 0xf8
	y = pop() <- 0x88; x = pop() <- 0x11c; push(y); push(x);
	Opcodes@0x16a4f90[0x204:0x20a] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x88|0x11c|0x19|0x0|0x0|0x0

0x205: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x11c; x = pop() <- 0x88; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x205:0x20b] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x11c|0x88|0x19|0x0|0x0|0x0

0x206: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x206:0x20c] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x19|0x0|0x0|0x0|0x0|0x0

0x208: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x19; push(x + y);
	Opcodes@0x16a4f90[0x208:0x20e] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x19|0x0|0x0|0x0|0x0

0x209: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x209:0x20f] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1a|0x0|0x0|0x0|0x0|0x0

0x20b: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x20b:0x211] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1a|0x0|0x0|0x0|0x0

0x20c: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x20c:0x212] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x20e: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x20e:0x214] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x20f: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x20f:0x215] = 0xd2|0x2f|0x103|0xfe|0x2f|0x91
	Stack@0x16a0f80[0x303:0x2fd] = 0x1a|0x0|0x0|0x0|0x0|0x0

0x210: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x210:0x216] = 0x2f|0x103|0xfe|0x2f|0x91|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x1a|0x1a|0x0|0x0|0x0|0x0

0x212: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x1a; push(x + y);
	Opcodes@0x16a4f90[0x212:0x218] = 0xfe|0x2f|0x91|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x1a|0x1a|0x0|0x0|0x0

0x213: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x91; push(0x91);
	Opcodes@0x16a4f90[0x213:0x219] = 0x2f|0x91|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x11d|0x1a|0x0|0x0|0x0|0x0

0x215: swap(x, y), opcode 0xf8
	y = pop() <- 0x91; x = pop() <- 0x11d; push(y); push(x);
	Opcodes@0x16a4f90[0x215:0x21b] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x91|0x11d|0x1a|0x0|0x0|0x0

0x216: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x11d; x = pop() <- 0x91; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x216:0x21c] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x11d|0x91|0x1a|0x0|0x0|0x0

0x217: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x217:0x21d] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1a|0x0|0x0|0x0|0x0|0x0

0x219: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1a; push(x + y);
	Opcodes@0x16a4f90[0x219:0x21f] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1a|0x0|0x0|0x0|0x0

0x21a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x21a:0x220] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1b|0x0|0x0|0x0|0x0|0x0

0x21c: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x21c:0x222] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1b|0x0|0x0|0x0|0x0

0x21d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x21d:0x223] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x21f: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x21f:0x225] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x220: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x220:0x226] = 0xd2|0x2f|0x103|0xfe|0x2f|0xe5
	Stack@0x16a0f80[0x303:0x2fd] = 0x1b|0x0|0x0|0x0|0x0|0x0

0x221: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x221:0x227] = 0x2f|0x103|0xfe|0x2f|0xe5|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x1b|0x1b|0x0|0x0|0x0|0x0

0x223: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x1b; push(x + y);
	Opcodes@0x16a4f90[0x223:0x229] = 0xfe|0x2f|0xe5|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x1b|0x1b|0x0|0x0|0x0

0x224: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xe5; push(0xe5);
	Opcodes@0x16a4f90[0x224:0x22a] = 0x2f|0xe5|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x11e|0x1b|0x0|0x0|0x0|0x0

0x226: swap(x, y), opcode 0xf8
	y = pop() <- 0xe5; x = pop() <- 0x11e; push(y); push(x);
	Opcodes@0x16a4f90[0x226:0x22c] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xe5|0x11e|0x1b|0x0|0x0|0x0

0x227: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x11e; x = pop() <- 0xe5; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x227:0x22d] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x11e|0xe5|0x1b|0x0|0x0|0x0

0x228: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x228:0x22e] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1b|0x0|0x0|0x0|0x0|0x0

0x22a: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1b; push(x + y);
	Opcodes@0x16a4f90[0x22a:0x230] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1b|0x0|0x0|0x0|0x0

0x22b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x22b:0x231] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1c|0x0|0x0|0x0|0x0|0x0

0x22d: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x22d:0x233] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1c|0x0|0x0|0x0|0x0

0x22e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x22e:0x234] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x230: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x230:0x236] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x231: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x231:0x237] = 0xd2|0x2f|0x103|0xfe|0x2f|0xcd
	Stack@0x16a0f80[0x303:0x2fd] = 0x1c|0x0|0x0|0x0|0x0|0x0

0x232: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x232:0x238] = 0x2f|0x103|0xfe|0x2f|0xcd|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x1c|0x1c|0x0|0x0|0x0|0x0

0x234: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x1c; push(x + y);
	Opcodes@0x16a4f90[0x234:0x23a] = 0xfe|0x2f|0xcd|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x1c|0x1c|0x0|0x0|0x0

0x235: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xcd; push(0xcd);
	Opcodes@0x16a4f90[0x235:0x23b] = 0x2f|0xcd|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x11f|0x1c|0x0|0x0|0x0|0x0

0x237: swap(x, y), opcode 0xf8
	y = pop() <- 0xcd; x = pop() <- 0x11f; push(y); push(x);
	Opcodes@0x16a4f90[0x237:0x23d] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xcd|0x11f|0x1c|0x0|0x0|0x0

0x238: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x11f; x = pop() <- 0xcd; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x238:0x23e] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x11f|0xcd|0x1c|0x0|0x0|0x0

0x239: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x239:0x23f] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1c|0x0|0x0|0x0|0x0|0x0

0x23b: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1c; push(x + y);
	Opcodes@0x16a4f90[0x23b:0x241] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1c|0x0|0x0|0x0|0x0

0x23c: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x23c:0x242] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1d|0x0|0x0|0x0|0x0|0x0

0x23e: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x23e:0x244] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1d|0x0|0x0|0x0|0x0

0x23f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x23f:0x245] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x241: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x241:0x247] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x242: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x242:0x248] = 0xd2|0x2f|0x103|0xfe|0x2f|0xd4
	Stack@0x16a0f80[0x303:0x2fd] = 0x1d|0x0|0x0|0x0|0x0|0x0

0x243: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x243:0x249] = 0x2f|0x103|0xfe|0x2f|0xd4|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x1d|0x1d|0x0|0x0|0x0|0x0

0x245: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x1d; push(x + y);
	Opcodes@0x16a4f90[0x245:0x24b] = 0xfe|0x2f|0xd4|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x1d|0x1d|0x0|0x0|0x0

0x246: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xd4; push(0xd4);
	Opcodes@0x16a4f90[0x246:0x24c] = 0x2f|0xd4|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x120|0x1d|0x0|0x0|0x0|0x0

0x248: swap(x, y), opcode 0xf8
	y = pop() <- 0xd4; x = pop() <- 0x120; push(y); push(x);
	Opcodes@0x16a4f90[0x248:0x24e] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xd4|0x120|0x1d|0x0|0x0|0x0

0x249: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x120; x = pop() <- 0xd4; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x249:0x24f] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x120|0xd4|0x1d|0x0|0x0|0x0

0x24a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x24a:0x250] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1d|0x0|0x0|0x0|0x0|0x0

0x24c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1d; push(x + y);
	Opcodes@0x16a4f90[0x24c:0x252] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1d|0x0|0x0|0x0|0x0

0x24d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x24d:0x253] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1e|0x0|0x0|0x0|0x0|0x0

0x24f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x24f:0x255] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1e|0x0|0x0|0x0|0x0

0x250: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x250:0x256] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x252: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x252:0x258] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x253: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x253:0x259] = 0xd2|0x2f|0x103|0xfe|0x2f|0xb1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1e|0x0|0x0|0x0|0x0|0x0

0x254: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x254:0x25a] = 0x2f|0x103|0xfe|0x2f|0xb1|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x1e|0x1e|0x0|0x0|0x0|0x0

0x256: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x1e; push(x + y);
	Opcodes@0x16a4f90[0x256:0x25c] = 0xfe|0x2f|0xb1|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x1e|0x1e|0x0|0x0|0x0

0x257: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xb1; push(0xb1);
	Opcodes@0x16a4f90[0x257:0x25d] = 0x2f|0xb1|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x121|0x1e|0x0|0x0|0x0|0x0

0x259: swap(x, y), opcode 0xf8
	y = pop() <- 0xb1; x = pop() <- 0x121; push(y); push(x);
	Opcodes@0x16a4f90[0x259:0x25f] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xb1|0x121|0x1e|0x0|0x0|0x0

0x25a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x121; x = pop() <- 0xb1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x25a:0x260] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x121|0xb1|0x1e|0x0|0x0|0x0

0x25b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x25b:0x261] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1e|0x0|0x0|0x0|0x0|0x0

0x25d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1e; push(x + y);
	Opcodes@0x16a4f90[0x25d:0x263] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1e|0x0|0x0|0x0|0x0

0x25e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x25e:0x264] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1f|0x0|0x0|0x0|0x0|0x0

0x260: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x260:0x266] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1f|0x0|0x0|0x0|0x0

0x261: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x261:0x267] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x263: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x263:0x269] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x264: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x264:0x26a] = 0xd2|0x2f|0x103|0xfe|0x2f|0xce
	Stack@0x16a0f80[0x303:0x2fd] = 0x1f|0x0|0x0|0x0|0x0|0x0

0x265: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x265:0x26b] = 0x2f|0x103|0xfe|0x2f|0xce|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x1f|0x1f|0x0|0x0|0x0|0x0

0x267: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x1f; push(x + y);
	Opcodes@0x16a4f90[0x267:0x26d] = 0xfe|0x2f|0xce|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x1f|0x1f|0x0|0x0|0x0

0x268: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xce; push(0xce);
	Opcodes@0x16a4f90[0x268:0x26e] = 0x2f|0xce|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x122|0x1f|0x0|0x0|0x0|0x0

0x26a: swap(x, y), opcode 0xf8
	y = pop() <- 0xce; x = pop() <- 0x122; push(y); push(x);
	Opcodes@0x16a4f90[0x26a:0x270] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xce|0x122|0x1f|0x0|0x0|0x0

0x26b: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x122; x = pop() <- 0xce; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x26b:0x271] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x122|0xce|0x1f|0x0|0x0|0x0

0x26c: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x26c:0x272] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1f|0x0|0x0|0x0|0x0|0x0

0x26e: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1f; push(x + y);
	Opcodes@0x16a4f90[0x26e:0x274] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1f|0x0|0x0|0x0|0x0

0x26f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x26f:0x275] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x20|0x0|0x0|0x0|0x0|0x0

0x271: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x20; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x271:0x277] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x20|0x0|0x0|0x0|0x0

0x272: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x272:0x278] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x274: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x274:0x27a] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x275: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x275:0x27b] = 0xd2|0x2f|0x103|0xfe|0x2f|0xb0
	Stack@0x16a0f80[0x303:0x2fd] = 0x20|0x0|0x0|0x0|0x0|0x0

0x276: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x276:0x27c] = 0x2f|0x103|0xfe|0x2f|0xb0|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x20|0x20|0x0|0x0|0x0|0x0

0x278: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x20; push(x + y);
	Opcodes@0x16a4f90[0x278:0x27e] = 0xfe|0x2f|0xb0|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x20|0x20|0x0|0x0|0x0

0x279: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xb0; push(0xb0);
	Opcodes@0x16a4f90[0x279:0x27f] = 0x2f|0xb0|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x123|0x20|0x0|0x0|0x0|0x0

0x27b: swap(x, y), opcode 0xf8
	y = pop() <- 0xb0; x = pop() <- 0x123; push(y); push(x);
	Opcodes@0x16a4f90[0x27b:0x281] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xb0|0x123|0x20|0x0|0x0|0x0

0x27c: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x123; x = pop() <- 0xb0; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x27c:0x282] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x123|0xb0|0x20|0x0|0x0|0x0

0x27d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x27d:0x283] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x20|0x0|0x0|0x0|0x0|0x0

0x27f: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x20; push(x + y);
	Opcodes@0x16a4f90[0x27f:0x285] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x20|0x0|0x0|0x0|0x0

0x280: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x280:0x286] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x282: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x21; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x282:0x288] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x21|0x0|0x0|0x0|0x0

0x283: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x283:0x289] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x285: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x285:0x28b] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x286: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x286:0x28c] = 0xd2|0x2f|0x103|0xfe|0x2f|0xf9
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x287: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x287:0x28d] = 0x2f|0x103|0xfe|0x2f|0xf9|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x21|0x21|0x0|0x0|0x0|0x0

0x289: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x289:0x28f] = 0xfe|0x2f|0xf9|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x21|0x21|0x0|0x0|0x0

0x28a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf9; push(0xf9);
	Opcodes@0x16a4f90[0x28a:0x290] = 0x2f|0xf9|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x124|0x21|0x0|0x0|0x0|0x0

0x28c: swap(x, y), opcode 0xf8
	y = pop() <- 0xf9; x = pop() <- 0x124; push(y); push(x);
	Opcodes@0x16a4f90[0x28c:0x292] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xf9|0x124|0x21|0x0|0x0|0x0

0x28d: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x124; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x28d:0x293] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x124|0xf9|0x21|0x0|0x0|0x0

0x28e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x28e:0x294] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x290: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x290:0x296] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x21|0x0|0x0|0x0|0x0

0x291: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x291:0x297] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x22|0x0|0x0|0x0|0x0|0x0

0x293: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x22; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x293:0x299] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x22|0x0|0x0|0x0|0x0

0x294: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x294:0x29a] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x296: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x296:0x29c] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x297: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x297:0x29d] = 0xd2|0x2f|0x103|0xfe|0x2f|0xc2
	Stack@0x16a0f80[0x303:0x2fd] = 0x22|0x0|0x0|0x0|0x0|0x0

0x298: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x298:0x29e] = 0x2f|0x103|0xfe|0x2f|0xc2|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x22|0x22|0x0|0x0|0x0|0x0

0x29a: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x22; push(x + y);
	Opcodes@0x16a4f90[0x29a:0x2a0] = 0xfe|0x2f|0xc2|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x22|0x22|0x0|0x0|0x0

0x29b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xc2; push(0xc2);
	Opcodes@0x16a4f90[0x29b:0x2a1] = 0x2f|0xc2|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x125|0x22|0x0|0x0|0x0|0x0

0x29d: swap(x, y), opcode 0xf8
	y = pop() <- 0xc2; x = pop() <- 0x125; push(y); push(x);
	Opcodes@0x16a4f90[0x29d:0x2a3] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xc2|0x125|0x22|0x0|0x0|0x0

0x29e: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x125; x = pop() <- 0xc2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x29e:0x2a4] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x125|0xc2|0x22|0x0|0x0|0x0

0x29f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x29f:0x2a5] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x22|0x0|0x0|0x0|0x0|0x0

0x2a1: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x22; push(x + y);
	Opcodes@0x16a4f90[0x2a1:0x2a7] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x22|0x0|0x0|0x0|0x0

0x2a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x2a2:0x2a8] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x23|0x0|0x0|0x0|0x0|0x0

0x2a4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x23; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x2a4:0x2aa] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x23|0x0|0x0|0x0|0x0

0x2a5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x2a5:0x2ab] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x2a7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x2a7:0x2ad] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x2a8: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x2a8:0x2ae] = 0xd2|0x2f|0x103|0xfe|0x2f|0x8c
	Stack@0x16a0f80[0x303:0x2fd] = 0x23|0x0|0x0|0x0|0x0|0x0

0x2a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x2a9:0x2af] = 0x2f|0x103|0xfe|0x2f|0x8c|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x23|0x23|0x0|0x0|0x0|0x0

0x2ab: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x23; push(x + y);
	Opcodes@0x16a4f90[0x2ab:0x2b1] = 0xfe|0x2f|0x8c|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x23|0x23|0x0|0x0|0x0

0x2ac: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x8c; push(0x8c);
	Opcodes@0x16a4f90[0x2ac:0x2b2] = 0x2f|0x8c|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x126|0x23|0x0|0x0|0x0|0x0

0x2ae: swap(x, y), opcode 0xf8
	y = pop() <- 0x8c; x = pop() <- 0x126; push(y); push(x);
	Opcodes@0x16a4f90[0x2ae:0x2b4] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x8c|0x126|0x23|0x0|0x0|0x0

0x2af: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x126; x = pop() <- 0x8c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x2af:0x2b5] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x126|0x8c|0x23|0x0|0x0|0x0

0x2b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x2b0:0x2b6] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x23|0x0|0x0|0x0|0x0|0x0

0x2b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x23; push(x + y);
	Opcodes@0x16a4f90[0x2b2:0x2b8] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x23|0x0|0x0|0x0|0x0

0x2b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x2b3:0x2b9] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x24|0x0|0x0|0x0|0x0|0x0

0x2b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x24; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x2b5:0x2bb] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x24|0x0|0x0|0x0|0x0

0x2b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x2b6:0x2bc] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x2b8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x2b8:0x2be] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x2b9: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x2b9:0x2bf] = 0xd2|0x2f|0x103|0xfe|0x2f|0x78
	Stack@0x16a0f80[0x303:0x2fd] = 0x24|0x0|0x0|0x0|0x0|0x0

0x2ba: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x2ba:0x2c0] = 0x2f|0x103|0xfe|0x2f|0x78|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x24|0x24|0x0|0x0|0x0|0x0

0x2bc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x24; push(x + y);
	Opcodes@0x16a4f90[0x2bc:0x2c2] = 0xfe|0x2f|0x78|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x24|0x24|0x0|0x0|0x0

0x2bd: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x78; push(0x78);
	Opcodes@0x16a4f90[0x2bd:0x2c3] = 0x2f|0x78|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x127|0x24|0x0|0x0|0x0|0x0

0x2bf: swap(x, y), opcode 0xf8
	y = pop() <- 0x78; x = pop() <- 0x127; push(y); push(x);
	Opcodes@0x16a4f90[0x2bf:0x2c5] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x78|0x127|0x24|0x0|0x0|0x0

0x2c0: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x127; x = pop() <- 0x78; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x2c0:0x2c6] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x127|0x78|0x24|0x0|0x0|0x0

0x2c1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x2c1:0x2c7] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x24|0x0|0x0|0x0|0x0|0x0

0x2c3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x24; push(x + y);
	Opcodes@0x16a4f90[0x2c3:0x2c9] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x24|0x0|0x0|0x0|0x0

0x2c4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x2c4:0x2ca] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x25|0x0|0x0|0x0|0x0|0x0

0x2c6: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x25; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x2c6:0x2cc] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x25|0x0|0x0|0x0|0x0

0x2c7: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x2c7:0x2cd] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x2c9: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x2c9:0x2cf] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x2ca: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x2ca:0x2d0] = 0xd2|0x2f|0x103|0xfe|0x2f|0x41
	Stack@0x16a0f80[0x303:0x2fd] = 0x25|0x0|0x0|0x0|0x0|0x0

0x2cb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x2cb:0x2d1] = 0x2f|0x103|0xfe|0x2f|0x41|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x25|0x25|0x0|0x0|0x0|0x0

0x2cd: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x25; push(x + y);
	Opcodes@0x16a4f90[0x2cd:0x2d3] = 0xfe|0x2f|0x41|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x25|0x25|0x0|0x0|0x0

0x2ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x41; push(0x41);
	Opcodes@0x16a4f90[0x2ce:0x2d4] = 0x2f|0x41|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x128|0x25|0x0|0x0|0x0|0x0

0x2d0: swap(x, y), opcode 0xf8
	y = pop() <- 0x41; x = pop() <- 0x128; push(y); push(x);
	Opcodes@0x16a4f90[0x2d0:0x2d6] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x41|0x128|0x25|0x0|0x0|0x0

0x2d1: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x128; x = pop() <- 0x41; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x2d1:0x2d7] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x128|0x41|0x25|0x0|0x0|0x0

0x2d2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x2d2:0x2d8] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x25|0x0|0x0|0x0|0x0|0x0

0x2d4: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x25; push(x + y);
	Opcodes@0x16a4f90[0x2d4:0x2da] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x25|0x0|0x0|0x0|0x0

0x2d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x2d5:0x2db] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x26|0x0|0x0|0x0|0x0|0x0

0x2d7: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x26; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x2d7:0x2dd] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x26|0x0|0x0|0x0|0x0

0x2d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x2d8:0x2de] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x2da: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x2da:0x2e0] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x2db: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x2db:0x2e1] = 0xd2|0x2f|0x103|0xfe|0x2f|0x65
	Stack@0x16a0f80[0x303:0x2fd] = 0x26|0x0|0x0|0x0|0x0|0x0

0x2dc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x2dc:0x2e2] = 0x2f|0x103|0xfe|0x2f|0x65|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x26|0x26|0x0|0x0|0x0|0x0

0x2de: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x26; push(x + y);
	Opcodes@0x16a4f90[0x2de:0x2e4] = 0xfe|0x2f|0x65|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x26|0x26|0x0|0x0|0x0

0x2df: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x65; push(0x65);
	Opcodes@0x16a4f90[0x2df:0x2e5] = 0x2f|0x65|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x129|0x26|0x0|0x0|0x0|0x0

0x2e1: swap(x, y), opcode 0xf8
	y = pop() <- 0x65; x = pop() <- 0x129; push(y); push(x);
	Opcodes@0x16a4f90[0x2e1:0x2e7] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x65|0x129|0x26|0x0|0x0|0x0

0x2e2: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x129; x = pop() <- 0x65; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x2e2:0x2e8] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x129|0x65|0x26|0x0|0x0|0x0

0x2e3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x2e3:0x2e9] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x26|0x0|0x0|0x0|0x0|0x0

0x2e5: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x26; push(x + y);
	Opcodes@0x16a4f90[0x2e5:0x2eb] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x26|0x0|0x0|0x0|0x0

0x2e6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x2e6:0x2ec] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x27|0x0|0x0|0x0|0x0|0x0

0x2e8: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x27; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x2e8:0x2ee] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x27|0x0|0x0|0x0|0x0

0x2e9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x2e9:0x2ef] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x2eb: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x2eb:0x2f1] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x2ec: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x2ec:0x2f2] = 0xd2|0x2f|0x103|0xfe|0x2f|0xdd
	Stack@0x16a0f80[0x303:0x2fd] = 0x27|0x0|0x0|0x0|0x0|0x0

0x2ed: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x2ed:0x2f3] = 0x2f|0x103|0xfe|0x2f|0xdd|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x27|0x27|0x0|0x0|0x0|0x0

0x2ef: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x27; push(x + y);
	Opcodes@0x16a4f90[0x2ef:0x2f5] = 0xfe|0x2f|0xdd|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x27|0x27|0x0|0x0|0x0

0x2f0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xdd; push(0xdd);
	Opcodes@0x16a4f90[0x2f0:0x2f6] = 0x2f|0xdd|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x12a|0x27|0x0|0x0|0x0|0x0

0x2f2: swap(x, y), opcode 0xf8
	y = pop() <- 0xdd; x = pop() <- 0x12a; push(y); push(x);
	Opcodes@0x16a4f90[0x2f2:0x2f8] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xdd|0x12a|0x27|0x0|0x0|0x0

0x2f3: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x12a; x = pop() <- 0xdd; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x2f3:0x2f9] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x12a|0xdd|0x27|0x0|0x0|0x0

0x2f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x2f4:0x2fa] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x27|0x0|0x0|0x0|0x0|0x0

0x2f6: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x27; push(x + y);
	Opcodes@0x16a4f90[0x2f6:0x2fc] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x27|0x0|0x0|0x0|0x0

0x2f7: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x2f7:0x2fd] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x28|0x0|0x0|0x0|0x0|0x0

0x2f9: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x28; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x2f9:0x2ff] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x28|0x0|0x0|0x0|0x0

0x2fa: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x2fa:0x300] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x2fc: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x2fc:0x302] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x2fd: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x2fd:0x303] = 0xd2|0x2f|0x103|0xfe|0x2f|0x9f
	Stack@0x16a0f80[0x303:0x2fd] = 0x28|0x0|0x0|0x0|0x0|0x0

0x2fe: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x2fe:0x304] = 0x2f|0x103|0xfe|0x2f|0x9f|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x28|0x28|0x0|0x0|0x0|0x0

0x300: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x28; push(x + y);
	Opcodes@0x16a4f90[0x300:0x306] = 0xfe|0x2f|0x9f|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x28|0x28|0x0|0x0|0x0

0x301: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x9f; push(0x9f);
	Opcodes@0x16a4f90[0x301:0x307] = 0x2f|0x9f|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x12b|0x28|0x0|0x0|0x0|0x0

0x303: swap(x, y), opcode 0xf8
	y = pop() <- 0x9f; x = pop() <- 0x12b; push(y); push(x);
	Opcodes@0x16a4f90[0x303:0x309] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x9f|0x12b|0x28|0x0|0x0|0x0

0x304: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x12b; x = pop() <- 0x9f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x304:0x30a] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x12b|0x9f|0x28|0x0|0x0|0x0

0x305: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x305:0x30b] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x28|0x0|0x0|0x0|0x0|0x0

0x307: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x28; push(x + y);
	Opcodes@0x16a4f90[0x307:0x30d] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x28|0x0|0x0|0x0|0x0

0x308: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x308:0x30e] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x29|0x0|0x0|0x0|0x0|0x0

0x30a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x29; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x30a:0x310] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x29|0x0|0x0|0x0|0x0

0x30b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x30b:0x311] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x30d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x30d:0x313] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x30e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x30e:0x314] = 0xd2|0x2f|0x103|0xfe|0x2f|0x59
	Stack@0x16a0f80[0x303:0x2fd] = 0x29|0x0|0x0|0x0|0x0|0x0

0x30f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x30f:0x315] = 0x2f|0x103|0xfe|0x2f|0x59|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x29|0x29|0x0|0x0|0x0|0x0

0x311: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x29; push(x + y);
	Opcodes@0x16a4f90[0x311:0x317] = 0xfe|0x2f|0x59|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x29|0x29|0x0|0x0|0x0

0x312: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x59; push(0x59);
	Opcodes@0x16a4f90[0x312:0x318] = 0x2f|0x59|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x12c|0x29|0x0|0x0|0x0|0x0

0x314: swap(x, y), opcode 0xf8
	y = pop() <- 0x59; x = pop() <- 0x12c; push(y); push(x);
	Opcodes@0x16a4f90[0x314:0x31a] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x59|0x12c|0x29|0x0|0x0|0x0

0x315: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x12c; x = pop() <- 0x59; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x315:0x31b] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x12c|0x59|0x29|0x0|0x0|0x0

0x316: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x316:0x31c] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x29|0x0|0x0|0x0|0x0|0x0

0x318: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x29; push(x + y);
	Opcodes@0x16a4f90[0x318:0x31e] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x29|0x0|0x0|0x0|0x0

0x319: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x319:0x31f] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2a|0x0|0x0|0x0|0x0|0x0

0x31b: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x31b:0x321] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2a|0x0|0x0|0x0|0x0

0x31c: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x31c:0x322] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x31e: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x31e:0x324] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x31f: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x31f:0x325] = 0xd2|0x2f|0x103|0xfe|0x2f|0x35
	Stack@0x16a0f80[0x303:0x2fd] = 0x2a|0x0|0x0|0x0|0x0|0x0

0x320: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x320:0x326] = 0x2f|0x103|0xfe|0x2f|0x35|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x2a|0x2a|0x0|0x0|0x0|0x0

0x322: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x2a; push(x + y);
	Opcodes@0x16a4f90[0x322:0x328] = 0xfe|0x2f|0x35|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x2a|0x2a|0x0|0x0|0x0

0x323: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x35; push(0x35);
	Opcodes@0x16a4f90[0x323:0x329] = 0x2f|0x35|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x12d|0x2a|0x0|0x0|0x0|0x0

0x325: swap(x, y), opcode 0xf8
	y = pop() <- 0x35; x = pop() <- 0x12d; push(y); push(x);
	Opcodes@0x16a4f90[0x325:0x32b] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x35|0x12d|0x2a|0x0|0x0|0x0

0x326: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x12d; x = pop() <- 0x35; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x326:0x32c] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x12d|0x35|0x2a|0x0|0x0|0x0

0x327: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x327:0x32d] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2a|0x0|0x0|0x0|0x0|0x0

0x329: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2a; push(x + y);
	Opcodes@0x16a4f90[0x329:0x32f] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2a|0x0|0x0|0x0|0x0

0x32a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x32a:0x330] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2b|0x0|0x0|0x0|0x0|0x0

0x32c: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x32c:0x332] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2b|0x0|0x0|0x0|0x0

0x32d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x32d:0x333] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x32f: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x32f:0x335] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x330: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x330:0x336] = 0xd2|0x2f|0x103|0xfe|0x2f|0x24
	Stack@0x16a0f80[0x303:0x2fd] = 0x2b|0x0|0x0|0x0|0x0|0x0

0x331: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x331:0x337] = 0x2f|0x103|0xfe|0x2f|0x24|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x2b|0x2b|0x0|0x0|0x0|0x0

0x333: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x2b; push(x + y);
	Opcodes@0x16a4f90[0x333:0x339] = 0xfe|0x2f|0x24|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x2b|0x2b|0x0|0x0|0x0

0x334: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x24; push(0x24);
	Opcodes@0x16a4f90[0x334:0x33a] = 0x2f|0x24|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x12e|0x2b|0x0|0x0|0x0|0x0

0x336: swap(x, y), opcode 0xf8
	y = pop() <- 0x24; x = pop() <- 0x12e; push(y); push(x);
	Opcodes@0x16a4f90[0x336:0x33c] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x24|0x12e|0x2b|0x0|0x0|0x0

0x337: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x12e; x = pop() <- 0x24; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x337:0x33d] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x12e|0x24|0x2b|0x0|0x0|0x0

0x338: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x338:0x33e] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2b|0x0|0x0|0x0|0x0|0x0

0x33a: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2b; push(x + y);
	Opcodes@0x16a4f90[0x33a:0x340] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2b|0x0|0x0|0x0|0x0

0x33b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x33b:0x341] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2c|0x0|0x0|0x0|0x0|0x0

0x33d: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x33d:0x343] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2c|0x0|0x0|0x0|0x0

0x33e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x33e:0x344] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x340: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x340:0x346] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x341: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x341:0x347] = 0xd2|0x2f|0x103|0xfe|0x2f|0x4e
	Stack@0x16a0f80[0x303:0x2fd] = 0x2c|0x0|0x0|0x0|0x0|0x0

0x342: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x342:0x348] = 0x2f|0x103|0xfe|0x2f|0x4e|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x2c|0x2c|0x0|0x0|0x0|0x0

0x344: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x2c; push(x + y);
	Opcodes@0x16a4f90[0x344:0x34a] = 0xfe|0x2f|0x4e|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x2c|0x2c|0x0|0x0|0x0

0x345: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4e; push(0x4e);
	Opcodes@0x16a4f90[0x345:0x34b] = 0x2f|0x4e|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x12f|0x2c|0x0|0x0|0x0|0x0

0x347: swap(x, y), opcode 0xf8
	y = pop() <- 0x4e; x = pop() <- 0x12f; push(y); push(x);
	Opcodes@0x16a4f90[0x347:0x34d] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x4e|0x12f|0x2c|0x0|0x0|0x0

0x348: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x12f; x = pop() <- 0x4e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x348:0x34e] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x12f|0x4e|0x2c|0x0|0x0|0x0

0x349: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x349:0x34f] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2c|0x0|0x0|0x0|0x0|0x0

0x34b: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2c; push(x + y);
	Opcodes@0x16a4f90[0x34b:0x351] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2c|0x0|0x0|0x0|0x0

0x34c: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x34c:0x352] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2d|0x0|0x0|0x0|0x0|0x0

0x34e: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x34e:0x354] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2d|0x0|0x0|0x0|0x0

0x34f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x34f:0x355] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x351: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x351:0x357] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x352: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x352:0x358] = 0xd2|0x2f|0x103|0xfe|0x2f|0xc9
	Stack@0x16a0f80[0x303:0x2fd] = 0x2d|0x0|0x0|0x0|0x0|0x0

0x353: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x353:0x359] = 0x2f|0x103|0xfe|0x2f|0xc9|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x2d|0x0|0x0|0x0|0x0

0x355: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x2d; push(x + y);
	Opcodes@0x16a4f90[0x355:0x35b] = 0xfe|0x2f|0xc9|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x2d|0x2d|0x0|0x0|0x0

0x356: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xc9; push(0xc9);
	Opcodes@0x16a4f90[0x356:0x35c] = 0x2f|0xc9|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x130|0x2d|0x0|0x0|0x0|0x0

0x358: swap(x, y), opcode 0xf8
	y = pop() <- 0xc9; x = pop() <- 0x130; push(y); push(x);
	Opcodes@0x16a4f90[0x358:0x35e] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xc9|0x130|0x2d|0x0|0x0|0x0

0x359: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x130; x = pop() <- 0xc9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x359:0x35f] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x130|0xc9|0x2d|0x0|0x0|0x0

0x35a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x35a:0x360] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2d|0x0|0x0|0x0|0x0|0x0

0x35c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2d; push(x + y);
	Opcodes@0x16a4f90[0x35c:0x362] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2d|0x0|0x0|0x0|0x0

0x35d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x35d:0x363] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2e|0x0|0x0|0x0|0x0|0x0

0x35f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x35f:0x365] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2e|0x0|0x0|0x0|0x0

0x360: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x360:0x366] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x362: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x362:0x368] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x363: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x363:0x369] = 0xd2|0x2f|0x103|0xfe|0x2f|0xaf
	Stack@0x16a0f80[0x303:0x2fd] = 0x2e|0x0|0x0|0x0|0x0|0x0

0x364: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x364:0x36a] = 0x2f|0x103|0xfe|0x2f|0xaf|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x2e|0x2e|0x0|0x0|0x0|0x0

0x366: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x2e; push(x + y);
	Opcodes@0x16a4f90[0x366:0x36c] = 0xfe|0x2f|0xaf|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x2e|0x2e|0x0|0x0|0x0

0x367: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xaf; push(0xaf);
	Opcodes@0x16a4f90[0x367:0x36d] = 0x2f|0xaf|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x131|0x2e|0x0|0x0|0x0|0x0

0x369: swap(x, y), opcode 0xf8
	y = pop() <- 0xaf; x = pop() <- 0x131; push(y); push(x);
	Opcodes@0x16a4f90[0x369:0x36f] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xaf|0x131|0x2e|0x0|0x0|0x0

0x36a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x131; x = pop() <- 0xaf; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x36a:0x370] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x131|0xaf|0x2e|0x0|0x0|0x0

0x36b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x36b:0x371] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2e|0x0|0x0|0x0|0x0|0x0

0x36d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2e; push(x + y);
	Opcodes@0x16a4f90[0x36d:0x373] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2e|0x0|0x0|0x0|0x0

0x36e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x36e:0x374] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2f|0x0|0x0|0x0|0x0|0x0

0x370: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x370:0x376] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2f|0x0|0x0|0x0|0x0

0x371: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x371:0x377] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x373: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x373:0x379] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x374: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x374:0x37a] = 0xd2|0x2f|0x103|0xfe|0x2f|0x60
	Stack@0x16a0f80[0x303:0x2fd] = 0x2f|0x0|0x0|0x0|0x0|0x0

0x375: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x375:0x37b] = 0x2f|0x103|0xfe|0x2f|0x60|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x2f|0x2f|0x0|0x0|0x0|0x0

0x377: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x2f; push(x + y);
	Opcodes@0x16a4f90[0x377:0x37d] = 0xfe|0x2f|0x60|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x2f|0x2f|0x0|0x0|0x0

0x378: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x60; push(0x60);
	Opcodes@0x16a4f90[0x378:0x37e] = 0x2f|0x60|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x132|0x2f|0x0|0x0|0x0|0x0

0x37a: swap(x, y), opcode 0xf8
	y = pop() <- 0x60; x = pop() <- 0x132; push(y); push(x);
	Opcodes@0x16a4f90[0x37a:0x380] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x60|0x132|0x2f|0x0|0x0|0x0

0x37b: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x132; x = pop() <- 0x60; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x37b:0x381] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x132|0x60|0x2f|0x0|0x0|0x0

0x37c: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x37c:0x382] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2f|0x0|0x0|0x0|0x0|0x0

0x37e: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2f; push(x + y);
	Opcodes@0x16a4f90[0x37e:0x384] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2f|0x0|0x0|0x0|0x0

0x37f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x37f:0x385] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x30|0x0|0x0|0x0|0x0|0x0

0x381: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x30; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x381:0x387] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x30|0x0|0x0|0x0|0x0

0x382: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x382:0x388] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x384: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x384:0x38a] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x385: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x385:0x38b] = 0xd2|0x2f|0x103|0xfe|0x2f|0x57
	Stack@0x16a0f80[0x303:0x2fd] = 0x30|0x0|0x0|0x0|0x0|0x0

0x386: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x386:0x38c] = 0x2f|0x103|0xfe|0x2f|0x57|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x30|0x30|0x0|0x0|0x0|0x0

0x388: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x30; push(x + y);
	Opcodes@0x16a4f90[0x388:0x38e] = 0xfe|0x2f|0x57|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x30|0x30|0x0|0x0|0x0

0x389: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x57; push(0x57);
	Opcodes@0x16a4f90[0x389:0x38f] = 0x2f|0x57|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x133|0x30|0x0|0x0|0x0|0x0

0x38b: swap(x, y), opcode 0xf8
	y = pop() <- 0x57; x = pop() <- 0x133; push(y); push(x);
	Opcodes@0x16a4f90[0x38b:0x391] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x57|0x133|0x30|0x0|0x0|0x0

0x38c: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x133; x = pop() <- 0x57; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x38c:0x392] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x133|0x57|0x30|0x0|0x0|0x0

0x38d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x38d:0x393] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x30|0x0|0x0|0x0|0x0|0x0

0x38f: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x30; push(x + y);
	Opcodes@0x16a4f90[0x38f:0x395] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x30|0x0|0x0|0x0|0x0

0x390: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x390:0x396] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x31|0x0|0x0|0x0|0x0|0x0

0x392: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x31; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x392:0x398] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x31|0x0|0x0|0x0|0x0

0x393: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x393:0x399] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x395: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x395:0x39b] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x396: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x396:0x39c] = 0xd2|0x2f|0x103|0xfe|0x2f|0x70
	Stack@0x16a0f80[0x303:0x2fd] = 0x31|0x0|0x0|0x0|0x0|0x0

0x397: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x397:0x39d] = 0x2f|0x103|0xfe|0x2f|0x70|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x31|0x31|0x0|0x0|0x0|0x0

0x399: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x31; push(x + y);
	Opcodes@0x16a4f90[0x399:0x39f] = 0xfe|0x2f|0x70|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x31|0x31|0x0|0x0|0x0

0x39a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x70; push(0x70);
	Opcodes@0x16a4f90[0x39a:0x3a0] = 0x2f|0x70|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x134|0x31|0x0|0x0|0x0|0x0

0x39c: swap(x, y), opcode 0xf8
	y = pop() <- 0x70; x = pop() <- 0x134; push(y); push(x);
	Opcodes@0x16a4f90[0x39c:0x3a2] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x70|0x134|0x31|0x0|0x0|0x0

0x39d: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x134; x = pop() <- 0x70; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x39d:0x3a3] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x134|0x70|0x31|0x0|0x0|0x0

0x39e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x39e:0x3a4] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x31|0x0|0x0|0x0|0x0|0x0

0x3a0: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x31; push(x + y);
	Opcodes@0x16a4f90[0x3a0:0x3a6] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x31|0x0|0x0|0x0|0x0

0x3a1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3a1:0x3a7] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x32|0x0|0x0|0x0|0x0|0x0

0x3a3: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x32; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x3a3:0x3a9] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x32|0x0|0x0|0x0|0x0

0x3a4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3a4:0x3aa] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x3a6: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3a6:0x3ac] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x3a7: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x3a7:0x3ad] = 0xd2|0x2f|0x103|0xfe|0x2f|0xb6
	Stack@0x16a0f80[0x303:0x2fd] = 0x32|0x0|0x0|0x0|0x0|0x0

0x3a8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x3a8:0x3ae] = 0x2f|0x103|0xfe|0x2f|0xb6|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x32|0x32|0x0|0x0|0x0|0x0

0x3aa: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x32; push(x + y);
	Opcodes@0x16a4f90[0x3aa:0x3b0] = 0xfe|0x2f|0xb6|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x32|0x32|0x0|0x0|0x0

0x3ab: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xb6; push(0xb6);
	Opcodes@0x16a4f90[0x3ab:0x3b1] = 0x2f|0xb6|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x135|0x32|0x0|0x0|0x0|0x0

0x3ad: swap(x, y), opcode 0xf8
	y = pop() <- 0xb6; x = pop() <- 0x135; push(y); push(x);
	Opcodes@0x16a4f90[0x3ad:0x3b3] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xb6|0x135|0x32|0x0|0x0|0x0

0x3ae: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x135; x = pop() <- 0xb6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x3ae:0x3b4] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x135|0xb6|0x32|0x0|0x0|0x0

0x3af: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x3af:0x3b5] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x32|0x0|0x0|0x0|0x0|0x0

0x3b1: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x32; push(x + y);
	Opcodes@0x16a4f90[0x3b1:0x3b7] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x32|0x0|0x0|0x0|0x0

0x3b2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3b2:0x3b8] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x33|0x0|0x0|0x0|0x0|0x0

0x3b4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x33; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x3b4:0x3ba] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x33|0x0|0x0|0x0|0x0

0x3b5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3b5:0x3bb] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x3b7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3b7:0x3bd] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x3b8: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x3b8:0x3be] = 0xd2|0x2f|0x103|0xfe|0x2f|0xd3
	Stack@0x16a0f80[0x303:0x2fd] = 0x33|0x0|0x0|0x0|0x0|0x0

0x3b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x3b9:0x3bf] = 0x2f|0x103|0xfe|0x2f|0xd3|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x33|0x33|0x0|0x0|0x0|0x0

0x3bb: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x33; push(x + y);
	Opcodes@0x16a4f90[0x3bb:0x3c1] = 0xfe|0x2f|0xd3|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x33|0x33|0x0|0x0|0x0

0x3bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xd3; push(0xd3);
	Opcodes@0x16a4f90[0x3bc:0x3c2] = 0x2f|0xd3|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x136|0x33|0x0|0x0|0x0|0x0

0x3be: swap(x, y), opcode 0xf8
	y = pop() <- 0xd3; x = pop() <- 0x136; push(y); push(x);
	Opcodes@0x16a4f90[0x3be:0x3c4] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xd3|0x136|0x33|0x0|0x0|0x0

0x3bf: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x136; x = pop() <- 0xd3; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x3bf:0x3c5] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x136|0xd3|0x33|0x0|0x0|0x0

0x3c0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x3c0:0x3c6] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x33|0x0|0x0|0x0|0x0|0x0

0x3c2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x33; push(x + y);
	Opcodes@0x16a4f90[0x3c2:0x3c8] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x33|0x0|0x0|0x0|0x0

0x3c3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3c3:0x3c9] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x34|0x0|0x0|0x0|0x0|0x0

0x3c5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x34; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x3c5:0x3cb] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x34|0x0|0x0|0x0|0x0

0x3c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3c6:0x3cc] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x3c8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3c8:0x3ce] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x3c9: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x3c9:0x3cf] = 0xd2|0x2f|0x103|0xfe|0x2f|0x2a
	Stack@0x16a0f80[0x303:0x2fd] = 0x34|0x0|0x0|0x0|0x0|0x0

0x3ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x3ca:0x3d0] = 0x2f|0x103|0xfe|0x2f|0x2a|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x34|0x34|0x0|0x0|0x0|0x0

0x3cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x34; push(x + y);
	Opcodes@0x16a4f90[0x3cc:0x3d2] = 0xfe|0x2f|0x2a|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x34|0x34|0x0|0x0|0x0

0x3cd: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2a; push(0x2a);
	Opcodes@0x16a4f90[0x3cd:0x3d3] = 0x2f|0x2a|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x137|0x34|0x0|0x0|0x0|0x0

0x3cf: swap(x, y), opcode 0xf8
	y = pop() <- 0x2a; x = pop() <- 0x137; push(y); push(x);
	Opcodes@0x16a4f90[0x3cf:0x3d5] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2a|0x137|0x34|0x0|0x0|0x0

0x3d0: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x137; x = pop() <- 0x2a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x3d0:0x3d6] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x137|0x2a|0x34|0x0|0x0|0x0

0x3d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x3d1:0x3d7] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x34|0x0|0x0|0x0|0x0|0x0

0x3d3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x34; push(x + y);
	Opcodes@0x16a4f90[0x3d3:0x3d9] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x34|0x0|0x0|0x0|0x0

0x3d4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d4:0x3da] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x35|0x0|0x0|0x0|0x0|0x0

0x3d6: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x35; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x3d6:0x3dc] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x35|0x0|0x0|0x0|0x0

0x3d7: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3d7:0x3dd] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x3d9: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3d9:0x3df] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x3da: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x3da:0x3e0] = 0xd2|0x2f|0x103|0xfe|0x2f|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x35|0x0|0x0|0x0|0x0|0x0

0x3db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x3db:0x3e1] = 0x2f|0x103|0xfe|0x2f|0xd2|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x35|0x35|0x0|0x0|0x0|0x0

0x3dd: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x35; push(x + y);
	Opcodes@0x16a4f90[0x3dd:0x3e3] = 0xfe|0x2f|0xd2|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x35|0x35|0x0|0x0|0x0

0x3de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xd2; push(0xd2);
	Opcodes@0x16a4f90[0x3de:0x3e4] = 0x2f|0xd2|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x138|0x35|0x0|0x0|0x0|0x0

0x3e0: swap(x, y), opcode 0xf8
	y = pop() <- 0xd2; x = pop() <- 0x138; push(y); push(x);
	Opcodes@0x16a4f90[0x3e0:0x3e6] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xd2|0x138|0x35|0x0|0x0|0x0

0x3e1: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x138; x = pop() <- 0xd2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x3e1:0x3e7] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x138|0xd2|0x35|0x0|0x0|0x0

0x3e2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x3e2:0x3e8] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x35|0x0|0x0|0x0|0x0|0x0

0x3e4: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x35; push(x + y);
	Opcodes@0x16a4f90[0x3e4:0x3ea] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x35|0x0|0x0|0x0|0x0

0x3e5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3e5:0x3eb] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x36|0x0|0x0|0x0|0x0|0x0

0x3e7: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x36; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x3e7:0x3ed] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x36|0x0|0x0|0x0|0x0

0x3e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3e8:0x3ee] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x3ea: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3ea:0x3f0] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x3eb: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x3eb:0x3f1] = 0xd2|0x2f|0x103|0xfe|0x2f|0xa9
	Stack@0x16a0f80[0x303:0x2fd] = 0x36|0x0|0x0|0x0|0x0|0x0

0x3ec: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x3ec:0x3f2] = 0x2f|0x103|0xfe|0x2f|0xa9|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x36|0x36|0x0|0x0|0x0|0x0

0x3ee: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x36; push(x + y);
	Opcodes@0x16a4f90[0x3ee:0x3f4] = 0xfe|0x2f|0xa9|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x36|0x36|0x0|0x0|0x0

0x3ef: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xa9; push(0xa9);
	Opcodes@0x16a4f90[0x3ef:0x3f5] = 0x2f|0xa9|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x139|0x36|0x0|0x0|0x0|0x0

0x3f1: swap(x, y), opcode 0xf8
	y = pop() <- 0xa9; x = pop() <- 0x139; push(y); push(x);
	Opcodes@0x16a4f90[0x3f1:0x3f7] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xa9|0x139|0x36|0x0|0x0|0x0

0x3f2: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x139; x = pop() <- 0xa9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x3f2:0x3f8] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x139|0xa9|0x36|0x0|0x0|0x0

0x3f3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x3f3:0x3f9] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x36|0x0|0x0|0x0|0x0|0x0

0x3f5: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x36; push(x + y);
	Opcodes@0x16a4f90[0x3f5:0x3fb] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x36|0x0|0x0|0x0|0x0

0x3f6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3f6:0x3fc] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x37|0x0|0x0|0x0|0x0|0x0

0x3f8: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x37; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x3f8:0x3fe] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x37|0x0|0x0|0x0|0x0

0x3f9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x3f9:0x3ff] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x3fb: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x3fb:0x401] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x3fc: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x3fc:0x402] = 0xd2|0x2f|0x103|0xfe|0x2f|0x3a
	Stack@0x16a0f80[0x303:0x2fd] = 0x37|0x0|0x0|0x0|0x0|0x0

0x3fd: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x3fd:0x403] = 0x2f|0x103|0xfe|0x2f|0x3a|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x37|0x37|0x0|0x0|0x0|0x0

0x3ff: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x37; push(x + y);
	Opcodes@0x16a4f90[0x3ff:0x405] = 0xfe|0x2f|0x3a|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x37|0x37|0x0|0x0|0x0

0x400: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3a; push(0x3a);
	Opcodes@0x16a4f90[0x400:0x406] = 0x2f|0x3a|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x13a|0x37|0x0|0x0|0x0|0x0

0x402: swap(x, y), opcode 0xf8
	y = pop() <- 0x3a; x = pop() <- 0x13a; push(y); push(x);
	Opcodes@0x16a4f90[0x402:0x408] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x3a|0x13a|0x37|0x0|0x0|0x0

0x403: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x13a; x = pop() <- 0x3a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x403:0x409] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x13a|0x3a|0x37|0x0|0x0|0x0

0x404: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x404:0x40a] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x37|0x0|0x0|0x0|0x0|0x0

0x406: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x37; push(x + y);
	Opcodes@0x16a4f90[0x406:0x40c] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x37|0x0|0x0|0x0|0x0

0x407: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x407:0x40d] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x38|0x0|0x0|0x0|0x0|0x0

0x409: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x38; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x409:0x40f] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x38|0x0|0x0|0x0|0x0

0x40a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x40a:0x410] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x40c: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x40c:0x412] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x40d: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x40d:0x413] = 0xd2|0x2f|0x103|0xfe|0x2f|0x52
	Stack@0x16a0f80[0x303:0x2fd] = 0x38|0x0|0x0|0x0|0x0|0x0

0x40e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x40e:0x414] = 0x2f|0x103|0xfe|0x2f|0x52|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x38|0x38|0x0|0x0|0x0|0x0

0x410: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x38; push(x + y);
	Opcodes@0x16a4f90[0x410:0x416] = 0xfe|0x2f|0x52|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x38|0x38|0x0|0x0|0x0

0x411: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x52; push(0x52);
	Opcodes@0x16a4f90[0x411:0x417] = 0x2f|0x52|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x13b|0x38|0x0|0x0|0x0|0x0

0x413: swap(x, y), opcode 0xf8
	y = pop() <- 0x52; x = pop() <- 0x13b; push(y); push(x);
	Opcodes@0x16a4f90[0x413:0x419] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x52|0x13b|0x38|0x0|0x0|0x0

0x414: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x13b; x = pop() <- 0x52; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x414:0x41a] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x13b|0x52|0x38|0x0|0x0|0x0

0x415: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x415:0x41b] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x38|0x0|0x0|0x0|0x0|0x0

0x417: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x38; push(x + y);
	Opcodes@0x16a4f90[0x417:0x41d] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x38|0x0|0x0|0x0|0x0

0x418: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x418:0x41e] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x39|0x0|0x0|0x0|0x0|0x0

0x41a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x39; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x41a:0x420] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x39|0x0|0x0|0x0|0x0

0x41b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x41b:0x421] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x41d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x41d:0x423] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x41e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x41e:0x424] = 0xd2|0x2f|0x103|0xfe|0x2f|0xe9
	Stack@0x16a0f80[0x303:0x2fd] = 0x39|0x0|0x0|0x0|0x0|0x0

0x41f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x41f:0x425] = 0x2f|0x103|0xfe|0x2f|0xe9|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x39|0x39|0x0|0x0|0x0|0x0

0x421: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x39; push(x + y);
	Opcodes@0x16a4f90[0x421:0x427] = 0xfe|0x2f|0xe9|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x39|0x39|0x0|0x0|0x0

0x422: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xe9; push(0xe9);
	Opcodes@0x16a4f90[0x422:0x428] = 0x2f|0xe9|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x13c|0x39|0x0|0x0|0x0|0x0

0x424: swap(x, y), opcode 0xf8
	y = pop() <- 0xe9; x = pop() <- 0x13c; push(y); push(x);
	Opcodes@0x16a4f90[0x424:0x42a] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xe9|0x13c|0x39|0x0|0x0|0x0

0x425: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x13c; x = pop() <- 0xe9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x425:0x42b] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x13c|0xe9|0x39|0x0|0x0|0x0

0x426: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x426:0x42c] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x39|0x0|0x0|0x0|0x0|0x0

0x428: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x39; push(x + y);
	Opcodes@0x16a4f90[0x428:0x42e] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x39|0x0|0x0|0x0|0x0

0x429: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x429:0x42f] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3a|0x0|0x0|0x0|0x0|0x0

0x42b: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x42b:0x431] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3a|0x0|0x0|0x0|0x0

0x42c: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x42c:0x432] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x42e: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x42e:0x434] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x42f: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x42f:0x435] = 0xd2|0x2f|0x103|0xfe|0x2f|0x4a
	Stack@0x16a0f80[0x303:0x2fd] = 0x3a|0x0|0x0|0x0|0x0|0x0

0x430: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x430:0x436] = 0x2f|0x103|0xfe|0x2f|0x4a|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x3a|0x3a|0x0|0x0|0x0|0x0

0x432: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x3a; push(x + y);
	Opcodes@0x16a4f90[0x432:0x438] = 0xfe|0x2f|0x4a|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x3a|0x3a|0x0|0x0|0x0

0x433: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4a; push(0x4a);
	Opcodes@0x16a4f90[0x433:0x439] = 0x2f|0x4a|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x13d|0x3a|0x0|0x0|0x0|0x0

0x435: swap(x, y), opcode 0xf8
	y = pop() <- 0x4a; x = pop() <- 0x13d; push(y); push(x);
	Opcodes@0x16a4f90[0x435:0x43b] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x4a|0x13d|0x3a|0x0|0x0|0x0

0x436: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x13d; x = pop() <- 0x4a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x436:0x43c] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x13d|0x4a|0x3a|0x0|0x0|0x0

0x437: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x437:0x43d] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3a|0x0|0x0|0x0|0x0|0x0

0x439: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3a; push(x + y);
	Opcodes@0x16a4f90[0x439:0x43f] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3a|0x0|0x0|0x0|0x0

0x43a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x43a:0x440] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3b|0x0|0x0|0x0|0x0|0x0

0x43c: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x43c:0x442] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3b|0x0|0x0|0x0|0x0

0x43d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x43d:0x443] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x43f: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x43f:0x445] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x440: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x440:0x446] = 0xd2|0x2f|0x103|0xfe|0x2f|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3b|0x0|0x0|0x0|0x0|0x0

0x441: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x441:0x447] = 0x2f|0x103|0xfe|0x2f|0x2f|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x3b|0x3b|0x0|0x0|0x0|0x0

0x443: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x3b; push(x + y);
	Opcodes@0x16a4f90[0x443:0x449] = 0xfe|0x2f|0x2f|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x3b|0x3b|0x0|0x0|0x0

0x444: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2f; push(0x2f);
	Opcodes@0x16a4f90[0x444:0x44a] = 0x2f|0x2f|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x13e|0x3b|0x0|0x0|0x0|0x0

0x446: swap(x, y), opcode 0xf8
	y = pop() <- 0x2f; x = pop() <- 0x13e; push(y); push(x);
	Opcodes@0x16a4f90[0x446:0x44c] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2f|0x13e|0x3b|0x0|0x0|0x0

0x447: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x13e; x = pop() <- 0x2f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x447:0x44d] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x13e|0x2f|0x3b|0x0|0x0|0x0

0x448: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x448:0x44e] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3b|0x0|0x0|0x0|0x0|0x0

0x44a: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3b; push(x + y);
	Opcodes@0x16a4f90[0x44a:0x450] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3b|0x0|0x0|0x0|0x0

0x44b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x44b:0x451] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3c|0x0|0x0|0x0|0x0|0x0

0x44d: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x44d:0x453] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3c|0x0|0x0|0x0|0x0

0x44e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x44e:0x454] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x450: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x450:0x456] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x451: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x451:0x457] = 0xd2|0x2f|0x103|0xfe|0x2f|0xac
	Stack@0x16a0f80[0x303:0x2fd] = 0x3c|0x0|0x0|0x0|0x0|0x0

0x452: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x452:0x458] = 0x2f|0x103|0xfe|0x2f|0xac|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x3c|0x3c|0x0|0x0|0x0|0x0

0x454: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x3c; push(x + y);
	Opcodes@0x16a4f90[0x454:0x45a] = 0xfe|0x2f|0xac|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x3c|0x3c|0x0|0x0|0x0

0x455: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xac; push(0xac);
	Opcodes@0x16a4f90[0x455:0x45b] = 0x2f|0xac|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x13f|0x3c|0x0|0x0|0x0|0x0

0x457: swap(x, y), opcode 0xf8
	y = pop() <- 0xac; x = pop() <- 0x13f; push(y); push(x);
	Opcodes@0x16a4f90[0x457:0x45d] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xac|0x13f|0x3c|0x0|0x0|0x0

0x458: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x13f; x = pop() <- 0xac; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x458:0x45e] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x13f|0xac|0x3c|0x0|0x0|0x0

0x459: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x459:0x45f] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3c|0x0|0x0|0x0|0x0|0x0

0x45b: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3c; push(x + y);
	Opcodes@0x16a4f90[0x45b:0x461] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3c|0x0|0x0|0x0|0x0

0x45c: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45c:0x462] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3d|0x0|0x0|0x0|0x0|0x0

0x45e: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x45e:0x464] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3d|0x0|0x0|0x0|0x0

0x45f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x45f:0x465] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x461: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x461:0x467] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x462: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x462:0x468] = 0xd2|0x2f|0x103|0xfe|0x2f|0x81
	Stack@0x16a0f80[0x303:0x2fd] = 0x3d|0x0|0x0|0x0|0x0|0x0

0x463: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x463:0x469] = 0x2f|0x103|0xfe|0x2f|0x81|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x3d|0x3d|0x0|0x0|0x0|0x0

0x465: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x3d; push(x + y);
	Opcodes@0x16a4f90[0x465:0x46b] = 0xfe|0x2f|0x81|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x3d|0x3d|0x0|0x0|0x0

0x466: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x81; push(0x81);
	Opcodes@0x16a4f90[0x466:0x46c] = 0x2f|0x81|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x140|0x3d|0x0|0x0|0x0|0x0

0x468: swap(x, y), opcode 0xf8
	y = pop() <- 0x81; x = pop() <- 0x140; push(y); push(x);
	Opcodes@0x16a4f90[0x468:0x46e] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x81|0x140|0x3d|0x0|0x0|0x0

0x469: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x140; x = pop() <- 0x81; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x469:0x46f] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x140|0x81|0x3d|0x0|0x0|0x0

0x46a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x46a:0x470] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3d|0x0|0x0|0x0|0x0|0x0

0x46c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3d; push(x + y);
	Opcodes@0x16a4f90[0x46c:0x472] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3d|0x0|0x0|0x0|0x0

0x46d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x46d:0x473] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3e|0x0|0x0|0x0|0x0|0x0

0x46f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x46f:0x475] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3e|0x0|0x0|0x0|0x0

0x470: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x470:0x476] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x472: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x472:0x478] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x473: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x473:0x479] = 0xd2|0x2f|0x103|0xfe|0x2f|0x3e
	Stack@0x16a0f80[0x303:0x2fd] = 0x3e|0x0|0x0|0x0|0x0|0x0

0x474: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x474:0x47a] = 0x2f|0x103|0xfe|0x2f|0x3e|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x3e|0x3e|0x0|0x0|0x0|0x0

0x476: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x3e; push(x + y);
	Opcodes@0x16a4f90[0x476:0x47c] = 0xfe|0x2f|0x3e|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x3e|0x3e|0x0|0x0|0x0

0x477: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3e; push(0x3e);
	Opcodes@0x16a4f90[0x477:0x47d] = 0x2f|0x3e|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x141|0x3e|0x0|0x0|0x0|0x0

0x479: swap(x, y), opcode 0xf8
	y = pop() <- 0x3e; x = pop() <- 0x141; push(y); push(x);
	Opcodes@0x16a4f90[0x479:0x47f] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x3e|0x141|0x3e|0x0|0x0|0x0

0x47a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x141; x = pop() <- 0x3e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x47a:0x480] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x141|0x3e|0x3e|0x0|0x0|0x0

0x47b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x47b:0x481] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3e|0x0|0x0|0x0|0x0|0x0

0x47d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3e; push(x + y);
	Opcodes@0x16a4f90[0x47d:0x483] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3e|0x0|0x0|0x0|0x0

0x47e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x47e:0x484] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3f|0x0|0x0|0x0|0x0|0x0

0x480: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x480:0x486] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3f|0x0|0x0|0x0|0x0

0x481: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x481:0x487] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x483: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x483:0x489] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x484: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x484:0x48a] = 0xd2|0x2f|0x103|0xfe|0x2f|0xc7
	Stack@0x16a0f80[0x303:0x2fd] = 0x3f|0x0|0x0|0x0|0x0|0x0

0x485: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x485:0x48b] = 0x2f|0x103|0xfe|0x2f|0xc7|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x3f|0x0|0x0|0x0|0x0

0x487: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x3f; push(x + y);
	Opcodes@0x16a4f90[0x487:0x48d] = 0xfe|0x2f|0xc7|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x3f|0x3f|0x0|0x0|0x0

0x488: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xc7; push(0xc7);
	Opcodes@0x16a4f90[0x488:0x48e] = 0x2f|0xc7|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x142|0x3f|0x0|0x0|0x0|0x0

0x48a: swap(x, y), opcode 0xf8
	y = pop() <- 0xc7; x = pop() <- 0x142; push(y); push(x);
	Opcodes@0x16a4f90[0x48a:0x490] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0xc7|0x142|0x3f|0x0|0x0|0x0

0x48b: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x142; x = pop() <- 0xc7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x48b:0x491] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x142|0xc7|0x3f|0x0|0x0|0x0
	//  copy keys from immediately number, 0x40 in totoal, from vmStack[0x103] ot vmStack[0x142]

0x48c: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x48c:0x492] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3f|0x0|0x0|0x0|0x0|0x0

0x48e: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3f; push(x + y);
	Opcodes@0x16a4f90[0x48e:0x494] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3f|0x0|0x0|0x0|0x0

0x48f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x48f:0x495] = 0x2f|0x0|0x86|0x2f|0x0|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x40|0x0|0x0|0x0|0x0|0x0

0x491: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x40; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x491:0x497] = 0x86|0x2f|0x0|0x2f|0x0|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x40|0x0|0x0|0x0|0x0

0x492: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x492:0x498] = 0x2f|0x0|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x494: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x494:0x49a] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x496: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x0; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x496:0x49c] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x0; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x0|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x0; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x0|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x203; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x0; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x0|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x1|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x0; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x0|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x2|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x5|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x1; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x1|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x204; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x204|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x0; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x0|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x2|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x2|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x0; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x0|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x1|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x2; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x2|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x205; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x205|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x3; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x0; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x0|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x1|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x3; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x3|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x206; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x206|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x4; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x0; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x0|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x3|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x3|0x3|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x3|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x3; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x3|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x3|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x4|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x207; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x207|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x4|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x5|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x5; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x5|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x3; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x3|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x5|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x5|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x8|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x5|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x5|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x208; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x208|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x3; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x3|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x5|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x8|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x3|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x4|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x7|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x6; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x6|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x209; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x209|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x7|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x4|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x7|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x7|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x7; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x7|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x20a; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x20a|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x7|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x8|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x8; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x3|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x6|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x6|0x6|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x6|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x6; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x6|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x6|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x8|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x8; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x8|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x20b; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x20b|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x8|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x8|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x9|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x9|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x6; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x6|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x8|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x8|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xb|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x9|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x9; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x9|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x20c; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x20c|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x9|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xa|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xa; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x6; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x6|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x8|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x8|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x6|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x7|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x7|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xa|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xa|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xa; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xa|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x20d; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x20d|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xb; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x7|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xa|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xb|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xb; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xb|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x20e; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x20e|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xc; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x6|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x9|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x9|0x9|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x9|0x9|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x9|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x9|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x9; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x9|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x9|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xc|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xc; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xc|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x20f; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x20f|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xc|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xc|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xd|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xd; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xd|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x9|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x9; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x9|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0xb|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xe; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xe|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xd|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xd; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xd|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x210; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x210|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xd|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xd; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xe|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x9|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x9; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x9|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0xb|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xb|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xe; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xe|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x9|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x9|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0xa|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xd; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xd|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xe|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xe; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xe|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x211; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x211|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xe|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xe; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xf|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xf; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x9|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xa|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xd; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xd|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xf; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xf|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x212; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x212|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xf|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xf; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x10; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x10|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x9|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x9|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0xc|0xc|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xc; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0xc|0xc|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0xc|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xc|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0xc; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xc|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xc|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xf; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xf|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x10|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x10|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x213; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x213|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x10|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x10|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x11|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x11; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x11|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xc|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xc; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0xc|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0xe|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xe; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xe|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x11|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x11|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x11; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x11|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x214; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x214|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x11|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x11; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x11|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x12|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x12; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x12|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xc|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xc; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xc|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0xe|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xe; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xe|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x11|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xc|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xc|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0xd|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xd; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xd|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x10; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x10|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x12|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x12; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x12|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x215; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x215|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x12|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x12; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x12|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x13|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x13; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x13|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xc|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0xd|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xd; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xd|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x10; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x13|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x13; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x13|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x216; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x216|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x13|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x13; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x13|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x14|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x14; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x14|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0xc|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xc|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xf|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0xf|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xf; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0xf|0xf|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0xf|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xf|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0xf; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xf|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xf|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xf; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xf|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x12; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x12|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x14|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x14; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x14|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x217; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x217|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x14|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x14; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x14|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x15|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x15; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x15|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xf; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0xf|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x11|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x11; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x11|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x14; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x14|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x15|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x15; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x15|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x218; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x218|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x15|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x15; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x15|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x16; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x16|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xf; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xf|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x11|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x11; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x11|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x14; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x14|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xf; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xf|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x10|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x10|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x13; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x13|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x16|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x16|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x219; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x219|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x16|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x17|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x17; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x17|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xf; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x10|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x13; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x13|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x17|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x17; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x17|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x21a; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x21a|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x17|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x17; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x17|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x18|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x18; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x18|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0xf|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xf; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xf|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x12|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x12|0x12|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x12; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x12|0x12|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x12|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x12|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x12; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x12|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x12|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x12; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x12|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x15; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x15|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x18|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x18|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x21b; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x21b|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x18|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x19|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x19; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x19|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x12|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x12; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x12|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x14|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x14; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x14|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x17; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x17|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x19|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x19; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x19|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x21c; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x21c|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x19|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x19; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x19|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1a|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x1a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1a|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x12|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x12; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x12|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x14|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x14; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x14|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x17; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x17|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x12|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x12; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x12|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x13|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x13; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x13|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x16; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x16|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1a|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x1a; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x1a|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x21d; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x21d|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1a|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1a; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1a|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1b|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x1b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1b|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x12|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x12; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x12|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x13|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x13; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x13|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x16; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1b|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x1b; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x1b|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x21e; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x21e|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1b|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1b; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1b|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1c|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x1c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1c|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x12|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x12; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x12|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x15|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x15|0x15|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x15; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x15|0x15|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x15|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x15|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x15; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x15|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x15|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x15; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x15|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x18; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x18|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x1c|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x1c; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x1c|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x21f; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x21f|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x1c|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1c; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x1c|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x1d|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x1d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x1d|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x15|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x15; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x15|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x17|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x17; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x17|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1a|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1d|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x1d; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x1d|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x220; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x220|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1d|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1d; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1d|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1e|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x1e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1e|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x15|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x15; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x15|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x17|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x17; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x17|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1a|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x15|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x15; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x15|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x16|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x16|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x19; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x19|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1e|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x1e; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x1e|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x221; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x221|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1e|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1e; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1e|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1f|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x1f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1f|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x15|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x15; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x15|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x16|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x19; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x19|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1f|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x1f; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x1f|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x222; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x222|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1f|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1f; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1f|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x20|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x20; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x20|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x15|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x15; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x15|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x18|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x18|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x18; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x18|0x18|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x18|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x18|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x18; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x18|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x18|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x18|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1b|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x20|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x20; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x20|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x223; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x223|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x20|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x20; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x20|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x21|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x21; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x21|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x18|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x1a|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1a; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x1a|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1d|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x21|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x21|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x224; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x224|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x21|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x22|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x22; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x22|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x18|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x18|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x1a|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1a; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x1a|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1d|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x18|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x19|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x19; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x19|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1c|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x22|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x22; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x22|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x225; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x225|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x22|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x22; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x22|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x23|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x23; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x23|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x18|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x18|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x19|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x19; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x19|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x1c|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x23|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x23; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x23|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x226; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x226|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x23|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x23; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x23|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x24|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x24; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x24|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x18|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x18|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1b|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1b|0x1b|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x1b|0x1b|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x1b|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1b|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x1b; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x1b|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1b|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1b; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x1b|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1e|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x24|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x24; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x24|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x227; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x227|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x24|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x24; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x24|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x25|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x25; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x25|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x1b|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x1b; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x1b|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x1d|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1d; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x1d|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x20; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x20|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x25|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x25; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x25|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x228; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x228|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x25|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x25; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x25|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x26|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x26; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x26|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x1b|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x1b; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1b|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x1d|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1d; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x1d|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x20; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x20|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x1b|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1b; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x1b|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x1c|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1c; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x1c|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1f|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x26|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x26; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x26|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x229; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x229|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x26|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x26; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x26|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x27|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x27; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x27|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x1b|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1b; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1b|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1c|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1c; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x1c|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x1f|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x27|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x27; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x27|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x22a; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x22a|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x27|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x27; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x27|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x28|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x28; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x28|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x1b|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1b; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x1b|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1e|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1e|0x1e|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x1e|0x1e|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x1e|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1e|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x1e; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x1e|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1e|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1e; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x1e|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x21; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x28|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x28; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x28|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x22b; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x22b|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x28|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x28; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x28|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x29|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x29; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x29|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x1e|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x1e; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x1e|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x20|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x20; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x20|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x23; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x23|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x29|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x29; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x29|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x22c; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x22c|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x29|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x29; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x29|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2a|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x2a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2a|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x1e|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x1e; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1e|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x20|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x20; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x20|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x23; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x23|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x1e|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1e; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x1e|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x1f|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1f; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x1f|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x22; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x22|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2a|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x2a; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x2a|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x22d; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x22d|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2a|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2a; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2a|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2b|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x2b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2b|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x1e|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1e; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1e|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1f|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1f; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x1f|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x22; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x22|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2b|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x2b; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x2b|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x22e; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x22e|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2b|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2b; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2b|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2c|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x2c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2c|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x1e|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x1e; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x1e|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x21|0x21|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x21; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x21|0x21|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x21|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x21; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x21|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x21|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x24; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x24|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2c|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x2c; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x2c|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x22f; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x22f|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x2c|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2c; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2c|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x21|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x21|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x23|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x23; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x23|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x26; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x26|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x2d; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x2d|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x230; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x230|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2d|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2d; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2d|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2e|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x2e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2e|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x21|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x23|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x23; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x23|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x26; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x26|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x21|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x21|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x22|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x22; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x22|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x25; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x25|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2e|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x2e; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x2e|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x231; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x231|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2e|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2e; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2e|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2f|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x2f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2f|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x21|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x22|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x22; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x22|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x25; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x25|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2f|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x2f; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x2f|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x232; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x232|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2f|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2f; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2f|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x30|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x30; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x30|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x21|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x24|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x24|0x24|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x24; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x24|0x24|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x24|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x24|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x24; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x24|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x24|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x24; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x24|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x27; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x27|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x30|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x30; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x30|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x233; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x233|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x30|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x30; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x30|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x31|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x31; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x31|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x24|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x24; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x24|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x26|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x26; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x26|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x29; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x29|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x31|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x31; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x31|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x234; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x234|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x31|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x31; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x31|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x32|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x32; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x32|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x24|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x24; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x24|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x26|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x26; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x26|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x29; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x29|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x24|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x24; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x24|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x25|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x25; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x25|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x28; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x28|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x32|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x32; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x32|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x235; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x235|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x32|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x32; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x32|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x33|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x33; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x33|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x24|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x24; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x24|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x25|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x25; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x25|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x28; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x28|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x33|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x33; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x33|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x236; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x236|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x33|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x33; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x33|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x34|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x34; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x34|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x24|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x24; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x24|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x27|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x27|0x27|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x27; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x27|0x27|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x27|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x27|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x27; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x27|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x27|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x27; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x27|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2a|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x34|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x34; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x34|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x237; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x237|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x34|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x34; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x34|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x35|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x35; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x35|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x27|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x27; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x27|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x29|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x29; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x29|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2c|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x35|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x35; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x35|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x238; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x238|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x35|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x35; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x35|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x36|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x36; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x36|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x27|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x27; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x27|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x29|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x29; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x29|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2c|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x27|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x27; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x27|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x28|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x28; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x28|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2b|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x36|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x36; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x36|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x239; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x239|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x36|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x36; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x36|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x37|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x37; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x37|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x27|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x27; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x27|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x28|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x28; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x28|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x2b|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x37|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x37; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x37|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x23a; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x23a|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x37|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x37; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x37|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x38|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x38; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x38|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x27|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x27; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x27|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2a|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x2a|0x2a|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x2a|0x2a|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x2a|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x2a|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x2a; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x2a|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2a|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2a; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x2a|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2d|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x38|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x38; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x38|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x23b; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x23b|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x38|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x38; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x38|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x39|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x39; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x39|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2a|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x2a; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x2a|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x2c|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2c; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x2c|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2f|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x39|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x39; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x39|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x23c; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x23c|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x39|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x39; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x39|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3a|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x3a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3a|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x2a|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x2a; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x2a|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x2c|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2c; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x2c|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2f|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2a|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2a; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2a|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x2b|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2b; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x2b|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2e|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x3a|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x3a; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x3a|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x23d; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x23d|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3a|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3a; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3a|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3b|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x3b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3b|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x2a|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2a; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2a|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2b|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2b; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x2b|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x2e|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x3b|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x3b; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x3b|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x23e; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x23e|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3b|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3b; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3b|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3c|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x3c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3c|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x2a|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2a; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x2a|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2d|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x2d|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x2d|0x2d|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x2d|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x2d|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x2d; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x2d|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2d|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2d; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x2d|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x30; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x30|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x3c|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x3c; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x3c|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x23f; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x23f|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x3c|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3c; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x3c|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x3d|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x3d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x3d|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x2d; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x2d|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x2f|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2f; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x2f|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x32; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x32|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x3d|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x3d; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x3d|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x240; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x240|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3d|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3d; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3d|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3e|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x3e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3e|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x2d|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x2d; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x2d|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x2f|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2f; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x2f|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x32; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x32|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2d; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x2e|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2e; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x2e|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x31; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x31|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x3e|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x3e; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x3e|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x241; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x241|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3e|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3e; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3e|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3f|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x3f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3f|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x2d|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2d; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2d|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2e|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2e; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x2e|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x31; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x31|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x3f; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x3f|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x242; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x242|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3f|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3f; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3f|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x40|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x40; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x40|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x2d|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x2d; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x2d|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x30|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x30|0x30|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x30; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x30|0x30|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x30|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x30|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x30; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x30|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x30|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x30; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x30|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x33; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x33|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x40|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x40; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x40|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x243; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x243|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x40|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x40; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x40|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x41|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x41; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x41|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x30|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x30; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x30|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x32|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x32; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x32|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x35; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x35|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x41|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x41; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x41|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x244; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x244|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x41|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x41; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x41|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x42|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x42; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x42|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x30|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x30; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x30|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x32|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x32; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x32|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x35; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x35|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x30|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x30; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x30|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x31|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x31; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x31|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x34; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x34|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x42|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x42; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x42|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x245; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x245|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x42|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x42; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x42|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x43|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x43; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x43|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x30|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x30; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x30|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x31|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x31; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x31|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x34; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x34|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x43|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x43; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x43|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x246; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x246|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x43|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x43; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x43|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x44|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x44; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x44|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x30|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x30; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x30|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x33|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x33|0x33|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x33; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x33|0x33|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x33|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x33|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x33; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x33|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x33|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x33; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x33|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x36; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x36|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x44|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x44; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x44|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x247; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x247|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x44|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x44; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x44|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x45|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x45; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x45|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x33|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x33; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x33|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x35|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x35; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x35|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x38; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x38|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x45|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x45; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x45|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x248; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x248|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x45|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x45; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x45|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x46|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x46; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x46|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x33|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x33; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x33|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x35|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x35; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x35|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x38; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x38|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x33|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x33; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x33|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x34|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x34; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x34|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x37; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x37|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x46|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x46; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x46|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x249; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x249|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x46|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x46; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x46|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x47|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x47; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x47|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x33|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x33; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x33|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x34|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x34; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x34|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x37; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x37|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x47|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x47; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x47|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x24a; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x24a|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x47|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x47; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x47|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x48|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x48; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x48|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x33|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x33; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x33|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x36|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x36|0x36|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x36; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x36|0x36|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x36|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x36|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x36; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x36|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x36|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x36; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x36|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x39; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x39|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x48|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x48; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x48|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x24b; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x24b|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x48|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x48; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x48|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x49|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x49; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x49|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x36|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x36; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x36|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x38|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x38; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x38|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3b|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x49|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x49; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x49|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x24c; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x24c|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x49|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x49; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x49|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x4a|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x4a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4a|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x36|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x36; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x36|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x38|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x38; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x38|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3b|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x36|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x36; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x36|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x37|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x37; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x37|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3a|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x4a|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x4a; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x4a|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x24d; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x24d|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x4a|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4a; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4a|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x4b|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x4b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4b|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x36|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x36; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x36|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x37|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x37; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x37|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x3a|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x4b|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x4b; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x4b|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x24e; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x24e|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x4b|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4b; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4b|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x4c|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x4c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4c|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x36|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x36; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x36|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x39|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x39|0x39|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x39; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x39|0x39|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x39|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x39|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x39; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x39|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x39|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x39; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x39|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3c|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x4c|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x4c; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x4c|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x24f; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x24f|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x4c|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4c; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x4c|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x4d|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x4d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x4d|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x39|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x39; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x39|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x3b|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3b; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x3b|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3e|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x4d|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x4d; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x4d|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x250; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x250|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x4d|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4d; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4d|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x4e|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x4e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4e|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x39|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x39; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x39|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x3b|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3b; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x3b|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3e|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x39|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x39; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x39|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x3a|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3a; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x3a|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3d|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x4e|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x4e; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x4e|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x251; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x251|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x4e|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4e; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4e|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x4f|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x4f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4f|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x39|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x39; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x39|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3a|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3a; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x3a|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x3d|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x4f|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x4f; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x4f|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x252; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x252|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x4f|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4f; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4f|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x50|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x50; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x50|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x39|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x39; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x39|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3c|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x3c|0x3c|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x3c|0x3c|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x3c|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x3c|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x3c; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x3c|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3c|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3c; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x3c|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x3f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3f|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x50|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x50; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x50|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x253; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x253|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x50|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x50; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x50|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x51|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x51; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x51|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x3c|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x3c; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x3c|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x3e|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3e; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x3e|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x41; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x41|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x51|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x51; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x51|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x254; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x254|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x51|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x51; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x51|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x52|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x52; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x52|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x3c|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x3c; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x3c|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x3e|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3e; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x3e|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x41; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x41|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x3c|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3c; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x3c|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x3d|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3d; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x3d|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x40; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x40|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x52|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x52; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x52|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x255; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x255|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x52|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x52; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x52|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x53|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x53; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x53|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x3c|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3c; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3c|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3d|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3d; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x3d|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x40; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x40|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x53|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x53; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x53|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x256; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x256|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x53|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x53; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x53|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x54|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x54; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x54|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x3c|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3c; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x3c|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3f|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x3f|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x3f|0x3f|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x3f|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x3f|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x3f; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x3f|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x3f|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3f; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x3f|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x42; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x42|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x54|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x54; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x54|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x257; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x257|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x54|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x54; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x54|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x55|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x55; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x55|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x3f; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x3f|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x41|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x41; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x41|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x44; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x44|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x55|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x55; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x55|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x258; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x258|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x55|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x55; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x55|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x56|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x56; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x56|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x3f|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x3f; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x3f|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x41|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x41; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x41|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x44; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x44|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3f; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x3f|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x40|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x40; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x40|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x43; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x43|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x56|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x56; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x56|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x259; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x259|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x56|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x56; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x56|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x57|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x57; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x57|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x3f|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3f; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3f|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x40|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x40; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x40|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x43; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x43|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x57|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x57; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x57|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x25a; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x25a|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x57|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x57; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x57|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x58|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x58; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x58|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x3f|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x3f; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x3f|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x42|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x42|0x42|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x42; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x42|0x42|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x42|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x42|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x42; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x42|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x42|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x42; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x42|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x45; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x45|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x58|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x58; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x58|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x25b; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x25b|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x58|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x58; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x58|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x59|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x59; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x59|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x42|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x42; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x42|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x44|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x44; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x44|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x47; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x47|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x59|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x59; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x59|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x25c; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x25c|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x59|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x59; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x59|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x5a|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x5a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5a|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x42|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x42; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x42|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x44|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x44; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x44|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x47; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x47|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x42|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x42; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x42|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x43|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x43; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x43|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x46; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x46|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x5a|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x5a; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x5a|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x25d; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x25d|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x5a|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5a; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5a|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x5b|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x5b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5b|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x42|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x42; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x42|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x43|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x43; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x43|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x46; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x46|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x5b|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x5b; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x5b|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x25e; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x25e|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x5b|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5b; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5b|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x5c|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x5c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5c|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x42|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x42; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x42|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x45|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x45|0x45|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x45; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x45|0x45|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x45|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x45|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x45; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x45|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x45|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x45; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x45|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x48; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x48|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x5c|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x5c; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x5c|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x25f; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x25f|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x5c|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5c; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x5c|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x5d|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x5d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x5d|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x45|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x45; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x45|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x47|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x47; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x47|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x4a|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x5d|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x5d; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x5d|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x260; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x260|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x5d|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5d; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5d|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x5e|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x5e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5e|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x45|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x45; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x45|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x47|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x47; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x47|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x4a|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x45|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x45; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x45|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x46|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x46; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x46|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x49; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x49|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x5e|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x5e; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x5e|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x261; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x261|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x5e|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5e; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5e|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x5f|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x5f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5f|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x45|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x45; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x45|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x46|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x46; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x46|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x49; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x49|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x5f|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x5f; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x5f|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x262; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x262|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x5f|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5f; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5f|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x60|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x60; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x60|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x45|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x45; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x45|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x48|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x48|0x48|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x48; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x48|0x48|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x48|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x48|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x48; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x48|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x48|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x48; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x48|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4b|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x60|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x60; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x60|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x263; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x263|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x60|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x60; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x60|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x61; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x61|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x48|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x48; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x48|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x4a|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4a; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x4a|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x4d|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x61; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x61|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x264; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x264|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x61; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x62|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x62; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x62|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x48|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x48; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x48|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x4a|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4a; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x4a|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x4d|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x48|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x48; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x48|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x49|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x49; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x49|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x4c|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x62|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x62; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x62|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x265; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x265|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x62|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x62; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x62|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x63|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x63; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x63|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x48|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x48; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x48|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x49|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x49; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x49|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x4c|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x63|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x63; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x63|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x266; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x266|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x63|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x63; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x63|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x64|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x64; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x64|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x48|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x48; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x48|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x4b|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4b|0x4b|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x4b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x4b|0x4b|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x4b|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x4b|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x4b; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x4b|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4b|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4b; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x4b|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4e|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x64|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x64; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x64|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x267; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x267|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x64|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x64; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x64|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x65|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x65; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x65|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x4b|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x4b; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x4b|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x4d|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4d; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x4d|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x50; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x50|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x65|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x65; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x65|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x268; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x268|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x65|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x65; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x65|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x66|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x66; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x66|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4b|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x4b; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x4b|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x4d|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4d; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x4d|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x50; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x50|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x4b|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4b; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x4b|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x4c|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4c; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x4c|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x4f|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x66|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x66; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x66|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x269; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x269|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x66|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x66; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x66|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x67|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x67; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x67|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4b|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4b; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4b|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4c|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4c; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x4c|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x4f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x4f|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x67|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x67; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x67|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x26a; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x26a|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x67|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x67; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x67|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x68|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x68; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x68|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x4b|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4b; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x4b|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x4e|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4e|0x4e|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x4e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x4e|0x4e|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x4e|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x4e|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x4e; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x4e|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4e|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4e; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x4e|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x51; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x51|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x68|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x68; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x68|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x26b; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x26b|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x68|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x68; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x68|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x69|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x69; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x69|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x4e|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x4e; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x4e|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x50|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x50; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x50|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x53; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x53|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x69|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x69; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x69|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x26c; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x26c|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x69|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x69; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x69|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x6a|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x6a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6a|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4e|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x4e; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x4e|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x50|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x50; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x50|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x53; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x53|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x4e|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4e; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x4e|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x4f|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4f; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x4f|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x52; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x52|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x6a|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x6a; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x6a|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x26d; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x26d|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x6a|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6a; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6a|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x6b|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x6b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6b|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4e|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4e; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4e|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x4f|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4f; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x4f|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x52; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x52|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x6b|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x6b; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x6b|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x26e; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x26e|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x6b|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6b; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6b|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x6c|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x6c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6c|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x4e|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x4e; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x4e|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x51|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x51|0x51|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x51; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x51|0x51|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x51|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x51|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x51; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x51|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x51|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x51; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x51|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x54; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x54|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x6c|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x6c; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x6c|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x26f; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x26f|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x6c|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6c; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x6c|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x6d|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x6d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x6d|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x51|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x51; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x51|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x53|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x53; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x53|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x56; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x56|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x6d|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x6d; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x6d|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x270; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x270|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x6d|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6d; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6d|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x6e|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x6e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6e|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x51|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x51; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x51|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x53|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x53; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x53|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x56; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x56|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x51|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x51; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x51|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x52|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x52; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x52|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x55; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x55|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x6e|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x6e; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x6e|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x271; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x271|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x6e|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6e; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6e|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x6f|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x6f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6f|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x51|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x51; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x51|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x52|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x52; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x52|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x55; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x55|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x6f|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x6f; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x6f|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x272; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x272|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x6f|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6f; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6f|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x70|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x70; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x70|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x51|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x51; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x51|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x54|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x54|0x54|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x54; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x54|0x54|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x54|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x54|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x54; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x54|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x54|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x54; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x54|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x57; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x57|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x70|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x70; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x70|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x273; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x273|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x70|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x70; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x70|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x71|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x71; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x71|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x54|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x54; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x54|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x56|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x56; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x56|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x59; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x59|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x71|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x71; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x71|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x274; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x274|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x71|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x71; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x71|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x72|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x72; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x72|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x54|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x54; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x54|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x56|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x56; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x56|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x59; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x59|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x54|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x54; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x54|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x55|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x55; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x55|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x58; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x58|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x72|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x72; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x72|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x275; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x275|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x72|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x72; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x72|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x73|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x73; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x73|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x54|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x54; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x54|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x55|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x55; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x55|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x58; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x58|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x73|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x73; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x73|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x276; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x276|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x73|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x73; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x73|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x74|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x74; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x74|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x54|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x54; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x54|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x57|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x57|0x57|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x57; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x57|0x57|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x57|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x57|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x57; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x57|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x57|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x57; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x57|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5a|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x74|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x74; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x74|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x277; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x277|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x74|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x74; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x74|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x75|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x75; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x75|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x57|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x57; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x57|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x59|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x59; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x59|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x5c|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x75|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x75; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x75|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x278; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x278|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x75|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x75; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x75|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x76|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x76; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x76|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x57|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x57; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x57|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x59|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x59; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x59|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x5c|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x57|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x57; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x57|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x58|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x58; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x58|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x5b|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x76|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x76; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x76|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x279; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x279|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x76|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x76; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x76|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x77|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x77; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x77|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x57|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x57; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x57|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x58|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x58; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x58|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x5b|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x77|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x77; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x77|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x27a; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x27a|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x77|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x77; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x77|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x78|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x78; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x78|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x57|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x57; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x57|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x5a|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x5a|0x5a|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x5a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x5a|0x5a|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x5a|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x5a|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x5a; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x5a|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5a|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5a; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x5a|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5d|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x78|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x78; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x78|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x27b; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x27b|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x78|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x78; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x78|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x79|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x79; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x79|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x5a|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x5a; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x5a|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x5c|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5c; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x5c|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x5f|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x79|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x79; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x79|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x27c; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x27c|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x79|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x79; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x79|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x7a|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x7a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7a|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x5a|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x5a; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x5a|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x5c|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5c; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x5c|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x5f|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x5a|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5a; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x5a|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x5b|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5b; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x5b|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x5e|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x7a|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x7a; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x7a|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x27d; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x27d|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x7a|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7a; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7a|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x7b|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x7b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7b|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x5a|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5a; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5a|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5b|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5b; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x5b|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x5e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x5e|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x7b|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x7b; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x7b|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x27e; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x27e|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x7b|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7b; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7b|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x7c|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x7c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7c|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x5a|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5a; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x5a|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x5d|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x5d|0x5d|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x5d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x5d|0x5d|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x5d|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x5d|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x5d; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x5d|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5d|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5d; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x5d|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x60; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x60|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x7c|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x7c; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x7c|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x27f; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x27f|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x7c|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7c; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x7c|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x7d|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x7d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x7d|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x5d|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x5d; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x5d|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x5f|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5f; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x5f|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x62; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x62|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x7d|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x7d; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x7d|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x280; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x280|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x7d|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7d; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7d|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x7e|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x7e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7e|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x5d|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x5d; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x5d|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x5f|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5f; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x5f|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x62; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x62|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x5d|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5d; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x5d|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x5e|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5e; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x5e|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x61; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x7e|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x7e; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x7e|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x281; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x281|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x7e|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7e; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7e|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x7f|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x7f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7f|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x5d|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5d; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5d|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x5e|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5e; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x5e|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x61; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x7f|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x7f; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x7f|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x282; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x282|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x7f|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7f; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7f|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x80|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x80; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x80|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x5d|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x5d; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x5d|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x60|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x60|0x60|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x60; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x60|0x60|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x60|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x60|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x60; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x60|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x60|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x60; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x60|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x63; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x63|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x80|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x80; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x80|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x283; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x283|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x80|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x80; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x80|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x81|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x81; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x81|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x60|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x60; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x60|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x62|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x62; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x62|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x65; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x65|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x81|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x81; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x81|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x284; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x284|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x81|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x81; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x81|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x82|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x82; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x82|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x60|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x60; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x60|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x62|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x62; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x62|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x65; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x65|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x60|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x60; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x60|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x61; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x61|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x64; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x64|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x82|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x82; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x82|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x285; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x285|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x82|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x82; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x82|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x83|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x83; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x83|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x60|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x60; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x60|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x61; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x64; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x64|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x83|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x83; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x83|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x286; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x286|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x83|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x83; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x83|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x84|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x84; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x84|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x60|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x60; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x60|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x63|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x63|0x63|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x63; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x63|0x63|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x63|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x63|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x63; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x63|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x63|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x63; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x63|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x66; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x66|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x84|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x84; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x84|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x287; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x287|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x84|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x84; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x84|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x85|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x85; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x85|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x63|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x63; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x63|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x65|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x65; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x65|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x68; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x68|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x85|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x85; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x85|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x288; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x288|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x85|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x85; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x85|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x86|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x86; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x86|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x63|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x63; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x63|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x65|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x65; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x65|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x68; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x68|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x63|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x63; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x63|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x64|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x64; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x64|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x67; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x67|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x86|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x86; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x86|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x289; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x289|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x86|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x86; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x86|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x87|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x87; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x87|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x63|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x63; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x63|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x64|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x64; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x64|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x67; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x67|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x87|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x87; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x87|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x28a; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x28a|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x87|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x87; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x87|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x88|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x88; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x88|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x63|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x63; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x63|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x66|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x66|0x66|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x66; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x66|0x66|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x66|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x66|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x66; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x66|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x66|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x66; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x66|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x69; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x69|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x88|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x88; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x88|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x28b; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x28b|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x88|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x88; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x88|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x89|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x89; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x89|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x66|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x66; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x66|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x68|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x68; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x68|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6b|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x89|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x89; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x89|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x28c; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x28c|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x89|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x89; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x89|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x8a|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x8a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8a|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x66|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x66; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x66|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x68|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x68; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x68|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x6b|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x66|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x66; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x66|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x67|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x67; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x67|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6a|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x8a|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x8a; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x8a|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x28d; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x28d|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x8a|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8a; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8a|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x8b|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x8b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8b|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x66|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x66; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x66|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x67|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x67; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x67|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x6a|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x8b|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x8b; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x8b|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x28e; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x28e|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x8b|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8b; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8b|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x8c|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x8c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8c|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x66|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x66; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x66|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x69|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x69|0x69|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x69; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x69|0x69|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x69|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x69|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x69; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x69|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x69|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x69; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x69|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6c|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x8c|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x8c; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x8c|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x28f; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x28f|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x8c|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8c; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x8c|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x8d|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x8d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x8d|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x69|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x69; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x69|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x6b|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6b; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x6b|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6e|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x8d|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x8d; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x8d|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x290; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x290|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x8d|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8d; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8d|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x8e|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x8e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8e|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x69|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x69; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x69|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x6b|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6b; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x6b|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x6e|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x69|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x69; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x69|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x6a|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6a; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x6a|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6d|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x8e|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x8e; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x8e|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x291; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x291|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x8e|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8e; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8e|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x8f|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x8f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8f|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x69|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x69; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x69|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6a|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6a; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x6a|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x6d|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x8f|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x8f; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x8f|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x292; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x292|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x8f|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8f; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8f|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x90|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x90; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x90|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x69|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x69; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x69|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x6c|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x6c|0x6c|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x6c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x6c|0x6c|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x6c|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x6c|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x6c; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x6c|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6c|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6c; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x6c|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x6f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6f|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x90|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x90; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x90|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x293; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x293|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x90|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x90; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x90|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x91|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x91; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x91|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x6c|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x6c; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x6c|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x6e|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6e; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x6e|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x71; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x71|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x91|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x91; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x91|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x294; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x294|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x91|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x91; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x91|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x92|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x92; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x92|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x6c|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x6c; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x6c|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x6e|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6e; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x6e|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x71; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x71|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x6c|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6c; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x6c|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x6d|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6d; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x6d|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x70; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x70|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x92|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x92; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x92|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x295; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x295|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x92|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x92; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x92|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x93|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x93; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x93|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x6c|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6c; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6c|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6d|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6d; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x6d|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x70; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x70|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x93|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x93; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x93|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x296; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x296|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x93|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x93; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x93|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x94|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x94; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x94|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x6c|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6c; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x6c|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x6f|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x6f|0x6f|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x6f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x6f|0x6f|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x6f|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x6f|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x6f; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x6f|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x6f|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6f; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x6f|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x72; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x72|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x94|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x94; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x94|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x297; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x297|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x94|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x94; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x94|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x95|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x95; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x95|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x6f|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x6f; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x6f|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x71|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x71; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x71|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x74; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x74|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x95|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x95; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x95|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x298; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x298|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x95|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x95; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x95|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x96|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x96; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x96|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x6f|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x6f; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x6f|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x71|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x71; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x71|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x74; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x74|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x6f|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6f; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x6f|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x70|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x70; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x70|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x73; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x73|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x96|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x96; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x96|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x299; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x299|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x96|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x96; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x96|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x97|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x97; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x97|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x6f|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6f; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6f|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x70|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x70; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x70|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x73; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x73|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x97|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x97; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x97|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x29a; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x29a|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x97|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x97; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x97|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x98|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x98; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x98|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x6f|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x6f; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x6f|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x72|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x72|0x72|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x72; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x72|0x72|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x72|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x72|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x72; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x72|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x72|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x72; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x72|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x75; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x75|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x98|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x98; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x98|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x29b; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x29b|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x98|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x98; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x98|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x99|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x99; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x99|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x72|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x72; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x72|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x74|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x74; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x74|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x77; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x77|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x99|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x99; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x99|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x29c; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x29c|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x99|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x99; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x99|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x9a|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x9a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9a|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x72|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x72; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x72|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x74|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x74; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x74|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x77; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x77|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x72|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x72; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x72|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x73|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x73; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x73|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x76; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x76|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x9a|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x9a; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x9a|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x29d; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x29d|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x9a|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9a; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9a|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x9b|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x9b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9b|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x72|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x72; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x72|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x73|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x73; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x73|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x76; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x76|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x9b|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x9b; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x9b|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x29e; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x29e|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x9b|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9b; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9b|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x9c|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x9c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9c|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x72|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x72; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x72|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x75|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x75|0x75|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x75; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x75|0x75|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x75|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x75|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x75; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x75|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x75|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x75; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x75|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x78; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x78|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x9c|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x9c; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x9c|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x29f; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x29f|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x9c|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9c; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x9c|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x9d|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x9d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x9d|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x75|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x75; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x75|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x77|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x77; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x77|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x7a|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x9d|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x9d; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x9d|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2a0; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2a0|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x9d|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9d; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9d|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x9e|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x9e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9e|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x75|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x75; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x75|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x77|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x77; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x77|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x7a|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x75|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x75; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x75|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x76|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x76; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x76|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x79; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x79|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x9e|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x9e; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x9e|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2a1; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2a1|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x9e|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9e; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9e|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x9f|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x9f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9f|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x75|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x75; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x75|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x76|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x76; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x76|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x79; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x79|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x9f|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x9f; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x9f|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2a2; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2a2|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x9f|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9f; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9f|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xa0|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xa0; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa0|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x75|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x75; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x75|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x78|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x78|0x78|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x78; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x78|0x78|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x78|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x78|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x78; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x78|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x78|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x78; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x78|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7b|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xa0|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xa0; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xa0|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2a3; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2a3|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xa0|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa0; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xa0|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xa1|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xa1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xa1|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x78|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x78; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x78|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x7a|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7a; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x7a|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x7d|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xa1|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xa1; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xa1|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2a4; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2a4|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa1|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa1; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa1|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xa2|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xa2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa2|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x78|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x78; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x78|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x7a|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7a; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x7a|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x7d|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x78|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x78; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x78|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x79|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x79; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x79|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x7c|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xa2|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xa2; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xa2|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2a5; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2a5|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa2|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa2; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa2|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xa3|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xa3; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa3|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x78|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x78; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x78|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x79|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x79; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x79|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x7c|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xa3|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xa3; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xa3|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2a6; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2a6|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa3|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa3; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa3|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xa4|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xa4; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa4|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x78|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x78; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x78|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x7b|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x7b|0x7b|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x7b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x7b|0x7b|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x7b|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x7b|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x7b; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x7b|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7b|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7b; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x7b|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7e|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xa4|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xa4; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xa4|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2a7; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2a7|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xa4|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa4; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xa4|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xa5|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xa5; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xa5|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x7b|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x7b; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x7b|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x7d|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7d; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x7d|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x80; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x80|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xa5|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xa5; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xa5|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2a8; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2a8|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa5|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa5; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa5|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x7b|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x7b; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x7b|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x7d|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7d; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x7d|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x80; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x80|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x7b|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7b; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x7b|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x7c|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7c; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x7c|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x7f|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xa6|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xa6; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xa6|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2a9; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2a9|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa6; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xa7|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xa7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa7|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x7b|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7b; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7b|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7c|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7c; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x7c|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x7f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x7f|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xa7|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xa7; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xa7|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2aa; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2aa|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa7|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa7; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa7|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xa8|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xa8; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa8|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x7b|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7b; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x7b|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x7e|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x7e|0x7e|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x7e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x7e|0x7e|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x7e|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x7e|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x7e; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x7e|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7e|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7e; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x7e|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x81; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x81|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xa8|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xa8; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xa8|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2ab; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2ab|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xa8|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa8; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xa8|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xa9|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xa9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xa9|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x7e|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x7e; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x7e|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x80|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x80; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x80|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x83; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x83|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xa9|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xa9; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xa9|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2ac; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2ac|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xa9|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa9; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa9|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xaa|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xaa; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xaa|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x7e|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x7e; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x7e|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x80|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x80; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x80|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x83; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x83|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x7e|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7e; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x7e|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x7f|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7f; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x7f|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x82; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x82|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xaa|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xaa; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xaa|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2ad; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2ad|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xaa|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xaa; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xaa|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xab|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xab; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xab|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x7e|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x7e; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x7e|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x7f|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7f; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x7f|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x82; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x82|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xab|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xab; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xab|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2ae; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2ae|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xab|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xab; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xab|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xac|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xac; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xac|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x7e|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x7e; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x7e|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x81|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x81|0x81|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x81; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x81|0x81|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x81|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x81|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x81; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x81|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x81|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x81; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x81|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x84; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x84|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xac|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xac; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xac|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2af; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2af|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xac|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xac; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xac|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xad|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xad; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xad|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x81|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x81; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x81|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x83|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x83; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x83|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x86; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x86|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xad|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xad; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xad|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2b0; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2b0|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xad|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xad; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xad|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xae|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xae; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xae|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x81|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x81; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x81|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x83|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x83; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x83|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x86; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x86|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x81|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x81; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x81|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x82|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x82; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x82|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x85; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x85|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xae|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xae; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xae|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2b1; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2b1|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xae|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xae; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xae|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xaf|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xaf; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xaf|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x81|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x81; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x81|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x82|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x82; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x82|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x85; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x85|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xaf|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xaf; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xaf|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2b2; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2b2|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xaf|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xaf; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xaf|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb0|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xb0; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb0|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x81|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x81; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x81|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x84|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x84|0x84|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x84; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x84|0x84|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x84|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x84|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x84; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x84|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x84|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x84; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x84|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x87; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x87|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xb0|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xb0; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xb0|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2b3; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2b3|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xb0|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb0; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xb0|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xb1|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xb1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xb1|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x84|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x84; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x84|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x86|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x86; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x86|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x89; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x89|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xb1|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xb1; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xb1|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2b4; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2b4|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb1|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb1; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb1|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb2|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xb2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb2|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x84|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x84; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x84|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x86|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x86; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x86|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x89; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x89|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x84|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x84; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x84|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x85|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x85; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x85|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x88; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x88|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xb2|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xb2; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xb2|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2b5; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2b5|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb2|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb2; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb2|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb3|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xb3; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb3|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x84|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x84; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x84|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x85|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x85; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x85|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x88; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x88|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xb3|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xb3; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xb3|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2b6; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2b6|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb3|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb3; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb3|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb4|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xb4; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb4|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x84|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x84; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x84|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x87|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x87|0x87|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x87; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x87|0x87|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x87|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x87|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x87; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x87|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x87|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x87; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x87|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8a|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xb4|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xb4; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xb4|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2b7; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2b7|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xb4|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb4; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xb4|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xb5|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xb5; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xb5|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x87|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x87; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x87|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x89|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x89; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x89|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x8c|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xb5|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xb5; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xb5|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2b8; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2b8|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb5|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb5; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb5|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb6|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xb6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb6|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x87|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x87; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x87|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x89|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x89; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x89|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x8c|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x87|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x87; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x87|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x88|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x88; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x88|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x8b|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xb6|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xb6; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xb6|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2b9; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2b9|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb6|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb6; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb6|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb7|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xb7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb7|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x87|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x87; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x87|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x88|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x88; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x88|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x8b|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xb7|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xb7; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xb7|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2ba; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2ba|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb7|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb7; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb7|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb8|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xb8; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb8|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x87|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x87; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x87|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x8a|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x8a|0x8a|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x8a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x8a|0x8a|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x8a|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x8a|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x8a; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x8a|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8a|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8a; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x8a|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8d|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xb8|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xb8; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xb8|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2bb; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2bb|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xb8|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb8; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xb8|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xb9|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xb9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xb9|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x8a|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x8a; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x8a|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x8c|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8c; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x8c|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x8f|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xb9|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xb9; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xb9|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2bc; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2bc|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xb9|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb9; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb9|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xba|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xba; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xba|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x8a|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x8a; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x8a|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x8c|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8c; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x8c|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x8f|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x8a|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8a; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x8a|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x8b|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8b; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x8b|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x8e|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xba|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xba; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xba|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2bd; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2bd|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xba|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xba; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xba|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xbb|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xbb; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xbb|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x8a|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8a; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8a|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8b|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8b; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x8b|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x8e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x8e|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xbb|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xbb; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xbb|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2be; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2be|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xbb|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xbb; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xbb|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xbc|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xbc; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xbc|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x8a|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8a; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x8a|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x8d|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x8d|0x8d|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x8d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x8d|0x8d|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x8d|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x8d|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x8d; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x8d|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8d|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8d; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x8d|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x90; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x90|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xbc|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xbc; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xbc|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2bf; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2bf|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xbc|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xbc; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xbc|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xbd|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xbd; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xbd|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x8d|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x8d; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x8d|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x8f|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8f; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x8f|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x92; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x92|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xbd|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xbd; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xbd|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2c0; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2c0|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xbd|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xbd; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xbd|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xbe|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xbe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xbe|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x8d|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x8d; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x8d|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x8f|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8f; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x8f|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x92; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x92|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x8d|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8d; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x8d|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x8e|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8e; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x8e|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x91; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x91|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xbe|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xbe; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xbe|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2c1; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2c1|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xbe|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xbe; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xbe|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xbf|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xbf; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xbf|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x8d|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x8d; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x8d|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x8e|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8e; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x8e|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x91; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x91|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xbf|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xbf; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xbf|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2c2; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2c2|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xbf|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xbf; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xbf|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc0|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xc0; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc0|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x8d|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x8d; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x8d|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x90|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x90|0x90|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x90; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x90|0x90|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x90|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x90|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x90; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x90|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x90|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x90; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x90|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x93; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x93|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xc0|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xc0; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xc0|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2c3; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2c3|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xc0|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc0; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xc0|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc1|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xc1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xc1|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x90|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x90; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x90|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x92|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x92; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x92|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x95; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x95|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xc1|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xc1; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xc1|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2c4; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2c4|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc1|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc1; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc1|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc2|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xc2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc2|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x90|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x90; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x90|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x92|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x92; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x92|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x95; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x95|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x90|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x90; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x90|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x91|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x91; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x91|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x94; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x94|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xc2|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xc2; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xc2|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2c5; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2c5|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc2|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc2; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc2|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc3|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xc3; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc3|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x90|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x90; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x90|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x91|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x91; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x91|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x94; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x94|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xc3|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xc3; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xc3|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2c6; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2c6|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc3|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc3; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc3|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc4|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xc4; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc4|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x90|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x90; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x90|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x93|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x93|0x93|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x93; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x93|0x93|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x93|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x93|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x93; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x93|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x93|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x93; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x93|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x96; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x96|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xc4|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xc4; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xc4|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2c7; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2c7|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xc4|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc4; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xc4|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc5|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xc5; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xc5|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x93|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x93; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x93|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x95|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x95; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x95|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x98; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x98|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xc5|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xc5; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xc5|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2c8; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2c8|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc5|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc5; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc5|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc6|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xc6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc6|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x93|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x93; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x93|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x95|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x95; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x95|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x98; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x98|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x93|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x93; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x93|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x94|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x94; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x94|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x97; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x97|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xc6|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xc6; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xc6|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2c9; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2c9|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc6|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc6; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc6|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc7|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xc7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc7|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x93|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x93; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x93|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x94|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x94; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x94|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x97; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x97|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xc7|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xc7; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xc7|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2ca; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2ca|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc7|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc7; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc7|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc8|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xc8; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc8|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x93|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x93; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x93|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x96|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x96|0x96|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x96; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x96|0x96|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x96|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x96|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x96; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x96|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x96|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x96; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x96|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x99; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x99|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xc8|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xc8; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xc8|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2cb; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2cb|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc8; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xc8|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc9|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xc9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xc9|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x96|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x96; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x96|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x98|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x98; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x98|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x9b|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xc9|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xc9; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xc9|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2cc; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2cc|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xc9|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc9; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc9|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xca|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xca; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xca|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x96|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x96; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x96|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x98|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x98; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x98|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x9b|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x96|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x96; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x96|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x97|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x97; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x97|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x9a|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xca|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xca; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xca|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2cd; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2cd|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xca|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xca; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xca|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xcb|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xcb; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xcb|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x96|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x96; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x96|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x97|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x97; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x97|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9a; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x9a|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xcb|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xcb; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xcb|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2ce; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2ce|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xcb|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xcb; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xcb|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xcc|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xcc; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xcc|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x96|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x96; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x96|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x99|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x99|0x99|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x99; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x99|0x99|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x99|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x99|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x99; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x99|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x99|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x99; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x99|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9c; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9c|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xcc|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xcc; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xcc|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2cf; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2cf|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xcc|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xcc; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xcc|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xcd|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xcd; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xcd|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x99|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x99; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x99|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x9b|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9b; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x9b|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x9e|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xcd|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xcd; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xcd|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2d0; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d0|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xcd|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xcd; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xcd|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xce|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xce; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xce|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x99|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x99; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x99|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x9b|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9b; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x9b|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9e; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x9e|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x99|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x99; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x99|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x9a|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9a; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x9a|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x9d|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xce|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xce; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xce|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2d1; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d1|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xce|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xce; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xce|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xcf|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xcf; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xcf|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x99|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x99; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x99|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9a|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9a; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x9a|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9d; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x9d|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xcf|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xcf; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xcf|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2d2; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d2|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xcf|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xcf; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xcf|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xd0|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xd0; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd0|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x99|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x99; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x99|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x9c|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x9c|0x9c|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x9c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x9c|0x9c|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x9c|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x9c|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x9c; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x9c|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9c|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9c; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x9c|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x9f; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9f|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xd0|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xd0; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xd0|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2d3; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2d3|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xd0|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xd0; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xd0|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xd1|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xd1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xd1|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x9c|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x9c; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x9c|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0x9e|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9e; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x9e|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xa1|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xd1|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xd1; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xd1|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2d4; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d4|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xd1|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xd1; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd1|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xd2|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xd2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd2|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x9c|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x9c; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x9c|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0x9e|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9e; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x9e|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xa1|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x9c|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9c; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x9c|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0x9d|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9d; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0x9d|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xa0|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xd2|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xd2; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xd2|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2d5; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d5|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xd2|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xd2; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd2|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xd3|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xd3; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd3|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x9c|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9c; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9c|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9d|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9d; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x9d|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xa0|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xd3|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xd3; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xd3|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2d6; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d6|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xd3|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xd3; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd3|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xd4|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xd4; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd4|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x9c|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9c; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x9c|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0x9f|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0x9f|0x9f|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x9f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x9f|0x9f|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0x9f|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x9f|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0x9f; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x9f|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x9f|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9f; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x9f|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa2|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xd4|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xd4; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xd4|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2d7; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2d7|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xd4|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xd4; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xd4|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xd5|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xd5; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xd5|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x9f|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x9f; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x9f|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0xa1|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa1; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa1|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa4; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xa4|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xd5|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xd5; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xd5|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2d8; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d8|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xd5|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xd5; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd5|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xd6|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xd6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd6|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x9f|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0x9f; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x9f|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0xa1|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa1; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xa1|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa4; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xa4|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x9f|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9f; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x9f|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0xa0|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa0; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa0|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa3; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xa3|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xd6|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xd6; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xd6|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2d9; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d9|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xd6|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xd6; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd6|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xd7|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xd7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd7|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x9f|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x9f; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x9f|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa0|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa0; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xa0|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa3; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xa3|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xd7|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xd7; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xd7|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2da; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2da|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xd7|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xd7; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd7|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xd8|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xd8; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd8|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x9f|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0x9f; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x9f|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xa2|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0xa2|0xa2|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xa2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0xa2|0xa2|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0xa2|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xa2|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0xa2; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xa2|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa2|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa2; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xa2|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa5; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa5|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xd8|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xd8; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xd8|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2db; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2db|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xd8|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xd8; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xd8|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xd9|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xd9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xd9|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xa2|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xa2; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0xa2|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0xa4|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa4; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa4|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa7; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xa7|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xd9|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xd9; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xd9|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2dc; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2dc|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xd9|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xd9; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xd9|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xda|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xda; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xda|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa2|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xa2; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xa2|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0xa4|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa4; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xa4|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa7; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xa7|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xa2|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa2; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xa2|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0xa3|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa3; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa3|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa6; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xa6|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xda|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xda; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xda|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2dd; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2dd|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xda|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xda; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xda|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xdb|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xdb; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xdb|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa2|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa2; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa2|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa3|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa3; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xa3|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa6; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xdb|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xdb; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xdb|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2de; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2de|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xdb|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xdb; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xdb|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xdc|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xdc; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xdc|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0xa2|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa2; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xa2|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xa5|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0xa5|0xa5|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xa5; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0xa5|0xa5|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0xa5|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xa5|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0xa5; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xa5|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa5|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa5; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xa5|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa8; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa8|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xdc|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xdc; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xdc|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2df; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2df|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xdc|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xdc; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xdc|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xdd|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xdd; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xdd|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xa5|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xa5; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0xa5|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0xa7|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa7; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa7|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xaa; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xaa|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xdd|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xdd; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xdd|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2e0; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2e0|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xdd|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xdd; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xdd|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xde|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xde; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xde|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa5|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xa5; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xa5|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0xa7|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa7; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xa7|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xaa; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xaa|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xa5|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa5; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xa5|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0xa6|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa6; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa6|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa9; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xa9|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xde|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xde; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xde|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2e1; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2e1|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xde|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xde; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xde|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xdf|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xdf; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xdf|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa5|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa5; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa5|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa6; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xa6|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xa9; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xa9|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xdf|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xdf; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xdf|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2e2; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2e2|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xdf|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xdf; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xdf|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xe0|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xe0; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe0|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0xa5|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa5; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xa5|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xa8|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0xa8|0xa8|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xa8; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0xa8|0xa8|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0xa8|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xa8|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0xa8; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xa8|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa8|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa8; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xa8|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xab; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xab|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xe0|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xe0; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xe0|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2e3; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2e3|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xe0|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xe0; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xe0|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xe1|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xe1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xe1|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xa8|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xa8; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0xa8|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0xaa|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xaa; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xaa|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xad; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xad|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xe1|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xe1; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xe1|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2e4; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2e4|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xe1|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xe1; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe1|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xe2|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xe2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe2|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa8|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xa8; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xa8|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0xaa|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xaa; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xaa|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xad; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xad|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xa8|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa8; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xa8|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0xa9|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa9; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xa9|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xac; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xac|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xe2|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xe2; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xe2|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2e5; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2e5|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xe2|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xe2; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe2|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xe3|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xe3; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe3|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa8|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xa8; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa8|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0xa9|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa9; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xa9|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xac; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xac|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xe3|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xe3; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xe3|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2e6; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2e6|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xe3|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xe3; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe3|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xe4|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xe4; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe4|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0xa8|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xa8; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xa8|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xab|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0xab|0xab|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xab; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0xab|0xab|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0xab|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xab|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0xab; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xab|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xab|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xab; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xab|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xae; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xae|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xe4|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xe4; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xe4|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2e7; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2e7|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xe4|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xe4; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xe4|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xe5|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xe5; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xe5|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xab|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xab; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0xab|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0xad|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xad; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xad|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xb0|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xe5|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xe5; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xe5|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2e8; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2e8|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xe5|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xe5; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe5|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xe6|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xe6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe6|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xab|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xab; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xab|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0xad|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xad; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xad|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb0|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xab|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xab; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xab|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0xac|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xac; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xac|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xaf; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xaf|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xe6|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xe6; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xe6|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2e9; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2e9|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xe6|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xe6; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe6|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xe7|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xe7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe7|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xab|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xab; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xab|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0xac|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xac; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xac|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xaf; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xaf|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xe7|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xe7; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xe7|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2ea; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2ea|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xe7|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xe7; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe7|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xe8|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xe8; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe8|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0xab|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xab; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xab|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xae|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0xae|0xae|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xae; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0xae|0xae|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0xae|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xae|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0xae; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xae|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xae|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xae; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xae|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb1|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xe8|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xe8; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xe8|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2eb; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2eb|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xe8|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xe8; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xe8|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xe9|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xe9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xe9|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xae|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xae; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0xae|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0xb0|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb0; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb0|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb3; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xb3|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xe9|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xe9; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xe9|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2ec; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2ec|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xe9|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xe9; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xe9|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xea|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xea; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xea|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xae|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xae; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xae|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0xb0|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb0; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xb0|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb3; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb3|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xae|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xae; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xae|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0xaf|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xaf; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xaf|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xb2|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xea|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xea; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xea|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2ed; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2ed|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xea|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xea; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xea|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xeb|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xeb; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xeb|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xae|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xae; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xae|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0xaf|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xaf; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xaf|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xb2|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xeb|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xeb; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xeb|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2ee; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2ee|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xeb|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xeb; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xeb|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xec|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xec; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xec|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0xae|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xae; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xae|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb1|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0xb1|0xb1|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xb1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0xb1|0xb1|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0xb1|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xb1|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0xb1; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xb1|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb1|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb1; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xb1|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb4; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb4|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xec|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xec; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xec|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2ef; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2ef|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xec|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xec; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xec|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xed|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xed; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xed|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xb1|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xb1; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0xb1|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0xb3|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb3; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb3|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb6; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xb6|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xed|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xed; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xed|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2f0; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2f0|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xed|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xed; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xed|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xee|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xee; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xee|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xb1|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xb1; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xb1|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0xb3|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb3; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xb3|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb6; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb6|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xb1|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb1; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xb1|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0xb2|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb2; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb2|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb5; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xb5|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xee|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xee; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xee|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2f1; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2f1|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xee|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xee; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xee|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xef|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xef; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xef|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xb1|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb1; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb1|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb2|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb2; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xb2|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb5; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xb5|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xef|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xef; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xef|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2f2; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2f2|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xef|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xef; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xef|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xf0|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xf0; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf0|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0xb1|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb1; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xb1|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb4|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0xb4|0xb4|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xb4; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0xb4|0xb4|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0xb4|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xb4|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0xb4; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xb4|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb4|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb4; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xb4|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb7; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb7|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xf0|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xf0; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xf0|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2f3; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2f3|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xf0|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xf0; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xf0|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xf1|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xf1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xf1|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xb4|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xb4; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0xb4|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0xb6|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb6; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb6|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb9; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xb9|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xf1|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xf1; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xf1|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2f4; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2f4|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xf1|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xf1; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf1|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xf2|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xf2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf2|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xb4|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xb4; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xb4|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0xb6|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb6; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xb6|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb9; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb9|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xb4|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb4; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xb4|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0xb5|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb5; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb5|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb8; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xb8|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xf2|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xf2; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xf2|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2f5; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2f5|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xf2|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xf2; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf2|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xf3|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xf3; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf3|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xb4|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb4; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb4|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb5|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb5; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xb5|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xb8; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xb8|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xf3|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xf3; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xf3|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2f6; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2f6|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xf3|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xf3; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf3|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xf4|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xf4; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf4|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0xb4|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb4; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xb4|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xb7|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0xb7|0xb7|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xb7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0xb7|0xb7|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0xb7|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xb7|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0xb7; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xb7|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb7|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb7; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xb7|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xba; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xba|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xf4|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xf4; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xf4|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2f7; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2f7|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xf4|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xf4; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xf4|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xf5|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xf5; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xf5|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xb7|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xb7; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0xb7|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0xb9|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb9; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb9|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xbc; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xbc|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xf5|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xf5; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xf5|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2f8; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2f8|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xf5|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xf5; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf5|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xf6|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xf6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf6|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xb7|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xb7; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xb7|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0xb9|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb9; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xb9|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xbc; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xbc|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xb7|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb7; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xb7|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0xb8|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb8; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xb8|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xbb; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xbb|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xf6|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xf6; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xf6|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2f9; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2f9|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xf6|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xf6; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf6|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xf7|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xf7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf7|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xb7|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xb7; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xb7|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0xb8|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb8; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xb8|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xbb; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xbb|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xf7|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xf7; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xf7|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2fa; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2fa|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xf7|0x0|0x0|0x0|0x0|0x0

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xf7; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf7|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xf8|0x0|0x0|0x0|0x0|0x0

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xf8; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf8|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0xb7|0x0|0x0|0x0|0x0|0x0

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xb7; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xb7|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xba|0x0|0x0|0x0|0x0|0x0

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0xba|0xba|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xba; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0xba|0xba|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0xba|0x0|0x0|0x0|0x0|0x0

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xba|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0xba; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xba|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xba|0x0|0x0|0x0|0x0|0x0

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xba; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xba|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xbd; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xbd|0x0|0x0|0x0|0x0|0x0

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xf8|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xf8; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xf8|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2fb; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2fb|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x0

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xf8|0x61|0x0|0x0|0x0|0x0

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xf8; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xf8|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xf9|0x61|0x0|0x0|0x0|0x0

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xf9|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x0

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x0

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x0|0x0

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x0

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xba|0x10|0x0|0x0|0x0|0x0

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xba; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0xba|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0xbc|0x10|0x0|0x0|0x0|0x0

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xbc; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xbc|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xbf; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xbf|0x10|0x0|0x0|0x0|0x0

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x0

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x0

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x0|0x0

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x0

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x0|0x0

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x0|0x0

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x0

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xf9|0xfe|0x0|0x0|0x0|0x0

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xf9; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xf9|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2fc; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2fc|0xfe|0x0|0x0|0x0|0x0

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xf9; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xfa|0x0|0x0|0x0|0x0|0x0

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xfa; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfa|0x0|0x0|0x0|0x0

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xba|0x0|0x0|0x0|0x0|0x0

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xba; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xba|0x0|0x0|0x0|0x0

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0xbc|0x0|0x0|0x0|0x0|0x0

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xbc; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xbc|0x0|0x0|0x0|0x0

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xbf; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xbf|0x0|0x0|0x0|0x0|0x0

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0x0|0x0

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0x0|0x0

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0x0|0x0|0x0

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0x0|0x0

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xba|0x4|0x0|0x0|0x0|0x0

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xba; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xba|0x4|0x0|0x0|0x0

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0xbb|0x4|0x0|0x0|0x0|0x0

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xbb; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xbb|0x4|0x0|0x0|0x0

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xbe; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xbe|0x4|0x0|0x0|0x0|0x0

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0x0|0x0

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0x0

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0x0|0x0

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0x0|0x0|0x0

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0x0|0x0

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0x0|0x0|0x0

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0x0|0x0|0x0

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0x0|0x0

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xfa|0xa6|0x0|0x0|0x0|0x0

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xfa; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xfa|0xa6|0x0|0x0|0x0

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2fd; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2fd|0xa6|0x0|0x0|0x0|0x0

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0xa6

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0x0

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xfa|0x0|0x0|0x0|0x0|0x0

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xfa; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfa|0x0|0x0|0x0|0x0

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xfb|0x0|0x0|0x0|0x0|0x0

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xfb; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfb|0x0|0x0|0x0|0x0

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0x0|0xa6

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0x0

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xba|0x0|0x0|0x0|0x0|0x0

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xba; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xba|0x0|0x0|0x0|0x0

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0xbb|0x0|0x0|0x0|0x0|0x0

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xbb; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xbb|0x0|0x0|0x0|0x0

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xbe; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xbe|0x0|0x0|0x0|0x0|0x0

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0x0

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0x0|0x0|0x0

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0x0|0x0|0x0|0x0

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0x0|0x0|0x0

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0x0|0x0|0x0|0x0

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0x0|0x0|0x0|0x0

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0x0|0x0|0x0

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xfb|0xf9|0x0|0x0|0x0|0x0

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xfb; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xfb|0xf9|0x0|0x0|0x0

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2fe; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2fe|0xf9|0x0|0x0|0x0|0x0

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0xf9|0xa6

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0xf9

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xfb|0x0|0x0|0x0|0x0|0xf9

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xfb; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfb|0x0|0x0|0x0|0x0

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xfc|0x0|0x0|0x0|0x0|0xf9

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xfc; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfc|0x0|0x0|0x0|0x0

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0xf9|0xa6

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0xf9

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0xba|0x0|0x0|0x0|0x0|0xf9

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xba; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xba|0x0|0x0|0x0|0x0

0x537: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xbd|0x0|0x0|0x0|0x0|0xf9

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0xbd|0xbd|0x0|0x0|0x0|0x0

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xbd; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0xbd|0xbd|0x0|0x0|0x0

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0xbd|0x0|0x0|0x0|0x0|0xf9

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xbd|0x0|0x0|0x0|0x0

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0xbd; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xbd|0x0|0x0|0x0|0x0

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x0|0xf9

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0x0|0x0|0xf9|0xa6

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0x0|0x0|0xf9

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xbd|0x0|0x0|0x0|0x0|0xf9

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xbd; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xbd|0x0|0x0|0x0|0x0

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc0|0x0|0x0|0x0|0x0|0xf9

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0x0; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x0|0xf9

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0x0|0x0|0x0|0x0

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0x0|0x0|0x0

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0x0|0x0|0x0|0x0

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0x0|0x0|0x0

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0x0|0x0|0x0|0x0

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0x0|0x0|0x0|0x0

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0x0|0x0|0x0

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0xfc|0x2d|0x61|0x0|0x0|0x0

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xfc; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0xfc|0x2d|0x61|0x0|0x0

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x2ff; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x2ff|0x2d|0x61|0x0|0x0|0x0

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x2d|0xf9

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0x0|0x0|0x0|0x2d

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0xfc|0x61|0x0|0x0|0x0|0x2d

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xfc; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xfc|0x61|0x0|0x0|0x0

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0xfd|0x61|0x0|0x0|0x0|0x2d

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xfd; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xfd|0x61|0x0|0x0|0x0

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0x0|0x2d|0xf9

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0x0|0x0|0x0|0x2d

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0x0|0x2d|0xf9

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0x0|0x0|0x0|0x2d

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0x0|0x0|0x0|0x2d|0xf9

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0x0|0x0|0x0|0x2d

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xbd|0x10|0x0|0x0|0x0|0x2d

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xbd; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0xbd|0x10|0x0|0x0|0x0

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0xbf|0x10|0x0|0x0|0x0|0x2d

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xbf; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xbf|0x10|0x0|0x0|0x0

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xc2|0x10|0x0|0x0|0x0|0x2d

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0x0|0x0|0x0|0x2d

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0x0|0x0|0x0

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0x0|0x0|0x0|0x2d

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0x0|0x0|0x0|0x2d|0xf9

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0x0|0x0|0x0|0x2d

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0x0|0x0|0x0|0x2d|0xf9

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0x0|0x2d|0xf9

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0x0|0x2d

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xfd|0xfe|0x0|0x0|0x0|0x2d

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xfd; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xfd|0xfe|0x0|0x0|0x0

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x300; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x300|0xfe|0x0|0x0|0x0|0x2d

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0xfe|0x2d|0xf9|0xa6

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0xfe|0x2d|0xf9

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xfd|0x0|0x0|0xfe|0x2d|0xf9

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xfd; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfd|0x0|0x0|0xfe|0x2d

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0x0|0xfe|0x2d|0xf9

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0x0|0xfe|0x2d

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0x0|0xfe|0x2d|0xf9|0xa6

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0x0|0xfe|0x2d|0xf9

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xbd|0x0|0x0|0xfe|0x2d|0xf9

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xbd; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xbd|0x0|0x0|0xfe|0x2d

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0xbf|0x0|0x0|0xfe|0x2d|0xf9

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xbf; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xbf|0x0|0x0|0xfe|0x2d

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc2|0x0|0x0|0xfe|0x2d|0xf9

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0x0|0xfe|0x2d|0xf9

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0x0|0x0|0xfe|0x2d

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0x0|0xfe|0x2d|0xf9

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0x0|0x0|0xfe|0x2d

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0x0|0x0|0xfe|0x2d|0xf9

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0x0|0x0|0xfe|0x2d

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xbd|0x4|0x0|0x0|0xfe|0x2d

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xbd; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xbd|0x4|0x0|0x0|0xfe

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0xbe|0x4|0x0|0x0|0xfe|0x2d

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xbe; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xbe|0x4|0x0|0x0|0xfe

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xc1|0x4|0x0|0x0|0xfe|0x2d

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0x0|0x0|0xfe|0x2d

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0x0|0x0|0xfe

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0x0|0x0|0xfe|0x2d

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0x0|0x0|0xfe|0x2d|0xf9

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0x0|0x0|0xfe|0x2d

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0x0|0x0|0xfe|0x2d|0xf9

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0x0|0x0|0xfe|0x2d|0xf9

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0x0|0x0|0xfe|0x2d

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xfe|0xa6|0x0|0x0|0xfe|0x2d

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xfe; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xfe|0xa6|0x0|0x0|0xfe

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x301; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x301|0xa6|0x0|0x0|0xfe|0x2d

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0xa6|0xfe|0x2d|0xf9|0xa6

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0x0|0xa6|0xfe|0x2d|0xf9

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0x0|0xa6|0xfe|0x2d|0xf9

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xfe; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0x0|0xa6|0xfe|0x2d

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0xff|0x0|0xa6|0xfe|0x2d|0xf9

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0xff; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xff|0x0|0xa6|0xfe|0x2d

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0x0|0xa6|0xfe|0x2d|0xf9|0xa6

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0x0|0xa6|0xfe|0x2d|0xf9

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xbd|0x0|0xa6|0xfe|0x2d|0xf9

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xbd; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xbd|0x0|0xa6|0xfe|0x2d

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0xbe|0x0|0xa6|0xfe|0x2d|0xf9

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xbe; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xbe|0x0|0xa6|0xfe|0x2d

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xc1|0x0|0xa6|0xfe|0x2d|0xf9

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0x0|0xa6|0xfe|0x2d|0xf9

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0x0|0xa6|0xfe|0x2d

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0x0|0xa6|0xfe|0x2d|0xf9

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0x0|0xa6|0xfe|0x2d

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0x0|0xa6|0xfe|0x2d|0xf9

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0x0|0xa6|0xfe|0x2d|0xf9

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0x0|0xa6|0xfe|0x2d

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0xff|0xf9|0x0|0xa6|0xfe|0x2d

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0xff; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0xff|0xf9|0x0|0xa6|0xfe

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x302; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x302|0xf9|0x0|0xa6|0xfe|0x2d

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0xff|0xf9|0xa6|0xfe|0x2d|0xf9

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xff; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xff|0xf9|0xa6|0xfe|0x2d

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x100|0xf9|0xa6|0xfe|0x2d|0xf9

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x100; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x100|0xf9|0xa6|0xfe|0x2d

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0xbd|0xf9|0xa6|0xfe|0x2d|0xf9

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xbd; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xbd|0xf9|0xa6|0xfe|0x2d

0x537: dup(x), opcode 0xd2
	x = pop() <- 0xf9; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc0|0xf9|0xa6|0xfe|0x2d|0xf9

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0xc0|0xc0|0xf9|0xa6|0xfe|0x2d

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xc0; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0xc0|0xc0|0xf9|0xa6|0xfe

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0xc0|0xf9|0xa6|0xfe|0x2d|0xf9

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xc0|0xf9|0xa6|0xfe|0x2d

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0xc0; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xc0|0xf9|0xa6|0xfe|0x2d

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc0|0xf9|0xa6|0xfe|0x2d|0xf9

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc0; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xc0|0xf9|0xa6|0xfe|0x2d

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc3; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc3|0xf9|0xa6|0xfe|0x2d|0xf9

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0xf9; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0xf9|0xa6|0xfe|0x2d|0xf9

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0xf9|0xa6|0xfe|0x2d

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0xf9|0xa6|0xfe

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0xf9|0xa6|0xfe|0x2d

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0xf9|0xa6|0xfe

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0xf9|0xa6|0xfe|0x2d

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0xf9|0xa6|0xfe|0x2d

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0xf9|0xa6|0xfe

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x100|0x2d|0x61|0xf9|0xa6|0xfe

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x100; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x100|0x2d|0x61|0xf9|0xa6

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x303; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x303|0x2d|0x61|0xf9|0xa6|0xfe

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x2d|0xf9|0xa6|0xfe|0x2d|0xf9

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2d|0xf9|0xa6|0xfe|0x2d

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x100|0x2d|0xf9|0xa6|0xfe|0x2d

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x100; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x100|0x2d|0xf9|0xa6|0xfe

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x101|0x2d|0xf9|0xa6|0xfe|0x2d

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x101; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x101|0x2d|0xf9|0xa6|0xfe

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2d|0xf9|0xa6|0xfe|0x2d|0xf9

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x2d; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x2d|0xf9|0xa6|0xfe|0x2d

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0xf9|0xa6|0xfe|0x2d

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0xf9|0xa6|0xfe|0x2d|0xf9

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0xf9|0xa6|0xfe|0x2d

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xc0|0x10|0xf9|0xa6|0xfe|0x2d

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xc0; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0xc0|0x10|0xf9|0xa6|0xfe

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc2|0x10|0xf9|0xa6|0xfe|0x2d

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc2; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xc2|0x10|0xf9|0xa6|0xfe

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc5; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xc5|0x10|0xf9|0xa6|0xfe|0x2d

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0xf9|0xa6|0xfe|0x2d

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0xf9|0xa6|0xfe

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0xf9|0xa6|0xfe|0x2d

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0xf9|0xa6|0xfe|0x2d|0xf9

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0xf9|0xa6|0xfe|0x2d

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0xf9|0xa6|0xfe|0x2d|0xf9

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0xf9|0xa6|0xfe|0x2d|0xf9

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0xf9|0xa6|0xfe|0x2d

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x101|0xfe|0xf9|0xa6|0xfe|0x2d

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x101; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x101|0xfe|0xf9|0xa6|0xfe

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x304; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x304|0xfe|0xf9|0xa6|0xfe|0x2d

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x101|0xf9|0xa6|0xfe|0x2d|0xf9

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x101; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x101|0xf9|0xa6|0xfe|0x2d

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x102|0xf9|0xa6|0xfe|0x2d|0xf9

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x102; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x102|0xf9|0xa6|0xfe|0x2d

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xc0|0xf9|0xa6|0xfe|0x2d|0xf9

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xc0; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xc0|0xf9|0xa6|0xfe|0x2d

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0xc2|0xf9|0xa6|0xfe|0x2d|0xf9

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc2; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xc2|0xf9|0xa6|0xfe|0x2d

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc5; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc5|0xf9|0xa6|0xfe|0x2d|0xf9

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0xf9|0xa6|0xfe|0x2d|0xf9

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0xf9|0xa6|0xfe|0x2d

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0xf9|0xa6|0xfe|0x2d

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0xf9|0xa6|0xfe|0x2d|0xf9

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0xf9|0xa6|0xfe|0x2d

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xc0|0x4|0xf9|0xa6|0xfe|0x2d

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc0; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xc0|0x4|0xf9|0xa6|0xfe

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0xc1|0x4|0xf9|0xa6|0xfe|0x2d

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc1; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xc1|0x4|0xf9|0xa6|0xfe

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc4; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xc4|0x4|0xf9|0xa6|0xfe|0x2d

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0xf9|0xa6|0xfe|0x2d

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0xf9|0xa6|0xfe

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0xf9|0xa6|0xfe|0x2d

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0xf9|0xa6|0xfe|0x2d|0xf9

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0xf9|0xa6|0xfe|0x2d

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0xf9|0xa6|0xfe|0x2d|0xf9

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0xf9|0xa6|0xfe|0x2d|0xf9

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0xf9|0xa6|0xfe|0x2d

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x102|0xa6|0xf9|0xa6|0xfe|0x2d

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x102; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x102|0xa6|0xf9|0xa6|0xfe

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x305; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x305|0xa6|0xf9|0xa6|0xfe|0x2d

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x102|0xf9|0xa6|0xfe|0x2d|0xf9

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x102; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x102|0xf9|0xa6|0xfe|0x2d

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x103|0xf9|0xa6|0xfe|0x2d|0xf9

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x103; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x103|0xf9|0xa6|0xfe|0x2d

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xc0|0xf9|0xa6|0xfe|0x2d|0xf9

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc0; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc0|0xf9|0xa6|0xfe|0x2d

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc1|0xf9|0xa6|0xfe|0x2d|0xf9

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc1; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xc1|0xf9|0xa6|0xfe|0x2d

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc4; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xc4|0xf9|0xa6|0xfe|0x2d|0xf9

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0xf9|0xa6|0xfe|0x2d|0xf9

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0xf9|0xa6|0xfe|0x2d

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0xf9|0xa6|0xfe|0x2d|0xf9

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0xf9|0xa6|0xfe|0x2d

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0xf9|0xa6|0xfe|0x2d|0xf9

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0xf9|0xa6|0xfe|0x2d|0xf9

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0xf9|0xa6|0xfe|0x2d

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0xf9|0xf9|0xa6|0xfe|0x2d

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x103; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x103|0xf9|0xf9|0xa6|0xfe

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x306; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x306|0xf9|0xf9|0xa6|0xfe|0x2d

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x103|0xf9|0xa6|0xfe|0x2d|0xf9

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x103; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x103|0xf9|0xa6|0xfe|0x2d

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x104|0xf9|0xa6|0xfe|0x2d|0xf9

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x104; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x104|0xf9|0xa6|0xfe|0x2d

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0xc0|0xf9|0xa6|0xfe|0x2d|0xf9

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc0; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xc0|0xf9|0xa6|0xfe|0x2d

0x537: dup(x), opcode 0xd2
	x = pop() <- 0xf9; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc3|0xf9|0xa6|0xfe|0x2d|0xf9

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0xc3|0xc3|0xf9|0xa6|0xfe|0x2d

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xc3; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0xc3|0xc3|0xf9|0xa6|0xfe

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0xc3|0xf9|0xa6|0xfe|0x2d|0xf9

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xc3|0xf9|0xa6|0xfe|0x2d

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0xc3; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xc3|0xf9|0xa6|0xfe|0x2d

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc3|0xf9|0xa6|0xfe|0x2d|0xf9

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc3; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xc3|0xf9|0xa6|0xfe|0x2d

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc6; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc6|0xf9|0xa6|0xfe|0x2d|0xf9

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0xf9; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0xf9|0xa6|0xfe|0x2d|0xf9

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0xf9|0xa6|0xfe|0x2d

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0xf9|0xa6|0xfe

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0xf9|0xa6|0xfe|0x2d

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0xf9|0xa6|0xfe

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0xf9|0xa6|0xfe|0x2d

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0xf9|0xa6|0xfe|0x2d

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0xf9|0xa6|0xfe

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x104|0x2d|0x61|0xf9|0xa6|0xfe

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x104; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x104|0x2d|0x61|0xf9|0xa6

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x307; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x307|0x2d|0x61|0xf9|0xa6|0xfe

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0xf9|0xa6|0xfe|0x2d|0xf9

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0xf9|0xa6|0xfe|0x2d

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x104|0x61|0xf9|0xa6|0xfe|0x2d

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x104; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x104|0x61|0xf9|0xa6|0xfe

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x105|0x61|0xf9|0xa6|0xfe|0x2d

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x105; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x105|0x61|0xf9|0xa6|0xfe

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0xf9|0xa6|0xfe|0x2d|0xf9

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0xf9|0xa6|0xfe|0x2d

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0xf9|0xa6|0xfe|0x2d

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0xf9|0xa6|0xfe|0x2d|0xf9

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0xf9|0xa6|0xfe|0x2d

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xc3|0x10|0xf9|0xa6|0xfe|0x2d

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xc3; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0xc3|0x10|0xf9|0xa6|0xfe

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc5|0x10|0xf9|0xa6|0xfe|0x2d

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc5; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xc5|0x10|0xf9|0xa6|0xfe

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc8; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x10|0xf9|0xa6|0xfe|0x2d

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x10|0xf9|0xa6|0xfe|0x2d

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x61|0x10|0xf9|0xa6|0xfe

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x6; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x10|0xf9|0xa6|0xfe|0x2d

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x16|0xf9|0xa6|0xfe|0x2d|0xf9

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x16; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x16|0xf9|0xa6|0xfe|0x2d

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x119; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x119|0xf9|0xa6|0xfe|0x2d|0xf9

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xfe|0xf9|0xa6|0xfe|0x2d|0xf9

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xfe|0xf9|0xa6|0xfe|0x2d

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x105|0xfe|0xf9|0xa6|0xfe|0x2d

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x105; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x105|0xfe|0xf9|0xa6|0xfe

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x308; x = pop() <- 0xfe; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x308|0xfe|0xf9|0xa6|0xfe|0x2d

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x105|0xf9|0xa6|0xfe|0x2d|0xf9

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x105; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x105|0xf9|0xa6|0xfe|0x2d

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x106|0xf9|0xa6|0xfe|0x2d|0xf9

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x106; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x106|0xf9|0xa6|0xfe|0x2d

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xc3|0xf9|0xa6|0xfe|0x2d|0xf9

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xc3; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xc3|0xf9|0xa6|0xfe|0x2d

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0xc5|0xf9|0xa6|0xfe|0x2d|0xf9

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc5; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xc5|0xf9|0xa6|0xfe|0x2d

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc8; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc8|0xf9|0xa6|0xfe|0x2d|0xf9

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0xf9|0xa6|0xfe|0x2d|0xf9

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x61|0xf9|0xa6|0xfe|0x2d

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x1|0xf9|0xa6|0xfe|0x2d

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0xf9|0xa6|0xfe|0x2d|0xf9

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0xf9|0xa6|0xfe|0x2d

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xc3|0x4|0xf9|0xa6|0xfe|0x2d

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc3; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xc3|0x4|0xf9|0xa6|0xfe

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0xc4|0x4|0xf9|0xa6|0xfe|0x2d

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc4; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xc4|0x4|0xf9|0xa6|0xfe

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc7; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xc7|0x4|0xf9|0xa6|0xfe|0x2d

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x4|0xf9|0xa6|0xfe|0x2d

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x4|0xf9|0xa6|0xfe

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0xf9|0xa6|0xfe|0x2d

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0xf9|0xa6|0xfe|0x2d|0xf9

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x5|0xf9|0xa6|0xfe|0x2d

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x108; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0xf9|0xa6|0xfe|0x2d|0xf9

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xa6|0xf9|0xa6|0xfe|0x2d|0xf9

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xa6|0xf9|0xa6|0xfe|0x2d

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x106|0xa6|0xf9|0xa6|0xfe|0x2d

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x106; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x106|0xa6|0xf9|0xa6|0xfe

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x309; x = pop() <- 0xa6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x309|0xa6|0xf9|0xa6|0xfe|0x2d

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x106|0xf9|0xa6|0xfe|0x2d|0xf9

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x106; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x106|0xf9|0xa6|0xfe|0x2d

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x107|0xf9|0xa6|0xfe|0x2d|0xf9

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x107; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x107|0xf9|0xa6|0xfe|0x2d

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xc3|0xf9|0xa6|0xfe|0x2d|0xf9

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc3; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc3|0xf9|0xa6|0xfe|0x2d

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc4|0xf9|0xa6|0xfe|0x2d|0xf9

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc4; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xc4|0xf9|0xa6|0xfe|0x2d

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc7; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xc7|0xf9|0xa6|0xfe|0x2d|0xf9

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0xf9|0xa6|0xfe|0x2d|0xf9

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0xf9|0xa6|0xfe|0x2d

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0xf9|0xa6|0xfe|0x2d|0xf9

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0xf9|0xa6|0xfe|0x2d

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0xf9|0xa6|0xfe|0x2d|0xf9

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0xf9|0xa6|0xfe|0x2d|0xf9

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0xf9|0xa6|0xfe|0x2d

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x107|0xf9|0xf9|0xa6|0xfe|0x2d

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x107; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x107|0xf9|0xf9|0xa6|0xfe

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x30a; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x30a|0xf9|0xf9|0xa6|0xfe|0x2d

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x107|0xf9|0xa6|0xfe|0x2d|0xf9

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x107; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x107|0xf9|0xa6|0xfe|0x2d

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x108|0xf9|0xa6|0xfe|0x2d|0xf9

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x108; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x108|0xf9|0xa6|0xfe|0x2d

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0xc3|0xf9|0xa6|0xfe|0x2d|0xf9

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc3; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xc3|0xf9|0xa6|0xfe|0x2d

0x537: dup(x), opcode 0xd2
	x = pop() <- 0xf9; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc6|0xf9|0xa6|0xfe|0x2d|0xf9

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0xc6|0xc6|0xf9|0xa6|0xfe|0x2d

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xc6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0xc6|0xc6|0xf9|0xa6|0xfe

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0xc6|0xf9|0xa6|0xfe|0x2d|0xf9

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xc6|0xf9|0xa6|0xfe|0x2d

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0xc6; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xc6|0xf9|0xa6|0xfe|0x2d

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x1; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x497: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x497:0x49d] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x499: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x499:0x49f] = 0xe2|0x2f|0x3|0xfe|0xe2|0xd2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x49a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x49a:0x4a0] = 0x2f|0x3|0xfe|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc6|0xf9|0xa6|0xfe|0x2d|0xf9

0x49c: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc6; push(x + y);
	Opcodes@0x16a4f90[0x49c:0x4a2] = 0xfe|0xe2|0xd2|0x2f|0x2|0x3e
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xc6|0xf9|0xa6|0xfe|0x2d

0x49d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xc9; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x49d:0x4a3] = 0xe2|0xd2|0x2f|0x2|0x3e|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc9|0xf9|0xa6|0xfe|0x2d|0xf9

0x49e: dup(x), opcode 0xd2
	x = pop() <- 0xf9; push(x); push(x);
	Opcodes@0x16a4f90[0x49e:0x4a4] = 0xd2|0x2f|0x2|0x3e|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0xf9|0xa6|0xfe|0x2d|0xf9

0x49f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x49f:0x4a5] = 0x2f|0x2|0x3e|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x61|0xf9|0xa6|0xfe|0x2d

0x4a1: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x2; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4a1:0x4a7] = 0x3e|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0x61|0x61|0xf9|0xa6|0xfe

0x4a2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4a2:0x4a8] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x18|0x61|0xf9|0xa6|0xfe|0x2d

0x4a4: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x18; push(x + y);
	Opcodes@0x16a4f90[0x4a4:0x4aa] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x18|0x61|0xf9|0xa6|0xfe

0x4a5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x11b; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a5:0x4ab] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x304:0x2fe] = 0x11b|0x61|0xf9|0xa6|0xfe|0x2d

0x4a6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4a6:0x4ac] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0x2d|0x61|0xf9|0xa6|0xfe|0x2d

0x4a8: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4a8:0x4ae] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x2d|0x61|0xf9|0xa6|0xfe

0x4a9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4a9:0x4af] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x108|0x2d|0x61|0xf9|0xa6|0xfe

0x4ab: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x108; push(x + y);
	Opcodes@0x16a4f90[0x4ab:0x4b1] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x306:0x300] = 0x203|0x108|0x2d|0x61|0xf9|0xa6

0x4ac: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x30b; x = pop() <- 0x2d; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4ac:0x4b2] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x305:0x2ff] = 0x30b|0x2d|0x61|0xf9|0xa6|0xfe

0x4ad: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ad:0x4b3] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0xf9|0xa6|0xfe|0x2d|0xf9

0x4af: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4af:0x4b5] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x61|0xf9|0xa6|0xfe|0x2d

0x4b0: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b0:0x4b6] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x304:0x2fe] = 0x108|0x61|0xf9|0xa6|0xfe|0x2d

0x4b2: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x108; push(x + y);
	Opcodes@0x16a4f90[0x4b2:0x4b8] = 0xfe|0x2f|0x1|0x86|0x2f|0x3
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x108|0x61|0xf9|0xa6|0xfe

0x4b3: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4b3:0x4b9] = 0x2f|0x1|0x86|0x2f|0x3|0xd4
	Stack@0x16a0f80[0x304:0x2fe] = 0x109|0x61|0xf9|0xa6|0xfe|0x2d

0x4b5: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x109; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4b5:0x4bb] = 0x86|0x2f|0x3|0xd4|0x2f|0x4
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0x109|0x61|0xf9|0xa6|0xfe

0x4b6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4b6:0x4bc] = 0x2f|0x3|0xd4|0x2f|0x4|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0xf9|0xa6|0xfe|0x2d|0xf9

0x4b8: and(x, y), opcode 0xd4
	y = pop() <- 0x3; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x4b8:0x4be] = 0xd4|0x2f|0x4|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x61|0xf9|0xa6|0xfe|0x2d

0x4b9: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4b9:0x4bf] = 0x2f|0x4|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x4bb: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x4; x = pop() <- 0x1; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4bb:0x4c1] = 0x4f|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x1|0xf9|0xa6|0xfe|0x2d

0x4bc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4bc:0x4c2] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0xf9|0xa6|0xfe|0x2d|0xf9

0x4be: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4be:0x4c4] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0xf9|0xa6|0xfe|0x2d

0x4bf: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4bf:0x4c5] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xc6|0x10|0xf9|0xa6|0xfe|0x2d

0x4c1: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xc6; push(x + y);
	Opcodes@0x16a4f90[0x4c1:0x4c7] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x2|0xc6|0x10|0xf9|0xa6|0xfe

0x4c2: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4c2:0x4c8] = 0x2f|0x3|0xfe|0xe2|0x2f|0x4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0x10|0xf9|0xa6|0xfe|0x2d

0x4c4: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc8; push(x + y);
	Opcodes@0x16a4f90[0x4c4:0x4ca] = 0xfe|0xe2|0x2f|0x4|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xc8|0x10|0xf9|0xa6|0xfe

0x4c5: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xcb; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4c5:0x4cb] = 0xe2|0x2f|0x4|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xcb|0x10|0xf9|0xa6|0xfe|0x2d

0x4c6: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x4; push(0x4);
	Opcodes@0x16a4f90[0x4c6:0x4cc] = 0x2f|0x4|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0xf9|0xa6|0xfe|0x2d

0x4c8: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x4; x = pop() <- 0x0; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4c8:0x4ce] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x4|0x0|0x10|0xf9|0xa6|0xfe

0x4c9: add(x, y), opcode 0xfe
	y = pop() <- 0x0; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4c9:0x4cf] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x10|0xf9|0xa6|0xfe|0x2d

0x4ca: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4ca:0x4d0] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x10|0xf9|0xa6|0xfe|0x2d|0xf9

0x4cc: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x10; push(x + y);
	Opcodes@0x16a4f90[0x4cc:0x4d2] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x10|0xf9|0xa6|0xfe|0x2d

0x4cd: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x113; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4cd:0x4d3] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x113|0xf9|0xa6|0xfe|0x2d|0xf9

0x4ce: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4ce:0x4d4] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xbf|0xf9|0xa6|0xfe|0x2d|0xf9

0x4d0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d0:0x4d6] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xbf|0xf9|0xa6|0xfe|0x2d

0x4d1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x4d1:0x4d7] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x109|0xbf|0xf9|0xa6|0xfe|0x2d

0x4d3: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x109; push(x + y);
	Opcodes@0x16a4f90[0x4d3:0x4d9] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x109|0xbf|0xf9|0xa6|0xfe

0x4d4: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x30c; x = pop() <- 0xbf; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4d4:0x4da] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x30c|0xbf|0xf9|0xa6|0xfe|0x2d

0x4d5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d5:0x4db] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x4d7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4d7:0x4dd] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x4d8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4d8:0x4de] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x109|0xf9|0xa6|0xfe|0x2d|0xf9

0x4da: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x109; push(x + y);
	Opcodes@0x16a4f90[0x4da:0x4e0] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x109|0xf9|0xa6|0xfe|0x2d

0x4db: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4db:0x4e1] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x10a|0xf9|0xa6|0xfe|0x2d|0xf9

0x4dd: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x10a; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x4dd:0x4e3] = 0x86|0x2f|0x0|0xe2|0x2f|0x2
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x10a|0xf9|0xa6|0xfe|0x2d

0x4de: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4de:0x4e4] = 0x2f|0x0|0xe2|0x2f|0x2|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x4e0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e0:0x4e6] = 0xe2|0x2f|0x2|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x4e1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4e1:0x4e7] = 0x2f|0x2|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xc6|0xf9|0xa6|0xfe|0x2d|0xf9

0x4e3: add(x, y), opcode 0xfe
	y = pop() <- 0x2; x = pop() <- 0xc6; push(x + y);
	Opcodes@0x16a4f90[0x4e3:0x4e9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xc6|0xf9|0xa6|0xfe|0x2d

0x4e4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4e4:0x4ea] = 0x2f|0x3|0xfe|0xe2|0x2f|0xf
	Stack@0x16a0f80[0x303:0x2fd] = 0xc8|0xf9|0xa6|0xfe|0x2d|0xf9

0x4e6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc8; push(x + y);
	Opcodes@0x16a4f90[0x4e6:0x4ec] = 0xfe|0xe2|0x2f|0xf|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xc8|0xf9|0xa6|0xfe|0x2d

0x4e7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xcb; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4e7:0x4ed] = 0xe2|0x2f|0xf|0xd4|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xcb|0xf9|0xa6|0xfe|0x2d|0xf9

0x4e8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0xf; push(0xf);
	Opcodes@0x16a4f90[0x4e8:0x4ee] = 0x2f|0xf|0xd4|0x2f|0x2|0x4f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x4ea: and(x, y), opcode 0xd4
	y = pop() <- 0xf; x = pop() <- 0x0; push(x & y);
	Opcodes@0x16a4f90[0x4ea:0x4f0] = 0xd4|0x2f|0x2|0x4f|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0xf|0x0|0xf9|0xa6|0xfe|0x2d

0x4eb: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x4eb:0x4f1] = 0x2f|0x2|0x4f|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x4ed: shl(x, bit2shift), opcode 0x4f
	bit2shift = pop() <- 0x2; x = pop() <- 0x0; push(x << (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4ed:0x4f3] = 0x4f|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x0|0xf9|0xa6|0xfe|0x2d

0x4ee: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x4ee:0x4f4] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x4f0: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f0:0x4f6] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x0|0xf9|0xa6|0xfe|0x2d

0x4f1: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x4f1:0x4f7] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x304:0x2fe] = 0xc6|0x0|0xf9|0xa6|0xfe|0x2d

0x4f3: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc6; push(x + y);
	Opcodes@0x16a4f90[0x4f3:0x4f9] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x1|0xc6|0x0|0xf9|0xa6|0xfe

0x4f4: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x4f4:0x4fa] = 0x2f|0x3|0xfe|0xe2|0x2f|0x6
	Stack@0x16a0f80[0x304:0x2fe] = 0xc7|0x0|0xf9|0xa6|0xfe|0x2d

0x4f6: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc7; push(x + y);
	Opcodes@0x16a4f90[0x4f6:0x4fc] = 0xfe|0xe2|0x2f|0x6|0x3e|0xfe
	Stack@0x16a0f80[0x305:0x2ff] = 0x3|0xc7|0x0|0xf9|0xa6|0xfe

0x4f7: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xca; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4f7:0x4fd] = 0xe2|0x2f|0x6|0x3e|0xfe|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0xca|0x0|0xf9|0xa6|0xfe|0x2d

0x4f8: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6; push(0x6);
	Opcodes@0x16a4f90[0x4f8:0x4fe] = 0x2f|0x6|0x3e|0xfe|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x61|0x0|0xf9|0xa6|0xfe|0x2d

0x4fa: shr(x, bit2shift), opcode 0x3e
	bit2shift = pop() <- 0x6; x = pop() <- 0x61; push(x >> (uint8_t)bit2shift);
	Opcodes@0x16a4f90[0x4fa:0x500] = 0x3e|0xfe|0x2f|0x103|0xfe|0xe2
	Stack@0x16a0f80[0x305:0x2ff] = 0x6|0x61|0x0|0xf9|0xa6|0xfe

0x4fb: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x0; push(x + y);
	Opcodes@0x16a4f90[0x4fb:0x501] = 0xfe|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x0|0xf9|0xa6|0xfe|0x2d

0x4fc: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x4fc:0x502] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x4fe: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x1; push(x + y);
	Opcodes@0x16a4f90[0x4fe:0x504] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x1|0xf9|0xa6|0xfe|0x2d

0x4ff: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x104; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x4ff:0x505] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x104|0xf9|0xa6|0xfe|0x2d|0xf9

0x500: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x500:0x506] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xdb|0xf9|0xa6|0xfe|0x2d|0xf9

0x502: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x502:0x508] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xdb|0xf9|0xa6|0xfe|0x2d

0x503: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x503:0x509] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x10a|0xdb|0xf9|0xa6|0xfe|0x2d

0x505: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x10a; push(x + y);
	Opcodes@0x16a4f90[0x505:0x50b] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x10a|0xdb|0xf9|0xa6|0xfe

0x506: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x30d; x = pop() <- 0xdb; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x506:0x50c] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x30d|0xdb|0xf9|0xa6|0xfe|0x2d

0x507: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x507:0x50d] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x509: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x509:0x50f] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x50a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50a:0x510] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x10a|0xf9|0xa6|0xfe|0x2d|0xf9

0x50c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x10a; push(x + y);
	Opcodes@0x16a4f90[0x50c:0x512] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x10a|0xf9|0xa6|0xfe|0x2d

0x50d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x50d:0x513] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x10b|0xf9|0xa6|0xfe|0x2d|0xf9

0x50f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x10b; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x50f:0x515] = 0x86|0x2f|0x0|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x10b|0xf9|0xa6|0xfe|0x2d

0x510: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x510:0x516] = 0x2f|0x0|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x512: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x512:0x518] = 0xe2|0x2f|0x1|0xfe|0x2f|0x3
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x513: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x513:0x519] = 0x2f|0x1|0xfe|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xc6|0xf9|0xa6|0xfe|0x2d|0xf9

0x515: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0xc6; push(x + y);
	Opcodes@0x16a4f90[0x515:0x51b] = 0xfe|0x2f|0x3|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xc6|0xf9|0xa6|0xfe|0x2d

0x516: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x516:0x51c] = 0x2f|0x3|0xfe|0xe2|0x2f|0x3f
	Stack@0x16a0f80[0x303:0x2fd] = 0xc7|0xf9|0xa6|0xfe|0x2d|0xf9

0x518: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc7; push(x + y);
	Opcodes@0x16a4f90[0x518:0x51e] = 0xfe|0xe2|0x2f|0x3f|0xd4|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xc7|0xf9|0xa6|0xfe|0x2d

0x519: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0xca; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x519:0x51f] = 0xe2|0x2f|0x3f|0xd4|0x2f|0x103
	Stack@0x16a0f80[0x303:0x2fd] = 0xca|0xf9|0xa6|0xfe|0x2d|0xf9

0x51a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3f; push(0x3f);
	Opcodes@0x16a4f90[0x51a:0x520] = 0x2f|0x3f|0xd4|0x2f|0x103|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0x61|0xf9|0xa6|0xfe|0x2d|0xf9

0x51c: and(x, y), opcode 0xd4
	y = pop() <- 0x3f; x = pop() <- 0x61; push(x & y);
	Opcodes@0x16a4f90[0x51c:0x522] = 0xd4|0x2f|0x103|0xfe|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3f|0x61|0xf9|0xa6|0xfe|0x2d

0x51d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x51d:0x523] = 0x2f|0x103|0xfe|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x21|0xf9|0xa6|0xfe|0x2d|0xf9

0x51f: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x21; push(x + y);
	Opcodes@0x16a4f90[0x51f:0x525] = 0xfe|0xe2|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x21|0xf9|0xa6|0xfe|0x2d

0x520: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x124; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x520:0x526] = 0xe2|0x2f|0x1|0xe2|0x2f|0x203
	Stack@0x16a0f80[0x303:0x2fd] = 0x124|0xf9|0xa6|0xfe|0x2d|0xf9

0x521: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x521:0x527] = 0x2f|0x1|0xe2|0x2f|0x203|0xfe
	Stack@0x16a0f80[0x303:0x2fd] = 0xf9|0xf9|0xa6|0xfe|0x2d|0xf9

0x523: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x523:0x529] = 0xe2|0x2f|0x203|0xfe|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0xf9|0xf9|0xa6|0xfe|0x2d

0x524: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x203; push(0x203);
	Opcodes@0x16a4f90[0x524:0x52a] = 0x2f|0x203|0xfe|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x10b|0xf9|0xf9|0xa6|0xfe|0x2d

0x526: add(x, y), opcode 0xfe
	y = pop() <- 0x203; x = pop() <- 0x10b; push(x + y);
	Opcodes@0x16a4f90[0x526:0x52c] = 0xfe|0x86|0x2f|0x1|0xe2|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x203|0x10b|0xf9|0xf9|0xa6|0xfe

0x527: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x30e; x = pop() <- 0xf9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x527:0x52d] = 0x86|0x2f|0x1|0xe2|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x30e|0xf9|0xf9|0xa6|0xfe|0x2d

0x528: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x528:0x52e] = 0x2f|0x1|0xe2|0x2f|0x1|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x52a: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x52a:0x530] = 0xe2|0x2f|0x1|0xfe|0x2f|0x1
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x52b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52b:0x531] = 0x2f|0x1|0xfe|0x2f|0x1|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x10b|0xf9|0xa6|0xfe|0x2d|0xf9

0x52d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x10b; push(x + y);
	Opcodes@0x16a4f90[0x52d:0x533] = 0xfe|0x2f|0x1|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x10b|0xf9|0xa6|0xfe|0x2d

0x52e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x52e:0x534] = 0x2f|0x1|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x10c|0xf9|0xa6|0xfe|0x2d|0xf9

0x530: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x1; x = pop() <- 0x10c; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x530:0x536] = 0x86|0x2f|0x0|0xe2|0x2f|0x3
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x10c|0xf9|0xa6|0xfe|0x2d

0x531: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x531:0x537] = 0x2f|0x0|0xe2|0x2f|0x3|0xfe
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x533: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x533:0x539] = 0xe2|0x2f|0x3|0xfe|0xd2|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x534: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3; push(0x3);
	Opcodes@0x16a4f90[0x534:0x53a] = 0x2f|0x3|0xfe|0xd2|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0xc6|0xf9|0xa6|0xfe|0x2d|0xf9

0x536: add(x, y), opcode 0xfe
	y = pop() <- 0x3; x = pop() <- 0xc6; push(x + y);
	Opcodes@0x16a4f90[0x536:0x53c] = 0xfe|0xd2|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0xc6|0xf9|0xa6|0xfe|0x2d

0x537: dup(x), opcode 0xd2
	x = pop() <- 0xf9; push(x); push(x);
	Opcodes@0x16a4f90[0x537:0x53d] = 0xd2|0x2f|0x0|0x86|0x2f|0x2
	Stack@0x16a0f80[0x303:0x2fd] = 0xc9|0xf9|0xa6|0xfe|0x2d|0xf9

0x538: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x538:0x53e] = 0x2f|0x0|0x86|0x2f|0x2|0xe2
	Stack@0x16a0f80[0x304:0x2fe] = 0xc9|0xc9|0xf9|0xa6|0xfe|0x2d

0x53a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0xc9; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x53a:0x540] = 0x86|0x2f|0x2|0xe2|0xab|0xed
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0xc9|0xc9|0xf9|0xa6|0xfe

0x53b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x2; push(0x2);
	Opcodes@0x16a4f90[0x53b:0x541] = 0x2f|0x2|0xe2|0xab|0xed|0x497
	Stack@0x16a0f80[0x303:0x2fd] = 0xc9|0xf9|0xa6|0xfe|0x2d|0xf9

0x53d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x2; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x53d:0x543] = 0xe2|0xab|0xed|0x497|0xc1|0x544
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0xc9|0xf9|0xa6|0xfe|0x2d

0x53e: less(x, y), opcode 0xab
	y = pop() <- 0xc8; x = pop() <- 0xc9; push(x < y);
	Opcodes@0x16a4f90[0x53e:0x544] = 0xab|0xed|0x497|0xc1|0x544|0xc4
	Stack@0x16a0f80[0x304:0x2fe] = 0xc8|0xc9|0xf9|0xa6|0xfe|0x2d

0x53f: jnz(x), opcode 0xed
	x = pop() <- 0x0; imm = pOpcodes[vmPc+1] = 0x497; if (x != 0) vmPc = 0x497;
	Opcodes@0x16a4f90[0x53f:0x545] = 0xed|0x497|0xc1|0x544|0xc4|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x541: jmp_imm(), opcode 0xc1
	imm = pOpcodes[vmPc+1] = 0x544; vmPc = 0x544;
	Opcodes@0x16a4f90[0x541:0x547] = 0xc1|0x544|0xc4|0x2f|0x1|0xe2
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x544: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0x544:0x54a] = 0x2f|0x1|0xe2|0x2f|0x3c|0xf6
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x546: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x1; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x546:0x54c] = 0xe2|0x2f|0x3c|0xf6|0x26|0x9f5
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0x547: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x3c; push(0x3c);
	Opcodes@0x16a4f90[0x547:0x54d] = 0x2f|0x3c|0xf6|0x26|0x9f5|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x10c|0xf9|0xa6|0xfe|0x2d|0xf9

0x549: equal(x, y), opcode 0xf6
	y = pop() <- 0x3c; x = pop() <- 0x10c; push(x == y);
	Opcodes@0x16a4f90[0x549:0x54f] = 0xf6|0x26|0x9f5|0x2f|0x0|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x3c|0x10c|0xf9|0xa6|0xfe|0x2d

0x54a: jz(x), opcode 0x26
	x = pop() <- 0x0; if (x == 0) vmPc = pOpcode[vmPc+1];
	Opcodes@0x16a4f90[0x54a:0x550] = 0x26|0x9f5|0x2f|0x0|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

// construct 'Wrong!' at &vmStack[0x103]
0x9f5: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x9f5:0x9fb] = 0x2f|0x0|0x2f|0x0|0x86|0x2f
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x9f7: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x9f7:0x9fd] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x9f9: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x0; vmStack[idx] = x;
	Opcodes@0x16a4f90[0x9f9:0x9ff] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x0|0xf9|0xa6|0xfe|0x2d

0x9fa: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0x9fa:0xa00] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0x9fc: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0x9fc:0xa02] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x9fd: dup(x), opcode 0xd2
	x = pop() <- 0xf9; push(x); push(x);
	Opcodes@0x16a4f90[0x9fd:0xa03] = 0xd2|0x2f|0x103|0xfe|0x2f|0x57
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0x9fe: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0x9fe:0xa04] = 0x2f|0x103|0xfe|0x2f|0x57|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x0|0xf9|0xa6|0xfe|0x2d

0xa00: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x0; push(x + y);
	Opcodes@0x16a4f90[0xa00:0xa06] = 0xfe|0x2f|0x57|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x0|0x0|0xf9|0xa6|0xfe

0xa01: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x57; push(0x57);
	Opcodes@0x16a4f90[0xa01:0xa07] = 0x2f|0x57|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x103|0x0|0xf9|0xa6|0xfe|0x2d

0xa03: swap(x, y), opcode 0xf8
	y = pop() <- 0x57; x = pop() <- 0x103; push(y); push(x);
	Opcodes@0x16a4f90[0xa03:0xa09] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x57|0x103|0x0|0xf9|0xa6|0xfe

0xa04: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x103; x = pop() <- 0x57; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xa04:0xa0a] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x57|0x0|0xf9|0xa6|0xfe

0xa05: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0xa05:0xa0b] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0xa07: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x0; push(x + y);
	Opcodes@0x16a4f90[0xa07:0xa0d] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x0|0xf9|0xa6|0xfe|0x2d

0xa08: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xa08:0xa0e] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0xa0a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x1; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xa0a:0xa10] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x1|0xf9|0xa6|0xfe|0x2d

0xa0b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xa0b:0xa11] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0xa0d: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0xa0d:0xa13] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0xa0e: dup(x), opcode 0xd2
	x = pop() <- 0xf9; push(x); push(x);
	Opcodes@0x16a4f90[0xa0e:0xa14] = 0xd2|0x2f|0x103|0xfe|0x2f|0x72
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0xa0f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0xa0f:0xa15] = 0x2f|0x103|0xfe|0x2f|0x72|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1|0xf9|0xa6|0xfe|0x2d

0xa11: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x1; push(x + y);
	Opcodes@0x16a4f90[0xa11:0xa17] = 0xfe|0x2f|0x72|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x1|0x1|0xf9|0xa6|0xfe

0xa12: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x72; push(0x72);
	Opcodes@0x16a4f90[0xa12:0xa18] = 0x2f|0x72|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x104|0x1|0xf9|0xa6|0xfe|0x2d

0xa14: swap(x, y), opcode 0xf8
	y = pop() <- 0x72; x = pop() <- 0x104; push(y); push(x);
	Opcodes@0x16a4f90[0xa14:0xa1a] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x72|0x104|0x1|0xf9|0xa6|0xfe

0xa15: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x104; x = pop() <- 0x72; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xa15:0xa1b] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x104|0x72|0x1|0xf9|0xa6|0xfe

0xa16: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0xa16:0xa1c] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x1|0xf9|0xa6|0xfe|0x2d|0xf9

0xa18: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x1; push(x + y);
	Opcodes@0x16a4f90[0xa18:0xa1e] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x1|0xf9|0xa6|0xfe|0x2d

0xa19: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xa19:0xa1f] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x2|0xf9|0xa6|0xfe|0x2d|0xf9

0xa1b: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x2; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xa1b:0xa21] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x2|0xf9|0xa6|0xfe|0x2d

0xa1c: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xa1c:0xa22] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0xa1e: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0xa1e:0xa24] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0xa1f: dup(x), opcode 0xd2
	x = pop() <- 0xf9; push(x); push(x);
	Opcodes@0x16a4f90[0xa1f:0xa25] = 0xd2|0x2f|0x103|0xfe|0x2f|0x6f
	Stack@0x16a0f80[0x303:0x2fd] = 0x2|0xf9|0xa6|0xfe|0x2d|0xf9

0xa20: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0xa20:0xa26] = 0x2f|0x103|0xfe|0x2f|0x6f|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x2|0x2|0xf9|0xa6|0xfe|0x2d

0xa22: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x2; push(x + y);
	Opcodes@0x16a4f90[0xa22:0xa28] = 0xfe|0x2f|0x6f|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x2|0x2|0xf9|0xa6|0xfe

0xa23: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6f; push(0x6f);
	Opcodes@0x16a4f90[0xa23:0xa29] = 0x2f|0x6f|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x105|0x2|0xf9|0xa6|0xfe|0x2d

0xa25: swap(x, y), opcode 0xf8
	y = pop() <- 0x6f; x = pop() <- 0x105; push(y); push(x);
	Opcodes@0x16a4f90[0xa25:0xa2b] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x6f|0x105|0x2|0xf9|0xa6|0xfe

0xa26: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x105; x = pop() <- 0x6f; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xa26:0xa2c] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x105|0x6f|0x2|0xf9|0xa6|0xfe

0xa27: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0xa27:0xa2d] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x2|0xf9|0xa6|0xfe|0x2d|0xf9

0xa29: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x2; push(x + y);
	Opcodes@0x16a4f90[0xa29:0xa2f] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x2|0xf9|0xa6|0xfe|0x2d

0xa2a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xa2a:0xa30] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0xf9|0xa6|0xfe|0x2d|0xf9

0xa2c: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x3; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xa2c:0xa32] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x3|0xf9|0xa6|0xfe|0x2d

0xa2d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xa2d:0xa33] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0xa2f: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0xa2f:0xa35] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0xa30: dup(x), opcode 0xd2
	x = pop() <- 0xf9; push(x); push(x);
	Opcodes@0x16a4f90[0xa30:0xa36] = 0xd2|0x2f|0x103|0xfe|0x2f|0x6e
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0xf9|0xa6|0xfe|0x2d|0xf9

0xa31: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0xa31:0xa37] = 0x2f|0x103|0xfe|0x2f|0x6e|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x3|0x3|0xf9|0xa6|0xfe|0x2d

0xa33: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x3; push(x + y);
	Opcodes@0x16a4f90[0xa33:0xa39] = 0xfe|0x2f|0x6e|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x3|0x3|0xf9|0xa6|0xfe

0xa34: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x6e; push(0x6e);
	Opcodes@0x16a4f90[0xa34:0xa3a] = 0x2f|0x6e|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x106|0x3|0xf9|0xa6|0xfe|0x2d

0xa36: swap(x, y), opcode 0xf8
	y = pop() <- 0x6e; x = pop() <- 0x106; push(y); push(x);
	Opcodes@0x16a4f90[0xa36:0xa3c] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x6e|0x106|0x3|0xf9|0xa6|0xfe

0xa37: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x106; x = pop() <- 0x6e; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xa37:0xa3d] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x106|0x6e|0x3|0xf9|0xa6|0xfe

0xa38: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0xa38:0xa3e] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x3|0xf9|0xa6|0xfe|0x2d|0xf9

0xa3a: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x3; push(x + y);
	Opcodes@0x16a4f90[0xa3a:0xa40] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x3|0xf9|0xa6|0xfe|0x2d

0xa3b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xa3b:0xa41] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0xf9|0xa6|0xfe|0x2d|0xf9

0xa3d: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x4; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xa3d:0xa43] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x4|0xf9|0xa6|0xfe|0x2d

0xa3e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xa3e:0xa44] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0xa40: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0xa40:0xa46] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0xa41: dup(x), opcode 0xd2
	x = pop() <- 0xf9; push(x); push(x);
	Opcodes@0x16a4f90[0xa41:0xa47] = 0xd2|0x2f|0x103|0xfe|0x2f|0x67
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0xf9|0xa6|0xfe|0x2d|0xf9

0xa42: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0xa42:0xa48] = 0x2f|0x103|0xfe|0x2f|0x67|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x4|0x4|0xf9|0xa6|0xfe|0x2d

0xa44: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0xa44:0xa4a] = 0xfe|0x2f|0x67|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x4|0x4|0xf9|0xa6|0xfe

0xa45: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x67; push(0x67);
	Opcodes@0x16a4f90[0xa45:0xa4b] = 0x2f|0x67|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x107|0x4|0xf9|0xa6|0xfe|0x2d

0xa47: swap(x, y), opcode 0xf8
	y = pop() <- 0x67; x = pop() <- 0x107; push(y); push(x);
	Opcodes@0x16a4f90[0xa47:0xa4d] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x67|0x107|0x4|0xf9|0xa6|0xfe

0xa48: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x107; x = pop() <- 0x67; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xa48:0xa4e] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x107|0x67|0x4|0xf9|0xa6|0xfe

0xa49: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0xa49:0xa4f] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x4|0xf9|0xa6|0xfe|0x2d|0xf9

0xa4b: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x4; push(x + y);
	Opcodes@0x16a4f90[0xa4b:0xa51] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x4|0xf9|0xa6|0xfe|0x2d

0xa4c: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xa4c:0xa52] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0xf9|0xa6|0xfe|0x2d|0xf9

0xa4e: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x5; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xa4e:0xa54] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x5|0xf9|0xa6|0xfe|0x2d

0xa4f: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xa4f:0xa55] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0xa51: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0xa51:0xa57] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0xa52: dup(x), opcode 0xd2
	x = pop() <- 0xf9; push(x); push(x);
	Opcodes@0x16a4f90[0xa52:0xa58] = 0xd2|0x2f|0x103|0xfe|0x2f|0x21
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0xf9|0xa6|0xfe|0x2d|0xf9

0xa53: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0xa53:0xa59] = 0x2f|0x103|0xfe|0x2f|0x21|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x5|0x5|0xf9|0xa6|0xfe|0x2d

0xa55: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0xa55:0xa5b] = 0xfe|0x2f|0x21|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x5|0x5|0xf9|0xa6|0xfe

0xa56: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x21; push(0x21);
	Opcodes@0x16a4f90[0xa56:0xa5c] = 0x2f|0x21|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x108|0x5|0xf9|0xa6|0xfe|0x2d

0xa58: swap(x, y), opcode 0xf8
	y = pop() <- 0x21; x = pop() <- 0x108; push(y); push(x);
	Opcodes@0x16a4f90[0xa58:0xa5e] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x21|0x108|0x5|0xf9|0xa6|0xfe

0xa59: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x108; x = pop() <- 0x21; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xa59:0xa5f] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x108|0x21|0x5|0xf9|0xa6|0xfe

0xa5a: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0xa5a:0xa60] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x5|0xf9|0xa6|0xfe|0x2d|0xf9

0xa5c: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x5; push(x + y);
	Opcodes@0x16a4f90[0xa5c:0xa62] = 0xfe|0x2f|0x0|0x86|0x2f|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x5|0xf9|0xa6|0xfe|0x2d

0xa5d: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xa5d:0xa63] = 0x2f|0x0|0x86|0x2f|0x0|0xe2
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0xf9|0xa6|0xfe|0x2d|0xf9

0xa5f: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x6; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xa5f:0xa65] = 0x86|0x2f|0x0|0xe2|0xd2|0x2f
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x6|0xf9|0xa6|0xfe|0x2d

0xa60: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xa60:0xa66] = 0x2f|0x0|0xe2|0xd2|0x2f|0x103
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0xa62: push_from_idx(idx), opcode 0xe2
	idx = pop() <- 0x0; pop(); push(vmStack[idx]);
	Opcodes@0x16a4f90[0xa62:0xa68] = 0xe2|0xd2|0x2f|0x103|0xfe|0x2f
	Stack@0x16a0f80[0x303:0x2fd] = 0x0|0xf9|0xa6|0xfe|0x2d|0xf9

0xa63: dup(x), opcode 0xd2
	x = pop() <- 0xf9; push(x); push(x);
	Opcodes@0x16a4f90[0xa63:0xa69] = 0xd2|0x2f|0x103|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0xf9|0xa6|0xfe|0x2d|0xf9

0xa64: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0xa64:0xa6a] = 0x2f|0x103|0xfe|0x2f|0x0|0xf8
	Stack@0x16a0f80[0x304:0x2fe] = 0x6|0x6|0xf9|0xa6|0xfe|0x2d

0xa66: add(x, y), opcode 0xfe
	y = pop() <- 0x103; x = pop() <- 0x6; push(x + y);
	Opcodes@0x16a4f90[0xa66:0xa6c] = 0xfe|0x2f|0x0|0xf8|0x86|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x103|0x6|0x6|0xf9|0xa6|0xfe

0xa67: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xa67:0xa6d] = 0x2f|0x0|0xf8|0x86|0x2f|0x1
	Stack@0x16a0f80[0x304:0x2fe] = 0x109|0x6|0xf9|0xa6|0xfe|0x2d

0xa69: swap(x, y), opcode 0xf8
	y = pop() <- 0x0; x = pop() <- 0x109; push(y); push(x);
	Opcodes@0x16a4f90[0xa69:0xa6f] = 0xf8|0x86|0x2f|0x1|0xfe|0x2f
	Stack@0x16a0f80[0x305:0x2ff] = 0x0|0x109|0x6|0xf9|0xa6|0xfe

0xa6a: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x109; x = pop() <- 0x0; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xa6a:0xa70] = 0x86|0x2f|0x1|0xfe|0x2f|0x0
	Stack@0x16a0f80[0x305:0x2ff] = 0x109|0x0|0x6|0xf9|0xa6|0xfe

0xa6b: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x1; push(0x1);
	Opcodes@0x16a4f90[0xa6b:0xa71] = 0x2f|0x1|0xfe|0x2f|0x0|0x86
	Stack@0x16a0f80[0x303:0x2fd] = 0x6|0xf9|0xa6|0xfe|0x2d|0xf9

0xa6d: add(x, y), opcode 0xfe
	y = pop() <- 0x1; x = pop() <- 0x6; push(x + y);
	Opcodes@0x16a4f90[0xa6d:0xa73] = 0xfe|0x2f|0x0|0x86|0x2f|0x103
	Stack@0x16a0f80[0x304:0x2fe] = 0x1|0x6|0xf9|0xa6|0xfe|0x2d

0xa6e: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x0; push(0x0);
	Opcodes@0x16a4f90[0xa6e:0xa74] = 0x2f|0x0|0x86|0x2f|0x103|0xb1
	Stack@0x16a0f80[0x303:0x2fd] = 0x7|0xf9|0xa6|0xfe|0x2d|0xf9

0xa70: push_to_idx(x, idx), opcode 0x86
	idx = pop() <- 0x0; x = pop() <- 0x7; vmStack[idx] = x;
	Opcodes@0x16a4f90[0xa70:0xa76] = 0x86|0x2f|0x103|0xb1|0xc4|0x0
	Stack@0x16a0f80[0x304:0x2fe] = 0x0|0x7|0xf9|0xa6|0xfe|0x2d

0xa71: push_imm(), opcode 0x2f
	imm = pOpcodes[vmPc+1] = 0x103; push(0x103);
	Opcodes@0x16a4f90[0xa71:0xa77] = 0x2f|0x103|0xb1|0xc4|0x0|0x1a6a1
	Stack@0x16a0f80[0x302:0x2fc] = 0xf9|0xa6|0xfe|0x2d|0xf9|0xa6

0xa73: puts(start_off), opcode 0xb1
	start_off = pop() <- 0x103; puts(&vmStack[start_off]);
	Opcodes@0x16a4f90[0xa73:0xa79] = 0xb1|0xc4|0x0|0x1a6a1|0x0|0x0
	Stack@0x16a0f80[0x303:0x2fd] = 0x103|0xf9|0xa6|0xfe|0x2d|0xf9
