0x0000: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0006: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x000c: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0010: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0015: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0019: jmp_imm:
	pc += 0x1, opcode= 0x08
0x001e: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0021: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0025: jmp_imm:
	pc += 0x1, opcode= 0x08
0x002a: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x002e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0033: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0036: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0039: mov_imm:
	regs[5] = 0xeff05a76, opcode= 0x05
0x0040: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0045: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0048: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x004b: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x004e: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0051: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0054: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0058: jmp_imm:
	pc += 0x1, opcode= 0x08
0x005d: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0061: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0066: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0069: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x006c: mov_imm:
	regs[5] = 0x8cf545e8, opcode= 0x05
0x0072: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0075: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0078: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x007e: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0084: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0087: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x008a: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x008d: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0091: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0096: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0099: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x009d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x00a2: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x00a5: mov_imm:
	regs[5] = 0x55d05d4d, opcode= 0x05
0x00ab: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x00ae: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x00b1: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x00b4: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x00b7: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x00ba: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x00bd: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x00c0: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x00c3: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x00c7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x00cc: mov_imm:
	regs[5] = 0x3296b3f4, opcode= 0x05
0x00d2: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x00d5: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x00d8: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x00de: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x00e4: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x00e8: jmp_imm:
	pc += 0x1, opcode= 0x08
0x00ed: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x00f0: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x00f4: jmp_imm:
	pc += 0x1, opcode= 0x08
0x00f9: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x00fc: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0100: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0105: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0108: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x010b: mov_imm:
	regs[5] = 0x3542a729, opcode= 0x05
0x0111: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0114: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0117: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x011b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0120: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0123: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0126: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0129: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x012c: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x012f: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0133: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0138: mov_imm:
	regs[5] = 0x3c5a0896, opcode= 0x05
0x013f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0144: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0147: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x014a: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0150: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0156: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0159: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x015c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x015f: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0162: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0166: jmp_imm:
	pc += 0x1, opcode= 0x08
0x016b: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x016f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0174: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0177: mov_imm:
	regs[5] = 0x26890a91, opcode= 0x05
0x017e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0183: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0186: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0189: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x018c: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x018f: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0192: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0195: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0198: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x019c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x01a1: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x01a4: mov_imm:
	regs[5] = 0xb2bc294b, opcode= 0x05
0x01aa: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x01ae: jmp_imm:
	pc += 0x1, opcode= 0x08
0x01b3: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x01b6: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x01bc: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x01c3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x01c8: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x01cb: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x01ce: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x01d2: jmp_imm:
	pc += 0x1, opcode= 0x08
0x01d7: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x01db: jmp_imm:
	pc += 0x1, opcode= 0x08
0x01e0: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x01e4: jmp_imm:
	pc += 0x1, opcode= 0x08
0x01e9: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x01ec: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x01ef: mov_imm:
	regs[5] = 0x572437c, opcode= 0x05
0x01f5: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x01f8: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x01fb: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x01fe: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0201: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0204: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0208: jmp_imm:
	pc += 0x1, opcode= 0x08
0x020d: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0211: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0216: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0219: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x021c: mov_imm:
	regs[5] = 0x16cb582d, opcode= 0x05
0x0222: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0225: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0228: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x022f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0234: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x023a: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x023d: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0240: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0243: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0247: jmp_imm:
	pc += 0x1, opcode= 0x08
0x024c: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x024f: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0252: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0255: mov_imm:
	regs[5] = 0x41c055a6, opcode= 0x05
0x025b: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x025e: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0261: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0264: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0267: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x026b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0270: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0273: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0276: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0279: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x027c: mov_imm:
	regs[5] = 0x4ac39b3c, opcode= 0x05
0x0282: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0285: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0288: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x028f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0294: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x029b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x02a0: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x02a3: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x02a6: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x02aa: jmp_imm:
	pc += 0x1, opcode= 0x08
0x02af: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x02b2: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x02b5: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x02b8: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x02bb: mov_imm:
	regs[5] = 0xd0569db9, opcode= 0x05
0x02c1: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x02c4: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x02c7: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x02ca: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x02ce: jmp_imm:
	pc += 0x1, opcode= 0x08
0x02d3: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x02d6: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x02d9: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x02dc: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x02df: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x02e2: mov_imm:
	regs[5] = 0x1775f50d, opcode= 0x05
0x02e8: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x02eb: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x02ee: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x02f4: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x02fa: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x02fd: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0300: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0304: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0309: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x030c: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x030f: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0313: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0318: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x031b: mov_imm:
	regs[5] = 0x9489cd9, opcode= 0x05
0x0321: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0324: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0328: jmp_imm:
	pc += 0x1, opcode= 0x08
0x032d: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0330: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0333: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0337: jmp_imm:
	pc += 0x1, opcode= 0x08
0x033c: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x033f: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0343: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0348: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x034b: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x034e: mov_imm:
	regs[5] = 0x8a9d4e71, opcode= 0x05
0x0355: jmp_imm:
	pc += 0x1, opcode= 0x08
0x035a: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x035d: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0360: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0366: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x036c: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x036f: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0372: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0376: jmp_imm:
	pc += 0x1, opcode= 0x08
0x037b: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x037e: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0381: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0385: jmp_imm:
	pc += 0x1, opcode= 0x08
0x038a: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x038d: mov_imm:
	regs[5] = 0x344ae480, opcode= 0x05
0x0393: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0396: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0399: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x039c: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x039f: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x03a3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x03a8: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x03ac: jmp_imm:
	pc += 0x1, opcode= 0x08
0x03b1: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x03b4: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x03b7: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x03bb: jmp_imm:
	pc += 0x1, opcode= 0x08
0x03c0: mov_imm:
	regs[5] = 0x6259596e, opcode= 0x05
0x03c6: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x03ca: jmp_imm:
	pc += 0x1, opcode= 0x08
0x03cf: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x03d3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x03d8: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x03de: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x03e4: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x03e7: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x03ea: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x03ed: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x03f0: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x03f4: jmp_imm:
	pc += 0x1, opcode= 0x08
0x03f9: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x03fc: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x03ff: mov_imm:
	regs[5] = 0x2a96e75a, opcode= 0x05
0x0405: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0408: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x040b: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x040e: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0412: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0417: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x041a: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x041d: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0421: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0426: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0429: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x042d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0432: mov_imm:
	regs[5] = 0xaa3e047, opcode= 0x05
0x0438: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x043b: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x043e: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0444: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x044b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0450: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0453: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0456: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0459: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x045c: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0460: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0465: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0468: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x046b: mov_imm:
	regs[5] = 0xfd045752, opcode= 0x05
0x0472: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0477: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x047a: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x047d: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0480: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0483: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0486: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0489: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x048c: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x048f: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0492: mov_imm:
	regs[5] = 0x9b80ce49, opcode= 0x05
0x0498: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x049b: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x049e: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x04a5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x04aa: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x04b0: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x04b4: jmp_imm:
	pc += 0x1, opcode= 0x08
0x04b9: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x04bc: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x04c0: jmp_imm:
	pc += 0x1, opcode= 0x08
0x04c5: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x04c8: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x04cc: jmp_imm:
	pc += 0x1, opcode= 0x08
0x04d1: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x04d4: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x04d7: mov_imm:
	regs[5] = 0xd490306, opcode= 0x05
0x04dd: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x04e0: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x04e3: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x04e6: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x04e9: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x04ec: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x04ef: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x04f2: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x04f5: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x04f9: jmp_imm:
	pc += 0x1, opcode= 0x08
0x04fe: mov_imm:
	regs[5] = 0xf4b8552b, opcode= 0x05
0x0504: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0508: jmp_imm:
	pc += 0x1, opcode= 0x08
0x050d: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0510: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0516: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x051c: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x051f: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0523: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0528: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x052b: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x052e: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0532: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0537: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x053a: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x053d: mov_imm:
	regs[5] = 0xe6573b5b, opcode= 0x05
0x0543: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0546: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x054a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x054f: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0553: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0558: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x055b: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x055e: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0561: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0565: jmp_imm:
	pc += 0x1, opcode= 0x08
0x056a: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x056d: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0570: mov_imm:
	regs[5] = 0xd58be91c, opcode= 0x05
0x0577: jmp_imm:
	pc += 0x1, opcode= 0x08
0x057c: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x057f: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0582: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0588: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x058f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0594: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0597: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x059a: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x059d: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x05a1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x05a6: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x05a9: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x05ac: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x05b0: jmp_imm:
	pc += 0x1, opcode= 0x08
0x05b5: mov_imm:
	regs[5] = 0xbd1f28c9, opcode= 0x05
0x05bb: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x05be: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x05c2: jmp_imm:
	pc += 0x1, opcode= 0x08
0x05c7: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x05ca: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x05cd: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x05d0: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x05d3: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x05d6: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x05d9: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x05dd: jmp_imm:
	pc += 0x1, opcode= 0x08
0x05e2: mov_imm:
	regs[5] = 0x7b85163f, opcode= 0x05
0x05e8: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x05eb: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x05ee: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x05f4: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x05fb: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0600: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0603: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0606: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0609: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x060c: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x060f: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0612: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0615: mov_imm:
	regs[5] = 0xcb2bb4ff, opcode= 0x05
0x061b: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x061e: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0621: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0624: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0627: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x062a: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x062d: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0630: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0634: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0639: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x063d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0642: mov_imm:
	regs[5] = 0x8e6ef55b, opcode= 0x05
0x0648: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x064b: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x064f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0654: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x065a: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0660: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0664: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0669: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x066c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x066f: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0672: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0675: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0678: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x067b: mov_imm:
	regs[5] = 0xa194fd02, opcode= 0x05
0x0681: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0684: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0688: jmp_imm:
	pc += 0x1, opcode= 0x08
0x068d: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0690: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0694: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0699: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x069c: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x069f: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x06a3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x06a8: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x06ac: jmp_imm:
	pc += 0x1, opcode= 0x08
0x06b1: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x06b4: mov_imm:
	regs[5] = 0x337a3bad, opcode= 0x05
0x06ba: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x06bd: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x06c0: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x06c7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x06cc: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x06d3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x06d8: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x06dc: jmp_imm:
	pc += 0x1, opcode= 0x08
0x06e1: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x06e4: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x06e7: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x06ea: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x06ee: jmp_imm:
	pc += 0x1, opcode= 0x08
0x06f3: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x06f6: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x06f9: mov_imm:
	regs[5] = 0xe5f29d83, opcode= 0x05
0x0700: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0705: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0708: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x070b: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x070e: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0712: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0717: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x071a: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x071d: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0720: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0723: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0726: mov_imm:
	regs[5] = 0x169fe37a, opcode= 0x05
0x072c: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0730: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0735: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0738: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x073f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0744: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x074a: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x074d: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0750: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0754: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0759: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x075c: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0760: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0765: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0768: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x076b: mov_imm:
	regs[5] = 0x3207ec51, opcode= 0x05
0x0771: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0774: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0777: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x077a: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x077e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0783: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0786: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0789: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x078c: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x078f: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0792: mov_imm:
	regs[5] = 0x17259ca2, opcode= 0x05
0x0798: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x079c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x07a1: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x07a4: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x07aa: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x07b0: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x07b4: jmp_imm:
	pc += 0x1, opcode= 0x08
0x07b9: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x07bd: jmp_imm:
	pc += 0x1, opcode= 0x08
0x07c2: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x07c5: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x07c8: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x07cb: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x07ce: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x07d2: jmp_imm:
	pc += 0x1, opcode= 0x08
0x07d7: mov_imm:
	regs[5] = 0x32ee784e, opcode= 0x05
0x07dd: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x07e0: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x07e3: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x07e6: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x07e9: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x07ec: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x07ef: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x07f2: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x07f5: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x07f8: mov_imm:
	regs[5] = 0x87d96f3b, opcode= 0x05
0x07fe: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0802: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0807: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x080a: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0811: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0816: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x081d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0822: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0825: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0828: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x082b: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x082e: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0831: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0834: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0837: mov_imm:
	regs[5] = 0x4cb5a95c, opcode= 0x05
0x083d: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0841: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0846: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0849: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x084d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0852: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0856: jmp_imm:
	pc += 0x1, opcode= 0x08
0x085b: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x085f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0864: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0868: jmp_imm:
	pc += 0x1, opcode= 0x08
0x086d: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0871: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0876: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0879: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x087c: mov_imm:
	regs[5] = 0xac327183, opcode= 0x05
0x0882: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0885: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0889: jmp_imm:
	pc += 0x1, opcode= 0x08
0x088e: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0894: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x089a: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x089d: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x08a0: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x08a4: jmp_imm:
	pc += 0x1, opcode= 0x08
0x08a9: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x08ac: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x08af: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x08b2: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x08b5: mov_imm:
	regs[5] = 0x2d06a54a, opcode= 0x05
0x08bb: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x08be: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x08c1: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x08c4: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x08c7: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x08ca: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x08cd: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x08d1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x08d6: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x08da: jmp_imm:
	pc += 0x1, opcode= 0x08
0x08df: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x08e2: mov_imm:
	regs[5] = 0xe0d2c332, opcode= 0x05
0x08e8: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x08eb: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x08ee: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x08f4: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x08fa: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x08fd: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0901: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0906: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0909: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x090c: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x090f: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0912: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0915: mov_imm:
	regs[5] = 0xdeb8c1fe, opcode= 0x05
0x091b: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x091e: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0922: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0927: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x092a: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x092d: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0931: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0936: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0939: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x093c: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x093f: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0942: mov_imm:
	regs[5] = 0xcc19775d, opcode= 0x05
0x0949: jmp_imm:
	pc += 0x1, opcode= 0x08
0x094e: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0951: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0954: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x095a: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0960: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0964: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0969: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x096c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x096f: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0972: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0975: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0978: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x097b: mov_imm:
	regs[5] = 0xdecfb58e, opcode= 0x05
0x0982: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0987: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x098a: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x098d: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0991: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0996: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x099a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x099f: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x09a3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x09a8: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x09ab: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x09ae: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x09b1: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x09b5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x09ba: mov_imm:
	regs[5] = 0x56320ce7, opcode= 0x05
0x09c0: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x09c3: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x09c6: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x09cc: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x09d3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x09d8: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x09db: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x09df: jmp_imm:
	pc += 0x1, opcode= 0x08
0x09e4: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x09e8: jmp_imm:
	pc += 0x1, opcode= 0x08
0x09ed: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x09f0: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x09f3: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x09f6: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x09fa: jmp_imm:
	pc += 0x1, opcode= 0x08
0x09ff: mov_imm:
	regs[5] = 0x68df1e8b, opcode= 0x05
0x0a06: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0a0b: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0a0e: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0a11: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0a14: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0a18: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0a1d: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0a20: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0a23: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0a27: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0a2c: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0a30: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0a35: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0a38: mov_imm:
	regs[5] = 0xe0edc845, opcode= 0x05
0x0a3f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0a44: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0a47: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0a4a: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0a50: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0a56: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0a59: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0a5c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0a5f: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0a62: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0a65: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0a68: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0a6b: mov_imm:
	regs[5] = 0x35c51217, opcode= 0x05
0x0a71: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0a75: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0a7a: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0a7d: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0a80: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0a83: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0a86: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0a89: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0a8d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0a92: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0a96: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0a9b: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0a9e: mov_imm:
	regs[5] = 0xd87c4a4, opcode= 0x05
0x0aa4: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0aa7: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0aaa: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0ab0: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0ab6: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0aba: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0abf: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0ac3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0ac8: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0acb: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0ace: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0ad2: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0ad7: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0ada: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0add: mov_imm:
	regs[5] = 0x928d47cc, opcode= 0x05
0x0ae3: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0ae6: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0ae9: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0aec: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0aef: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0af3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0af8: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0afb: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0afe: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0b01: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0b04: mov_imm:
	regs[5] = 0xd1ea0bbf, opcode= 0x05
0x0b0a: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0b0d: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0b10: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0b17: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0b1c: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0b22: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0b25: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0b28: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0b2b: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0b2f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0b34: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0b38: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0b3d: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0b40: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0b43: mov_imm:
	regs[5] = 0x576c0cc3, opcode= 0x05
0x0b4a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0b4f: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0b52: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0b55: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0b58: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0b5b: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0b5e: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0b62: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0b67: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0b6b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0b70: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0b73: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0b76: mov_imm:
	regs[5] = 0xbb792475, opcode= 0x05
0x0b7c: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0b80: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0b85: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0b88: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0b8f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0b94: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0b9a: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0b9d: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0ba0: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0ba3: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0ba6: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0baa: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0baf: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0bb2: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0bb5: mov_imm:
	regs[5] = 0x95e81a20, opcode= 0x05
0x0bbb: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0bbe: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0bc1: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0bc4: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0bc7: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0bca: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0bcd: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0bd0: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0bd3: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0bd7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0bdc: mov_imm:
	regs[5] = 0xf0461e1, opcode= 0x05
0x0be2: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0be5: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0be8: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0bef: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0bf4: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0bfb: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0c00: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0c03: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0c06: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0c0a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0c0f: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0c12: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0c15: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0c19: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0c1e: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0c21: mov_imm:
	regs[5] = 0x7cabf382, opcode= 0x05
0x0c27: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0c2b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0c30: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0c33: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0c36: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0c3a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0c3f: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0c42: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0c45: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0c48: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0c4b: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0c4e: mov_imm:
	regs[5] = 0x8d7c1e4e, opcode= 0x05
0x0c54: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0c57: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0c5a: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0c61: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0c66: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0c6c: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0c6f: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0c73: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0c78: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0c7b: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0c7e: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0c81: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0c85: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0c8a: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0c8d: mov_imm:
	regs[5] = 0x4a6b481a, opcode= 0x05
0x0c93: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0c96: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0c99: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0c9c: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0c9f: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0ca2: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0ca6: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0cab: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0cae: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0cb1: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0cb5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0cba: mov_imm:
	regs[5] = 0xb80dff1b, opcode= 0x05
0x0cc0: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0cc4: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0cc9: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0ccc: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0cd2: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0cd8: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0cdb: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0cde: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0ce1: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0ce5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0cea: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0ced: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0cf0: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0cf3: mov_imm:
	regs[5] = 0x2f346ea5, opcode= 0x05
0x0cf9: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0cfc: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0d00: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0d05: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0d08: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0d0b: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0d0e: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0d11: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0d14: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0d17: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0d1b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0d20: mov_imm:
	regs[5] = 0x140f348d, opcode= 0x05
0x0d27: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0d2c: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0d2f: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0d32: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0d39: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0d3e: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0d45: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0d4a: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0d4d: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0d50: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0d53: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0d56: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0d59: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0d5c: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0d5f: mov_imm:
	regs[5] = 0xd9b4708a, opcode= 0x05
0x0d65: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0d68: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0d6b: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0d6f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0d74: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0d77: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0d7a: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0d7d: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0d80: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0d83: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0d86: mov_imm:
	regs[5] = 0x6d20c7db, opcode= 0x05
0x0d8d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0d92: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0d95: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0d99: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0d9e: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0da5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0daa: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0db1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0db6: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0db9: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0dbc: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0dbf: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0dc2: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0dc6: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0dcb: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0dce: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0dd1: mov_imm:
	regs[5] = 0xa6c32b5b, opcode= 0x05
0x0dd7: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0ddb: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0de0: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0de3: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0de7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0dec: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0def: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0df2: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0df5: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0df8: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0dfb: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0dff: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0e04: mov_imm:
	regs[5] = 0x6958a67b, opcode= 0x05
0x0e0a: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0e0d: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0e11: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0e16: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0e1d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0e22: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0e28: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0e2b: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0e2e: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0e32: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0e37: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0e3a: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0e3d: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0e40: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0e44: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0e49: mov_imm:
	regs[5] = 0x85cae353, opcode= 0x05
0x0e50: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0e55: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0e58: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0e5c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0e61: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0e64: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0e67: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0e6a: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0e6d: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0e70: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0e73: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0e76: mov_imm:
	regs[5] = 0xc26ccf1a, opcode= 0x05
0x0e7c: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0e80: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0e85: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0e88: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0e8f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0e94: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0e9a: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0e9d: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0ea0: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0ea3: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0ea6: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0eaa: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0eaf: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0eb2: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0eb5: mov_imm:
	regs[5] = 0xde43b2ae, opcode= 0x05
0x0ebb: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0ebe: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0ec1: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0ec5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0eca: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0ece: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0ed3: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0ed6: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0ed9: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0edc: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0ee0: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0ee5: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0ee8: mov_imm:
	regs[5] = 0xd0834ebb, opcode= 0x05
0x0eef: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0ef4: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0ef7: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0efa: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0f00: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0f06: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0f09: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0f0c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0f0f: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0f12: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0f15: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0f19: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0f1e: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0f21: mov_imm:
	regs[5] = 0x8989f75a, opcode= 0x05
0x0f27: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0f2a: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0f2d: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0f30: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0f33: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0f37: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0f3c: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0f3f: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0f42: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0f46: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0f4b: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0f4f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0f54: mov_imm:
	regs[5] = 0xb122543f, opcode= 0x05
0x0f5a: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0f5d: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0f60: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0f66: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0f6c: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0f6f: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0f72: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0f75: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0f79: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0f7e: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0f81: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0f85: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0f8a: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x0f8d: mov_imm:
	regs[5] = 0xfc2667f0, opcode= 0x05
0x0f93: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0f96: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x0f99: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x0f9c: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x0f9f: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0fa2: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0fa5: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0fa9: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0fae: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x0fb1: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x0fb4: mov_imm:
	regs[5] = 0xe6e2c67, opcode= 0x05
0x0fbb: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0fc0: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x0fc4: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0fc9: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x0fcc: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x0fd2: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x0fd9: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0fde: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x0fe1: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x0fe5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0fea: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x0fed: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x0ff1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0ff6: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x0ffa: jmp_imm:
	pc += 0x1, opcode= 0x08
0x0fff: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1002: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1005: mov_imm:
	regs[5] = 0xbd132245, opcode= 0x05
0x100b: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x100e: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1011: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1015: jmp_imm:
	pc += 0x1, opcode= 0x08
0x101a: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x101d: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1020: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1024: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1029: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x102c: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1030: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1035: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1039: jmp_imm:
	pc += 0x1, opcode= 0x08
0x103e: mov_imm:
	regs[5] = 0x74d7fd7c, opcode= 0x05
0x1044: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1047: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x104a: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1050: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1056: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1059: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x105c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x105f: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1062: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1066: jmp_imm:
	pc += 0x1, opcode= 0x08
0x106b: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x106e: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1072: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1077: mov_imm:
	regs[5] = 0xdd9abcbb, opcode= 0x05
0x107d: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1080: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1083: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1086: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1089: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x108d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1092: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1096: jmp_imm:
	pc += 0x1, opcode= 0x08
0x109b: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x109e: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x10a1: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x10a5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x10aa: mov_imm:
	regs[5] = 0xe76718e9, opcode= 0x05
0x10b1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x10b6: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x10b9: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x10bd: jmp_imm:
	pc += 0x1, opcode= 0x08
0x10c2: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x10c8: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x10ce: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x10d1: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x10d4: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x10d8: jmp_imm:
	pc += 0x1, opcode= 0x08
0x10dd: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x10e1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x10e6: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x10e9: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x10ed: jmp_imm:
	pc += 0x1, opcode= 0x08
0x10f2: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x10f5: mov_imm:
	regs[5] = 0xc57904e9, opcode= 0x05
0x10fb: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x10fe: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1101: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1104: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1107: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x110a: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x110e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1113: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1116: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x111a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x111f: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1122: mov_imm:
	regs[5] = 0x31b33284, opcode= 0x05
0x1129: jmp_imm:
	pc += 0x1, opcode= 0x08
0x112e: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1131: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1134: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x113b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1140: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1147: jmp_imm:
	pc += 0x1, opcode= 0x08
0x114c: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x114f: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1152: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1155: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1158: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x115c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1161: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1164: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1167: mov_imm:
	regs[5] = 0x426ae88c, opcode= 0x05
0x116d: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1170: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1173: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1176: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x117a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x117f: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1182: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1185: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1188: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x118c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1191: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1194: mov_imm:
	regs[5] = 0x450402b0, opcode= 0x05
0x119a: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x119d: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x11a0: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x11a6: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x11ac: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x11af: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x11b3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x11b8: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x11bc: jmp_imm:
	pc += 0x1, opcode= 0x08
0x11c1: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x11c4: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x11c7: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x11ca: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x11cd: mov_imm:
	regs[5] = 0x6481c6be, opcode= 0x05
0x11d3: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x11d6: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x11d9: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x11dc: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x11e0: jmp_imm:
	pc += 0x1, opcode= 0x08
0x11e5: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x11e8: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x11eb: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x11ee: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x11f1: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x11f4: mov_imm:
	regs[5] = 0x177894b3, opcode= 0x05
0x11fa: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x11fe: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1203: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1207: jmp_imm:
	pc += 0x1, opcode= 0x08
0x120c: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1212: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1218: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x121b: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x121e: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1222: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1227: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x122b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1230: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1233: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1236: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x123a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x123f: mov_imm:
	regs[5] = 0x8f0a4bca, opcode= 0x05
0x1245: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1248: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x124b: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x124e: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1251: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1254: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1258: jmp_imm:
	pc += 0x1, opcode= 0x08
0x125d: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1260: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1263: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1266: mov_imm:
	regs[5] = 0x7f48895e, opcode= 0x05
0x126c: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x126f: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1272: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1278: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x127f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1284: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1287: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x128b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1290: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1293: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1296: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1299: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x129c: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x129f: mov_imm:
	regs[5] = 0xd43583f7, opcode= 0x05
0x12a5: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x12a8: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x12ab: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x12ae: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x12b1: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x12b4: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x12b7: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x12ba: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x12bd: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x12c0: mov_imm:
	regs[5] = 0x6157bec0, opcode= 0x05
0x12c6: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x12c9: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x12cc: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x12d2: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x12d9: jmp_imm:
	pc += 0x1, opcode= 0x08
0x12de: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x12e2: jmp_imm:
	pc += 0x1, opcode= 0x08
0x12e7: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x12ea: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x12ee: jmp_imm:
	pc += 0x1, opcode= 0x08
0x12f3: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x12f7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x12fc: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x12ff: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1302: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1305: mov_imm:
	regs[5] = 0xf556ffa2, opcode= 0x05
0x130c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1311: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1314: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1318: jmp_imm:
	pc += 0x1, opcode= 0x08
0x131d: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1320: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1324: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1329: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x132c: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x132f: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1332: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1336: jmp_imm:
	pc += 0x1, opcode= 0x08
0x133b: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x133f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1344: mov_imm:
	regs[5] = 0xf70bf3c8, opcode= 0x05
0x134a: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x134d: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1350: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1357: jmp_imm:
	pc += 0x1, opcode= 0x08
0x135c: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1362: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1365: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1368: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x136b: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x136e: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1371: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1374: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1377: mov_imm:
	regs[5] = 0x4264df95, opcode= 0x05
0x137d: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1380: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1383: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1386: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x138a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x138f: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1392: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1395: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1398: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x139b: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x139e: mov_imm:
	regs[5] = 0x45669ca9, opcode= 0x05
0x13a4: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x13a7: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x13ab: jmp_imm:
	pc += 0x1, opcode= 0x08
0x13b0: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x13b6: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x13bc: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x13bf: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x13c2: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x13c5: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x13c8: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x13cb: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x13ce: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x13d1: mov_imm:
	regs[5] = 0x9b5f69e4, opcode= 0x05
0x13d8: jmp_imm:
	pc += 0x1, opcode= 0x08
0x13dd: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x13e0: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x13e3: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x13e6: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x13e9: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x13ec: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x13ef: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x13f2: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x13f5: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x13f8: mov_imm:
	regs[5] = 0x388f3a68, opcode= 0x05
0x13fe: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1401: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1404: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x140a: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1410: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1414: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1419: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x141d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1422: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1426: jmp_imm:
	pc += 0x1, opcode= 0x08
0x142b: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x142e: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1432: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1437: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x143a: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x143d: mov_imm:
	regs[5] = 0x72856206, opcode= 0x05
0x1443: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1446: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x144a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x144f: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1453: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1458: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x145b: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x145e: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1461: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1465: jmp_imm:
	pc += 0x1, opcode= 0x08
0x146a: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x146d: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1470: mov_imm:
	regs[5] = 0x6aeba7c6, opcode= 0x05
0x1476: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1479: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x147c: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1482: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1489: jmp_imm:
	pc += 0x1, opcode= 0x08
0x148e: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1491: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1494: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1497: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x149a: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x149e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x14a3: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x14a7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x14ac: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x14b0: jmp_imm:
	pc += 0x1, opcode= 0x08
0x14b5: mov_imm:
	regs[5] = 0x55c105d8, opcode= 0x05
0x14bb: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x14be: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x14c1: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x14c4: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x14c7: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x14ca: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x14cd: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x14d0: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x14d3: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x14d6: mov_imm:
	regs[5] = 0xf3410c1d, opcode= 0x05
0x14dc: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x14df: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x14e3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x14e8: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x14ee: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x14f4: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x14f7: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x14fb: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1500: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1503: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1506: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1509: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x150c: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x150f: mov_imm:
	regs[5] = 0xe720d209, opcode= 0x05
0x1515: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1518: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x151c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1521: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1524: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1527: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x152b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1530: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1534: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1539: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x153c: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x153f: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1543: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1548: mov_imm:
	regs[5] = 0x9de73606, opcode= 0x05
0x154e: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1552: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1557: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x155a: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1560: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1566: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x156a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x156f: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1572: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1576: jmp_imm:
	pc += 0x1, opcode= 0x08
0x157b: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x157e: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1581: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1585: jmp_imm:
	pc += 0x1, opcode= 0x08
0x158a: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x158d: mov_imm:
	regs[5] = 0x55238d20, opcode= 0x05
0x1594: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1599: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x159c: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x159f: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x15a3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x15a8: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x15ac: jmp_imm:
	pc += 0x1, opcode= 0x08
0x15b1: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x15b4: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x15b8: jmp_imm:
	pc += 0x1, opcode= 0x08
0x15bd: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x15c0: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x15c3: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x15c7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x15cc: mov_imm:
	regs[5] = 0x38a512b1, opcode= 0x05
0x15d2: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x15d5: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x15d9: jmp_imm:
	pc += 0x1, opcode= 0x08
0x15de: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x15e4: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x15ea: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x15ed: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x15f0: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x15f3: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x15f7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x15fc: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1600: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1605: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1609: jmp_imm:
	pc += 0x1, opcode= 0x08
0x160e: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1612: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1617: mov_imm:
	regs[5] = 0x3abddac1, opcode= 0x05
0x161d: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1621: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1626: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x162a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x162f: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1632: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1635: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1638: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x163b: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x163f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1644: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1647: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x164a: mov_imm:
	regs[5] = 0x5c598b7e, opcode= 0x05
0x1650: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1653: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1656: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x165c: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1662: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1665: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1668: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x166b: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x166e: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1671: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1675: jmp_imm:
	pc += 0x1, opcode= 0x08
0x167a: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x167d: mov_imm:
	regs[5] = 0xc29f2fe3, opcode= 0x05
0x1683: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1686: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1689: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x168d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1692: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1695: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1699: jmp_imm:
	pc += 0x1, opcode= 0x08
0x169e: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x16a1: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x16a4: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x16a7: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x16ab: jmp_imm:
	pc += 0x1, opcode= 0x08
0x16b0: mov_imm:
	regs[5] = 0xc7dddfb4, opcode= 0x05
0x16b6: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x16b9: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x16bc: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x16c2: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x16c9: jmp_imm:
	pc += 0x1, opcode= 0x08
0x16ce: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x16d2: jmp_imm:
	pc += 0x1, opcode= 0x08
0x16d7: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x16da: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x16dd: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x16e0: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x16e3: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x16e6: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x16e9: mov_imm:
	regs[5] = 0x43d17f94, opcode= 0x05
0x16ef: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x16f2: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x16f5: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x16f8: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x16fb: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x16fe: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1701: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1705: jmp_imm:
	pc += 0x1, opcode= 0x08
0x170a: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x170d: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1711: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1716: mov_imm:
	regs[5] = 0x51a9ee4c, opcode= 0x05
0x171c: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x171f: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1723: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1728: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x172f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1734: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x173a: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x173d: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1741: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1746: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1749: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x174d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1752: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1755: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1758: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x175c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1761: mov_imm:
	regs[5] = 0x93ba9e3a, opcode= 0x05
0x1767: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x176a: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x176d: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1770: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1773: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1776: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1779: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x177c: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x177f: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1782: mov_imm:
	regs[5] = 0x675a8593, opcode= 0x05
0x1788: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x178b: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x178e: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1794: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x179a: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x179d: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x17a0: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x17a3: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x17a6: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x17aa: jmp_imm:
	pc += 0x1, opcode= 0x08
0x17af: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x17b2: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x17b5: mov_imm:
	regs[5] = 0x541e1037, opcode= 0x05
0x17bc: jmp_imm:
	pc += 0x1, opcode= 0x08
0x17c1: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x17c4: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x17c7: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x17ca: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x17ce: jmp_imm:
	pc += 0x1, opcode= 0x08
0x17d3: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x17d7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x17dc: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x17df: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x17e2: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x17e5: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x17e9: jmp_imm:
	pc += 0x1, opcode= 0x08
0x17ee: mov_imm:
	regs[5] = 0xcfe4ac3f, opcode= 0x05
0x17f5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x17fa: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x17fd: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1800: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1806: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x180c: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1810: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1815: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1819: jmp_imm:
	pc += 0x1, opcode= 0x08
0x181e: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1821: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1824: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1828: jmp_imm:
	pc += 0x1, opcode= 0x08
0x182d: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1830: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1833: mov_imm:
	regs[5] = 0x809d102e, opcode= 0x05
0x183a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x183f: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1842: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1845: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1848: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x184b: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x184e: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1851: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1854: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1857: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x185a: mov_imm:
	regs[5] = 0x301e3d34, opcode= 0x05
0x1860: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1863: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1866: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x186d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1872: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1878: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x187c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1881: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1884: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1888: jmp_imm:
	pc += 0x1, opcode= 0x08
0x188d: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1890: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1893: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1896: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1899: mov_imm:
	regs[5] = 0xdf08386, opcode= 0x05
0x18a0: jmp_imm:
	pc += 0x1, opcode= 0x08
0x18a5: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x18a8: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x18ab: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x18af: jmp_imm:
	pc += 0x1, opcode= 0x08
0x18b4: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x18b7: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x18ba: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x18bd: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x18c0: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x18c3: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x18c6: mov_imm:
	regs[5] = 0xb22e2307, opcode= 0x05
0x18cc: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x18cf: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x18d2: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x18d8: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x18de: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x18e1: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x18e4: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x18e7: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x18ea: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x18ed: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x18f1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x18f6: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x18f9: mov_imm:
	regs[5] = 0x1349dd07, opcode= 0x05
0x18ff: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1902: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1905: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1909: jmp_imm:
	pc += 0x1, opcode= 0x08
0x190e: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1911: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1914: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1918: jmp_imm:
	pc += 0x1, opcode= 0x08
0x191d: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1920: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1923: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1926: mov_imm:
	regs[5] = 0xb68d6f1b, opcode= 0x05
0x192c: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1930: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1935: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1938: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x193e: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1944: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1947: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x194a: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x194e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1953: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1957: jmp_imm:
	pc += 0x1, opcode= 0x08
0x195c: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x195f: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1962: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1965: mov_imm:
	regs[5] = 0x81bf8fe1, opcode= 0x05
0x196b: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x196f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1974: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1977: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x197a: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x197e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1983: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1986: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1989: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x198c: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1990: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1995: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1998: mov_imm:
	regs[5] = 0xb8349c9, opcode= 0x05
0x199f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x19a4: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x19a7: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x19aa: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x19b1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x19b6: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x19bc: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x19c0: jmp_imm:
	pc += 0x1, opcode= 0x08
0x19c5: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x19c8: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x19cb: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x19ce: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x19d1: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x19d4: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x19d7: mov_imm:
	regs[5] = 0x9d42cf96, opcode= 0x05
0x19dd: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x19e0: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x19e3: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x19e6: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x19e9: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x19ec: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x19ef: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x19f2: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x19f5: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x19f9: jmp_imm:
	pc += 0x1, opcode= 0x08
0x19fe: mov_imm:
	regs[5] = 0xe50eef0b, opcode= 0x05
0x1a04: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1a07: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1a0a: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1a10: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1a16: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1a19: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1a1c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1a1f: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1a22: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1a25: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1a29: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1a2e: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1a31: mov_imm:
	regs[5] = 0x23345a55, opcode= 0x05
0x1a37: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1a3a: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1a3e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1a43: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1a46: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1a49: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1a4c: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1a4f: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1a53: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1a58: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1a5c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1a61: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1a64: mov_imm:
	regs[5] = 0xd3368ea5, opcode= 0x05
0x1a6a: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1a6e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1a73: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1a77: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1a7c: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1a82: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1a88: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1a8b: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1a8e: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1a92: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1a97: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1a9a: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1a9d: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1aa1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1aa6: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1aaa: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1aaf: mov_imm:
	regs[5] = 0x495f6dd6, opcode= 0x05
0x1ab5: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1ab8: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1abb: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1abe: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1ac1: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1ac5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1aca: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1acd: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1ad1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1ad6: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1ad9: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1add: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1ae2: mov_imm:
	regs[5] = 0x1b01e814, opcode= 0x05
0x1ae8: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1aeb: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1aee: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1af5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1afa: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1b00: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1b03: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1b06: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1b09: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1b0c: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1b0f: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1b13: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1b18: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1b1b: mov_imm:
	regs[5] = 0x337560d4, opcode= 0x05
0x1b21: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1b24: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1b27: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1b2a: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1b2d: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1b30: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1b34: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1b39: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1b3c: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1b40: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1b45: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1b49: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1b4e: mov_imm:
	regs[5] = 0x5918f4a, opcode= 0x05
0x1b55: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1b5a: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1b5d: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1b60: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1b66: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1b6c: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1b70: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1b75: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1b78: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1b7b: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1b7f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1b84: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1b87: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1b8a: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1b8e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1b93: mov_imm:
	regs[5] = 0x4132af8f, opcode= 0x05
0x1b99: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1b9c: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1b9f: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1ba2: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1ba5: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1ba8: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1bab: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1bae: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1bb1: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1bb4: mov_imm:
	regs[5] = 0x469dbcac, opcode= 0x05
0x1bbb: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1bc0: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1bc4: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1bc9: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1bcd: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1bd2: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1bd8: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1bdf: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1be4: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1be7: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1bea: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1bee: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1bf3: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1bf6: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1bfa: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1bff: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1c02: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1c05: mov_imm:
	regs[5] = 0x96b1a098, opcode= 0x05
0x1c0b: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1c0f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1c14: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1c17: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1c1a: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1c1e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1c23: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1c27: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1c2c: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1c2f: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1c32: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1c35: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1c38: mov_imm:
	regs[5] = 0xdd05c3c, opcode= 0x05
0x1c3e: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1c41: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1c44: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1c4a: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1c51: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1c56: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1c59: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1c5c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1c5f: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1c62: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1c66: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1c6b: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1c6e: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1c71: mov_imm:
	regs[5] = 0x2f449cc0, opcode= 0x05
0x1c78: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1c7d: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1c80: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1c83: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1c87: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1c8c: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1c8f: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1c93: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1c98: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1c9b: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1c9f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1ca4: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1ca8: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1cad: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1cb0: mov_imm:
	regs[5] = 0xa773a4a2, opcode= 0x05
0x1cb6: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1cb9: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1cbc: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1cc3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1cc8: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1cce: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1cd1: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1cd5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1cda: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1cdd: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1ce0: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1ce3: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1ce6: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1ce9: mov_imm:
	regs[5] = 0x8c52a7c0, opcode= 0x05
0x1cef: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1cf2: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1cf5: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1cf8: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1cfb: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1cff: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1d04: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1d08: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1d0d: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1d10: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1d13: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1d16: mov_imm:
	regs[5] = 0x55b6f164, opcode= 0x05
0x1d1c: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1d20: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1d25: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1d28: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1d2f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1d34: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1d3a: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1d3d: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1d41: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1d46: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1d49: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1d4c: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1d4f: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1d52: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1d56: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1d5b: mov_imm:
	regs[5] = 0x2660f574, opcode= 0x05
0x1d61: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1d64: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1d67: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1d6b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1d70: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1d73: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1d76: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1d79: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1d7c: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1d80: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1d85: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1d88: mov_imm:
	regs[5] = 0x1a47de69, opcode= 0x05
0x1d8e: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1d91: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1d94: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1d9a: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1da0: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1da3: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1da7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1dac: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1db0: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1db5: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1db8: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1dbb: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1dbe: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1dc1: mov_imm:
	regs[5] = 0x91ea6245, opcode= 0x05
0x1dc8: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1dcd: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1dd0: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1dd3: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1dd6: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1dd9: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1ddc: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1ddf: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1de2: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1de5: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1de9: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1dee: mov_imm:
	regs[5] = 0xfea6ab52, opcode= 0x05
0x1df4: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1df8: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1dfd: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1e00: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1e06: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1e0c: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1e0f: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1e13: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1e18: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1e1b: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1e1e: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1e21: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1e24: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1e27: mov_imm:
	regs[5] = 0xfe8ba837, opcode= 0x05
0x1e2e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1e33: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1e36: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1e39: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1e3d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1e42: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1e45: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1e48: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1e4b: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1e4e: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1e51: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1e54: mov_imm:
	regs[5] = 0x136df7ed, opcode= 0x05
0x1e5b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1e60: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1e63: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1e66: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1e6c: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1e72: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1e75: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1e78: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1e7b: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1e7f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1e84: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1e87: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1e8a: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1e8d: mov_imm:
	regs[5] = 0xaec77a36, opcode= 0x05
0x1e93: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1e96: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1e99: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1e9c: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1e9f: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1ea3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1ea8: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1eab: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1eae: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1eb2: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1eb7: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1eba: mov_imm:
	regs[5] = 0x9be25a6d, opcode= 0x05
0x1ec0: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1ec3: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1ec6: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1ecd: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1ed2: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1ed8: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1edb: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1edf: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1ee4: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1ee8: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1eed: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1ef0: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1ef3: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1ef6: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1ef9: mov_imm:
	regs[5] = 0xb199e535, opcode= 0x05
0x1eff: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1f03: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1f08: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1f0b: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1f0e: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1f11: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1f14: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1f18: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1f1d: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1f20: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1f23: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1f26: mov_imm:
	regs[5] = 0x7776e2e8, opcode= 0x05
0x1f2d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1f32: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1f35: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1f38: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1f3f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1f44: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1f4a: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1f4d: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1f50: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1f53: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1f56: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1f59: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1f5c: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1f60: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1f65: mov_imm:
	regs[5] = 0xc31a5b1d, opcode= 0x05
0x1f6b: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1f6e: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1f71: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1f75: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1f7a: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1f7d: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1f81: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1f86: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1f89: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1f8c: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1f8f: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1f93: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1f98: mov_imm:
	regs[5] = 0x413210c4, opcode= 0x05
0x1f9e: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1fa1: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x1fa4: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x1faa: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x1fb0: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x1fb3: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x1fb7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1fbc: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1fbf: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1fc2: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1fc6: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1fcb: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1fce: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x1fd1: mov_imm:
	regs[5] = 0xac3bcd5, opcode= 0x05
0x1fd7: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x1fda: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x1fde: jmp_imm:
	pc += 0x1, opcode= 0x08
0x1fe3: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x1fe6: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x1fe9: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x1fec: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x1fef: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x1ff2: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x1ff5: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x1ff8: mov_imm:
	regs[5] = 0xd0978e4e, opcode= 0x05
0x1fff: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2004: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2007: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x200b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2010: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2016: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x201c: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x201f: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2022: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2025: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2028: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x202b: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x202e: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2031: mov_imm:
	regs[5] = 0xea244829, opcode= 0x05
0x2038: jmp_imm:
	pc += 0x1, opcode= 0x08
0x203d: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2041: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2046: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2049: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x204c: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x204f: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2052: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2055: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2058: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x205b: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x205f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2064: mov_imm:
	regs[5] = 0x1d01c84, opcode= 0x05
0x206a: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x206d: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2070: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2076: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x207c: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x207f: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2082: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2085: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2088: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x208b: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x208e: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2091: mov_imm:
	regs[5] = 0x925ffac4, opcode= 0x05
0x2097: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x209a: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x209d: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x20a0: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x20a3: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x20a6: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x20a9: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x20ac: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x20af: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x20b2: mov_imm:
	regs[5] = 0xd1a79543, opcode= 0x05
0x20b8: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x20bb: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x20bf: jmp_imm:
	pc += 0x1, opcode= 0x08
0x20c4: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x20ca: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x20d1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x20d6: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x20d9: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x20dd: jmp_imm:
	pc += 0x1, opcode= 0x08
0x20e2: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x20e5: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x20e9: jmp_imm:
	pc += 0x1, opcode= 0x08
0x20ee: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x20f1: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x20f5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x20fa: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x20fe: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2103: mov_imm:
	regs[5] = 0x625814b0, opcode= 0x05
0x2109: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x210c: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2110: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2115: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2119: jmp_imm:
	pc += 0x1, opcode= 0x08
0x211e: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2121: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2124: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2127: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x212b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2130: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2133: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2136: mov_imm:
	regs[5] = 0xbe593f7b, opcode= 0x05
0x213c: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x213f: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2142: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2149: jmp_imm:
	pc += 0x1, opcode= 0x08
0x214e: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2154: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2157: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x215b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2160: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2163: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2166: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2169: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x216c: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x216f: mov_imm:
	regs[5] = 0xf6a87069, opcode= 0x05
0x2175: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2179: jmp_imm:
	pc += 0x1, opcode= 0x08
0x217e: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2182: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2187: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x218b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2190: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2193: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2196: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x219a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x219f: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x21a3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x21a8: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x21ac: jmp_imm:
	pc += 0x1, opcode= 0x08
0x21b1: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x21b5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x21ba: mov_imm:
	regs[5] = 0x3a0627e0, opcode= 0x05
0x21c0: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x21c4: jmp_imm:
	pc += 0x1, opcode= 0x08
0x21c9: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x21cc: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x21d3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x21d8: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x21de: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x21e2: jmp_imm:
	pc += 0x1, opcode= 0x08
0x21e7: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x21eb: jmp_imm:
	pc += 0x1, opcode= 0x08
0x21f0: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x21f4: jmp_imm:
	pc += 0x1, opcode= 0x08
0x21f9: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x21fc: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x21ff: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2202: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2205: mov_imm:
	regs[5] = 0xe40f994b, opcode= 0x05
0x220b: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x220e: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2211: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2214: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2217: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x221b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2220: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2223: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2226: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2229: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x222c: mov_imm:
	regs[5] = 0xbf5770d, opcode= 0x05
0x2232: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2236: jmp_imm:
	pc += 0x1, opcode= 0x08
0x223b: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x223f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2244: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x224b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2250: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2257: jmp_imm:
	pc += 0x1, opcode= 0x08
0x225c: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2260: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2265: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2268: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x226b: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x226e: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2271: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2275: jmp_imm:
	pc += 0x1, opcode= 0x08
0x227a: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x227d: mov_imm:
	regs[5] = 0x45276a79, opcode= 0x05
0x2283: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2286: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x228a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x228f: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2292: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2295: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2298: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x229c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x22a1: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x22a4: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x22a8: jmp_imm:
	pc += 0x1, opcode= 0x08
0x22ad: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x22b1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x22b6: mov_imm:
	regs[5] = 0x327f710b, opcode= 0x05
0x22bd: jmp_imm:
	pc += 0x1, opcode= 0x08
0x22c2: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x22c6: jmp_imm:
	pc += 0x1, opcode= 0x08
0x22cb: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x22ce: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x22d4: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x22da: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x22dd: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x22e0: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x22e3: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x22e6: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x22e9: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x22ec: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x22ef: mov_imm:
	regs[5] = 0xa2f5cf59, opcode= 0x05
0x22f5: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x22f9: jmp_imm:
	pc += 0x1, opcode= 0x08
0x22fe: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2301: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2304: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2307: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x230a: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x230d: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2310: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2313: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2316: mov_imm:
	regs[5] = 0x3215c961, opcode= 0x05
0x231c: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2320: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2325: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2328: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x232e: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2334: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2337: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x233a: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x233d: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2340: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2343: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2346: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2349: mov_imm:
	regs[5] = 0x351e9177, opcode= 0x05
0x234f: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2353: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2358: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x235b: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x235e: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2361: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2364: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2367: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x236a: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x236d: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2371: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2376: mov_imm:
	regs[5] = 0x17b8f444, opcode= 0x05
0x237c: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x237f: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2382: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2388: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x238f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2394: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2397: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x239a: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x239e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x23a3: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x23a6: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x23a9: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x23ad: jmp_imm:
	pc += 0x1, opcode= 0x08
0x23b2: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x23b5: mov_imm:
	regs[5] = 0xa1183d2d, opcode= 0x05
0x23bb: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x23be: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x23c2: jmp_imm:
	pc += 0x1, opcode= 0x08
0x23c7: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x23ca: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x23cd: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x23d0: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x23d3: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x23d6: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x23d9: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x23dc: mov_imm:
	regs[5] = 0xe7516749, opcode= 0x05
0x23e3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x23e8: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x23eb: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x23ee: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x23f5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x23fa: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2400: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2403: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2406: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2409: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x240d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2412: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2416: jmp_imm:
	pc += 0x1, opcode= 0x08
0x241b: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x241f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2424: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2427: mov_imm:
	regs[5] = 0x78e5ce16, opcode= 0x05
0x242d: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2430: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2433: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2436: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2439: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x243c: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x243f: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2442: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2446: jmp_imm:
	pc += 0x1, opcode= 0x08
0x244b: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x244e: mov_imm:
	regs[5] = 0x78c148d5, opcode= 0x05
0x2454: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2458: jmp_imm:
	pc += 0x1, opcode= 0x08
0x245d: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2461: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2466: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x246d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2472: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2479: jmp_imm:
	pc += 0x1, opcode= 0x08
0x247e: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2482: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2487: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x248a: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x248d: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2490: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2493: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2496: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2499: mov_imm:
	regs[5] = 0x12169507, opcode= 0x05
0x249f: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x24a3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x24a8: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x24ac: jmp_imm:
	pc += 0x1, opcode= 0x08
0x24b1: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x24b4: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x24b8: jmp_imm:
	pc += 0x1, opcode= 0x08
0x24bd: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x24c0: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x24c3: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x24c6: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x24c9: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x24cc: mov_imm:
	regs[5] = 0xb02d9bd2, opcode= 0x05
0x24d2: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x24d6: jmp_imm:
	pc += 0x1, opcode= 0x08
0x24db: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x24de: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x24e5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x24ea: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x24f0: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x24f3: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x24f7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x24fc: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x24ff: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2502: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2506: jmp_imm:
	pc += 0x1, opcode= 0x08
0x250b: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x250f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2514: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2518: jmp_imm:
	pc += 0x1, opcode= 0x08
0x251d: mov_imm:
	regs[5] = 0x9fc76da9, opcode= 0x05
0x2524: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2529: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x252d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2532: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2535: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2539: jmp_imm:
	pc += 0x1, opcode= 0x08
0x253e: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2542: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2547: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x254b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2550: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2553: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2556: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2559: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x255c: mov_imm:
	regs[5] = 0xcaa8aab4, opcode= 0x05
0x2562: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2565: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2568: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x256e: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2575: jmp_imm:
	pc += 0x1, opcode= 0x08
0x257a: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x257d: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2580: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2583: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2587: jmp_imm:
	pc += 0x1, opcode= 0x08
0x258c: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x258f: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2593: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2598: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x259c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x25a1: mov_imm:
	regs[5] = 0x35a489c9, opcode= 0x05
0x25a7: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x25ab: jmp_imm:
	pc += 0x1, opcode= 0x08
0x25b0: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x25b3: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x25b7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x25bc: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x25c0: jmp_imm:
	pc += 0x1, opcode= 0x08
0x25c5: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x25c8: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x25cb: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x25ce: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x25d2: jmp_imm:
	pc += 0x1, opcode= 0x08
0x25d7: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x25da: mov_imm:
	regs[5] = 0x7ea5e462, opcode= 0x05
0x25e0: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x25e4: jmp_imm:
	pc += 0x1, opcode= 0x08
0x25e9: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x25ed: jmp_imm:
	pc += 0x1, opcode= 0x08
0x25f2: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x25f9: jmp_imm:
	pc += 0x1, opcode= 0x08
0x25fe: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2604: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2607: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x260a: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x260e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2613: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2616: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2619: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x261c: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2620: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2625: mov_imm:
	regs[5] = 0xd639868c, opcode= 0x05
0x262b: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x262e: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2631: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2634: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2637: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x263a: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x263e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2643: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2647: jmp_imm:
	pc += 0x1, opcode= 0x08
0x264c: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x264f: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2652: mov_imm:
	regs[5] = 0x585474, opcode= 0x05
0x2659: jmp_imm:
	pc += 0x1, opcode= 0x08
0x265e: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2661: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2665: jmp_imm:
	pc += 0x1, opcode= 0x08
0x266a: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2670: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2676: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x267a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x267f: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2682: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2685: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2689: jmp_imm:
	pc += 0x1, opcode= 0x08
0x268e: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2691: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2694: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2697: mov_imm:
	regs[5] = 0xfbfbb074, opcode= 0x05
0x269e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x26a3: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x26a6: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x26a9: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x26ac: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x26af: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x26b2: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x26b5: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x26b8: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x26bb: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x26be: mov_imm:
	regs[5] = 0xb7f61c6b, opcode= 0x05
0x26c4: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x26c7: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x26ca: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x26d0: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x26d6: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x26d9: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x26dc: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x26df: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x26e2: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x26e6: jmp_imm:
	pc += 0x1, opcode= 0x08
0x26eb: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x26ee: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x26f1: mov_imm:
	regs[5] = 0x3302e63, opcode= 0x05
0x26f8: jmp_imm:
	pc += 0x1, opcode= 0x08
0x26fd: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2700: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2703: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2706: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2709: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x270d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2712: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2715: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2718: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x271b: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x271e: mov_imm:
	regs[5] = 0x2bad20e3, opcode= 0x05
0x2724: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2727: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x272a: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2730: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2736: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2739: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x273c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2740: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2745: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2748: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x274b: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x274e: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2751: mov_imm:
	regs[5] = 0x172dfa42, opcode= 0x05
0x2758: jmp_imm:
	pc += 0x1, opcode= 0x08
0x275d: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2760: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2763: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2766: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2769: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x276c: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x276f: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2772: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2775: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2778: mov_imm:
	regs[5] = 0x931417dc, opcode= 0x05
0x277e: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2781: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2784: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x278b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2790: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2796: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2799: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x279c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x279f: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x27a3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x27a8: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x27ab: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x27ae: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x27b2: jmp_imm:
	pc += 0x1, opcode= 0x08
0x27b7: mov_imm:
	regs[5] = 0xe49cf9df, opcode= 0x05
0x27bd: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x27c0: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x27c3: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x27c7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x27cc: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x27cf: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x27d2: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x27d6: jmp_imm:
	pc += 0x1, opcode= 0x08
0x27db: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x27de: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x27e1: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x27e4: mov_imm:
	regs[5] = 0x57f7de46, opcode= 0x05
0x27eb: jmp_imm:
	pc += 0x1, opcode= 0x08
0x27f0: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x27f3: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x27f6: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x27fc: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2802: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2805: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2809: jmp_imm:
	pc += 0x1, opcode= 0x08
0x280e: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2811: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2814: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2818: jmp_imm:
	pc += 0x1, opcode= 0x08
0x281d: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2821: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2826: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x282a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x282f: mov_imm:
	regs[5] = 0xb4d2f444, opcode= 0x05
0x2836: jmp_imm:
	pc += 0x1, opcode= 0x08
0x283b: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x283e: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2841: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2844: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2847: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x284a: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x284d: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2850: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2853: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2857: jmp_imm:
	pc += 0x1, opcode= 0x08
0x285c: mov_imm:
	regs[5] = 0x68526205, opcode= 0x05
0x2863: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2868: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x286b: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x286e: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2874: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x287a: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x287d: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2880: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2883: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2886: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2889: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x288c: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x288f: mov_imm:
	regs[5] = 0x6c8676f0, opcode= 0x05
0x2895: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2898: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x289b: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x289e: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x28a1: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x28a5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x28aa: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x28ad: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x28b0: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x28b3: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x28b6: mov_imm:
	regs[5] = 0xffd712bc, opcode= 0x05
0x28bc: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x28c0: jmp_imm:
	pc += 0x1, opcode= 0x08
0x28c5: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x28c8: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x28ce: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x28d4: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x28d7: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x28db: jmp_imm:
	pc += 0x1, opcode= 0x08
0x28e0: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x28e4: jmp_imm:
	pc += 0x1, opcode= 0x08
0x28e9: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x28ec: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x28f0: jmp_imm:
	pc += 0x1, opcode= 0x08
0x28f5: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x28f8: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x28fc: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2901: mov_imm:
	regs[5] = 0xb7304ee9, opcode= 0x05
0x2908: jmp_imm:
	pc += 0x1, opcode= 0x08
0x290d: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2910: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2913: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2916: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2919: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x291c: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x291f: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2923: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2928: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x292c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2931: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2934: mov_imm:
	regs[5] = 0xf2ab1764, opcode= 0x05
0x293a: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x293e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2943: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2947: jmp_imm:
	pc += 0x1, opcode= 0x08
0x294c: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2953: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2958: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x295e: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2962: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2967: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x296b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2970: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2974: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2979: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x297d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2982: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2985: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2988: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x298b: mov_imm:
	regs[5] = 0x8157bc41, opcode= 0x05
0x2991: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2994: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2997: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x299a: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x299d: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x29a1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x29a6: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x29a9: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x29ac: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x29af: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x29b3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x29b8: mov_imm:
	regs[5] = 0x7f0253dd, opcode= 0x05
0x29be: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x29c1: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x29c4: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x29ca: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x29d0: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x29d3: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x29d6: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x29da: jmp_imm:
	pc += 0x1, opcode= 0x08
0x29df: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x29e3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x29e8: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x29eb: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x29ef: jmp_imm:
	pc += 0x1, opcode= 0x08
0x29f4: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x29f8: jmp_imm:
	pc += 0x1, opcode= 0x08
0x29fd: mov_imm:
	regs[5] = 0x8e06b2af, opcode= 0x05
0x2a03: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2a06: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2a09: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2a0d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2a12: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2a16: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2a1b: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2a1e: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2a21: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2a24: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2a28: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2a2d: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2a30: mov_imm:
	regs[5] = 0xc220fb46, opcode= 0x05
0x2a36: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2a39: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2a3c: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2a42: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2a48: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2a4b: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2a4e: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2a51: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2a54: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2a57: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2a5a: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2a5d: mov_imm:
	regs[5] = 0x48755d7c, opcode= 0x05
0x2a64: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2a69: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2a6c: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2a70: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2a75: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2a78: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2a7b: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2a7e: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2a81: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2a85: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2a8a: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2a8d: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2a90: mov_imm:
	regs[5] = 0x36a61568, opcode= 0x05
0x2a96: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2a99: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2a9c: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2aa2: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2aa8: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2aab: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2aae: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2ab1: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2ab4: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2ab7: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2abb: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2ac0: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2ac3: mov_imm:
	regs[5] = 0xc5d8b385, opcode= 0x05
0x2ac9: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2acd: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2ad2: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2ad5: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2ad8: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2adb: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2ade: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2ae2: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2ae7: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2aea: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2aed: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2af0: mov_imm:
	regs[5] = 0xbe7b4e18, opcode= 0x05
0x2af6: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2af9: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2afd: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2b02: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2b09: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2b0e: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2b14: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2b17: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2b1a: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2b1d: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2b20: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2b23: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2b26: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2b2a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2b2f: mov_imm:
	regs[5] = 0x63a48cea, opcode= 0x05
0x2b35: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2b39: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2b3e: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2b42: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2b47: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2b4a: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2b4d: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2b50: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2b53: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2b56: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2b59: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2b5c: mov_imm:
	regs[5] = 0xc4726daf, opcode= 0x05
0x2b62: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2b66: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2b6b: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2b6e: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2b74: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2b7a: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2b7d: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2b80: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2b84: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2b89: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2b8c: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2b90: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2b95: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2b98: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2b9b: mov_imm:
	regs[5] = 0x734caf4d, opcode= 0x05
0x2ba1: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2ba4: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2ba7: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2bab: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2bb0: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2bb3: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2bb6: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2bba: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2bbf: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2bc2: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2bc5: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2bc8: mov_imm:
	regs[5] = 0xacafa496, opcode= 0x05
0x2bce: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2bd1: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2bd4: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2bdb: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2be0: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2be7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2bec: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2bf0: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2bf5: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2bf8: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2bfb: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2bfe: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2c01: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2c04: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2c07: mov_imm:
	regs[5] = 0xf33c584, opcode= 0x05
0x2c0d: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2c10: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2c13: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2c16: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2c19: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2c1c: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2c1f: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2c23: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2c28: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2c2b: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2c2e: mov_imm:
	regs[5] = 0xab832a1e, opcode= 0x05
0x2c35: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2c3a: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2c3d: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2c40: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2c46: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2c4c: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2c4f: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2c52: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2c55: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2c58: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2c5b: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2c5e: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2c61: mov_imm:
	regs[5] = 0x14838d41, opcode= 0x05
0x2c68: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2c6d: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2c71: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2c76: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2c79: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2c7c: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2c7f: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2c83: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2c88: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2c8c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2c91: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2c94: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2c97: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2c9a: mov_imm:
	regs[5] = 0x579f2b1a, opcode= 0x05
0x2ca0: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2ca4: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2ca9: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2cac: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2cb3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2cb8: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2cbe: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2cc1: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2cc4: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2cc7: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2cca: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2ccd: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2cd1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2cd6: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2cd9: mov_imm:
	regs[5] = 0x648143a, opcode= 0x05
0x2cdf: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2ce2: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2ce5: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2ce8: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2cec: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2cf1: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2cf4: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2cf7: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2cfa: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2cfd: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2d01: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2d06: mov_imm:
	regs[5] = 0xe80aff6b, opcode= 0x05
0x2d0d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2d12: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2d15: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2d18: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2d1e: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2d24: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2d27: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2d2a: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2d2d: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2d30: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2d33: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2d36: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2d3a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2d3f: mov_imm:
	regs[5] = 0x4ac42960, opcode= 0x05
0x2d45: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2d49: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2d4e: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2d52: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2d57: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2d5a: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2d5e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2d63: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2d66: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2d69: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2d6c: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2d6f: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2d72: mov_imm:
	regs[5] = 0x7cf52965, opcode= 0x05
0x2d78: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2d7c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2d81: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2d84: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2d8a: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2d90: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2d94: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2d99: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2d9c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2d9f: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2da3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2da8: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2dab: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2dae: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2db2: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2db7: mov_imm:
	regs[5] = 0x2777b802, opcode= 0x05
0x2dbd: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2dc0: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2dc3: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2dc6: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2dc9: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2dcc: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2dcf: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2dd3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2dd8: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2ddb: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2dde: mov_imm:
	regs[5] = 0xa9807051, opcode= 0x05
0x2de4: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2de7: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2deb: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2df0: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2df6: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2dfc: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2dff: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2e02: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2e05: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2e08: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2e0c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2e11: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2e14: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2e17: mov_imm:
	regs[5] = 0xb0083f34, opcode= 0x05
0x2e1d: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2e20: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2e23: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2e26: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2e2a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2e2f: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2e32: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2e35: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2e38: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2e3c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2e41: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2e44: mov_imm:
	regs[5] = 0x24dd361f, opcode= 0x05
0x2e4b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2e50: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2e53: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2e57: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2e5c: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2e62: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2e69: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2e6e: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2e72: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2e77: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2e7a: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2e7d: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2e80: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2e83: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2e87: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2e8c: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2e8f: mov_imm:
	regs[5] = 0xd48da0a4, opcode= 0x05
0x2e95: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2e98: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2e9b: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2e9e: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2ea1: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2ea4: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2ea8: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2ead: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2eb0: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2eb3: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2eb7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2ebc: mov_imm:
	regs[5] = 0xf5053377, opcode= 0x05
0x2ec3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2ec8: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2ecb: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2ece: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2ed4: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2eda: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2edd: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2ee1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2ee6: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2eea: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2eef: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2ef3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2ef8: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2efb: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2efe: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2f01: mov_imm:
	regs[5] = 0x84e1131, opcode= 0x05
0x2f07: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2f0a: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2f0e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2f13: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2f16: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2f19: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2f1c: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2f1f: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2f23: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2f28: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2f2b: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2f2e: mov_imm:
	regs[5] = 0x97816b05, opcode= 0x05
0x2f34: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2f37: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2f3a: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2f40: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2f46: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2f49: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2f4c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2f50: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2f55: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2f58: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2f5b: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2f5f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2f64: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2f67: mov_imm:
	regs[5] = 0x4518d17d, opcode= 0x05
0x2f6d: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2f71: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2f76: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2f79: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2f7c: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2f80: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2f85: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2f88: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2f8b: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2f8f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2f94: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2f97: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x2f9a: mov_imm:
	regs[5] = 0x9848ec08, opcode= 0x05
0x2fa1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2fa6: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2fa9: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x2fad: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2fb2: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x2fb8: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x2fbe: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x2fc1: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x2fc4: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2fc7: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2fca: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x2fcd: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x2fd1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2fd6: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x2fd9: mov_imm:
	regs[5] = 0xc79e1527, opcode= 0x05
0x2fdf: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x2fe3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2fe8: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x2feb: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x2fef: jmp_imm:
	pc += 0x1, opcode= 0x08
0x2ff4: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x2ff7: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x2ffa: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x2ffd: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x3000: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x3004: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3009: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x300c: mov_imm:
	regs[5] = 0x1daa09a4, opcode= 0x05
0x3012: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3015: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x3018: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x301f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3024: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x302b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3030: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x3033: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x3037: jmp_imm:
	pc += 0x1, opcode= 0x08
0x303c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x303f: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x3043: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3048: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x304c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3051: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x3054: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x3058: jmp_imm:
	pc += 0x1, opcode= 0x08
0x305d: mov_imm:
	regs[5] = 0x3b035f92, opcode= 0x05
0x3063: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3066: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x3069: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x306c: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x3070: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3075: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x3079: jmp_imm:
	pc += 0x1, opcode= 0x08
0x307e: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x3081: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x3084: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x3087: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x308a: mov_imm:
	regs[5] = 0xa5d719ab, opcode= 0x05
0x3090: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3093: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x3096: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x309c: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x30a3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x30a8: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x30ab: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x30af: jmp_imm:
	pc += 0x1, opcode= 0x08
0x30b4: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x30b7: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x30ba: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x30be: jmp_imm:
	pc += 0x1, opcode= 0x08
0x30c3: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x30c7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x30cc: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x30cf: mov_imm:
	regs[5] = 0x31f42b73, opcode= 0x05
0x30d6: jmp_imm:
	pc += 0x1, opcode= 0x08
0x30db: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x30de: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x30e1: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x30e4: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x30e7: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x30ea: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x30ed: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x30f1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x30f6: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x30f9: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x30fd: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3102: mov_imm:
	regs[5] = 0xf5968c2d, opcode= 0x05
0x3109: jmp_imm:
	pc += 0x1, opcode= 0x08
0x310e: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3111: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x3114: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x311a: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x3121: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3126: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x3129: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x312c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x312f: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x3133: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3138: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x313c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3141: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x3145: jmp_imm:
	pc += 0x1, opcode= 0x08
0x314a: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x314d: mov_imm:
	regs[5] = 0x56273b8d, opcode= 0x05
0x3153: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3156: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x3159: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x315c: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x315f: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x3163: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3168: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x316b: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x316e: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x3172: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3177: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x317b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3180: mov_imm:
	regs[5] = 0x744e83e8, opcode= 0x05
0x3186: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x318a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x318f: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x3192: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x3198: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x319e: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x31a1: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x31a4: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x31a8: jmp_imm:
	pc += 0x1, opcode= 0x08
0x31ad: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x31b0: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x31b3: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x31b6: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x31b9: mov_imm:
	regs[5] = 0xf60d4603, opcode= 0x05
0x31bf: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x31c2: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x31c5: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x31c8: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x31cb: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x31ce: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x31d1: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x31d4: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x31d7: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x31da: mov_imm:
	regs[5] = 0xdf32e3da, opcode= 0x05
0x31e1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x31e6: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x31e9: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x31ec: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x31f2: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x31f8: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x31fc: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3201: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x3205: jmp_imm:
	pc += 0x1, opcode= 0x08
0x320a: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x320e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3213: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x3216: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x321a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x321f: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x3222: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x3226: jmp_imm:
	pc += 0x1, opcode= 0x08
0x322b: mov_imm:
	regs[5] = 0xa606441, opcode= 0x05
0x3231: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3234: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x3237: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x323a: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x323d: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x3240: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x3243: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x3247: jmp_imm:
	pc += 0x1, opcode= 0x08
0x324c: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x324f: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x3253: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3258: mov_imm:
	regs[5] = 0x4e88023c, opcode= 0x05
0x325f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3264: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3267: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x326a: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x3270: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x3276: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x3279: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x327c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x327f: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x3282: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x3285: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x3288: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x328c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3291: mov_imm:
	regs[5] = 0xb149181, opcode= 0x05
0x3297: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x329a: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x329e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x32a3: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x32a6: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x32a9: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x32ac: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x32af: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x32b3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x32b8: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x32bb: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x32be: mov_imm:
	regs[5] = 0xe1ac39ff, opcode= 0x05
0x32c4: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x32c7: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x32ca: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x32d0: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x32d7: jmp_imm:
	pc += 0x1, opcode= 0x08
0x32dc: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x32df: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x32e2: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x32e5: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x32e8: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x32eb: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x32ef: jmp_imm:
	pc += 0x1, opcode= 0x08
0x32f4: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x32f7: mov_imm:
	regs[5] = 0xe279d635, opcode= 0x05
0x32fd: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3300: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x3303: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x3306: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x3309: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x330c: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x330f: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x3312: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x3315: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x3319: jmp_imm:
	pc += 0x1, opcode= 0x08
0x331e: mov_imm:
	regs[5] = 0xbd49ee5e, opcode= 0x05
0x3324: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3327: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x332a: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x3330: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x3336: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x3339: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x333c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x333f: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x3342: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x3345: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x3348: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x334b: mov_imm:
	regs[5] = 0x55ac01da, opcode= 0x05
0x3351: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3355: jmp_imm:
	pc += 0x1, opcode= 0x08
0x335a: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x335e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3363: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x3367: jmp_imm:
	pc += 0x1, opcode= 0x08
0x336c: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x336f: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x3372: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x3375: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x3378: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x337b: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x337e: mov_imm:
	regs[5] = 0xe8b0a89d, opcode= 0x05
0x3384: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3387: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x338a: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x3391: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3396: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x339c: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x339f: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x33a2: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x33a5: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x33a8: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x33ab: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x33ae: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x33b1: mov_imm:
	regs[5] = 0x6c49acc7, opcode= 0x05
0x33b7: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x33ba: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x33be: jmp_imm:
	pc += 0x1, opcode= 0x08
0x33c3: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x33c6: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x33ca: jmp_imm:
	pc += 0x1, opcode= 0x08
0x33cf: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x33d3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x33d8: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x33db: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x33df: jmp_imm:
	pc += 0x1, opcode= 0x08
0x33e4: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x33e7: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x33eb: jmp_imm:
	pc += 0x1, opcode= 0x08
0x33f0: mov_imm:
	regs[5] = 0x53b3ba82, opcode= 0x05
0x33f6: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x33f9: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x33fc: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x3403: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3408: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x340e: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x3411: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x3414: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x3417: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x341b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3420: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x3423: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x3426: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x3429: mov_imm:
	regs[5] = 0x806b7d6b, opcode= 0x05
0x342f: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3432: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x3435: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x3439: jmp_imm:
	pc += 0x1, opcode= 0x08
0x343e: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x3441: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x3444: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x3447: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x344a: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x344d: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x3450: mov_imm:
	regs[5] = 0x1f092e16, opcode= 0x05
0x3456: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x345a: jmp_imm:
	pc += 0x1, opcode= 0x08
0x345f: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x3462: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x3468: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x346e: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x3471: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x3474: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x3478: jmp_imm:
	pc += 0x1, opcode= 0x08
0x347d: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x3480: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x3483: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x3487: jmp_imm:
	pc += 0x1, opcode= 0x08
0x348c: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x348f: mov_imm:
	regs[5] = 0x6f33b337, opcode= 0x05
0x3495: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3498: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x349c: jmp_imm:
	pc += 0x1, opcode= 0x08
0x34a1: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x34a5: jmp_imm:
	pc += 0x1, opcode= 0x08
0x34aa: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x34ad: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x34b1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x34b6: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x34b9: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x34bc: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x34bf: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x34c3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x34c8: mov_imm:
	regs[5] = 0x32b80e5b, opcode= 0x05
0x34ce: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x34d1: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x34d4: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x34da: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x34e0: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x34e3: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x34e6: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x34ea: jmp_imm:
	pc += 0x1, opcode= 0x08
0x34ef: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x34f3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x34f8: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x34fb: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x34fe: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x3501: mov_imm:
	regs[5] = 0x87aed9cf, opcode= 0x05
0x3507: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x350a: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x350d: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x3510: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x3513: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x3517: jmp_imm:
	pc += 0x1, opcode= 0x08
0x351c: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x351f: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x3522: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x3526: jmp_imm:
	pc += 0x1, opcode= 0x08
0x352b: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x352e: mov_imm:
	regs[5] = 0x2d7e32c3, opcode= 0x05
0x3534: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3537: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x353a: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x3540: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x3546: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x3549: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x354d: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3552: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x3555: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x3558: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x355b: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x355e: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x3562: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3567: mov_imm:
	regs[5] = 0x689a1b47, opcode= 0x05
0x356d: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3571: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3576: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x3579: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x357c: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x357f: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x3582: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x3585: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x3588: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x358b: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x358e: mov_imm:
	regs[5] = 0x3e886393, opcode= 0x05
0x3594: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3598: jmp_imm:
	pc += 0x1, opcode= 0x08
0x359d: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x35a0: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x35a6: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x35ac: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x35af: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x35b2: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x35b5: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x35b8: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x35bc: jmp_imm:
	pc += 0x1, opcode= 0x08
0x35c1: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x35c4: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x35c7: mov_imm:
	regs[5] = 0x5d2e3ecb, opcode= 0x05
0x35cd: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x35d1: jmp_imm:
	pc += 0x1, opcode= 0x08
0x35d6: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x35d9: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x35dc: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x35df: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x35e2: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x35e6: jmp_imm:
	pc += 0x1, opcode= 0x08
0x35eb: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x35ee: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x35f1: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x35f4: mov_imm:
	regs[5] = 0xecf2498f, opcode= 0x05
0x35fa: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x35fd: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x3600: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x3606: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x360c: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x360f: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x3612: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x3615: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x3618: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x361b: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x361f: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3624: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x3627: mov_imm:
	regs[5] = 0x51a02b62, opcode= 0x05
0x362e: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3633: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3637: jmp_imm:
	pc += 0x1, opcode= 0x08
0x363c: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x3640: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3645: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x3649: jmp_imm:
	pc += 0x1, opcode= 0x08
0x364e: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x3652: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3657: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x365b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3660: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x3663: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x3666: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x3669: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x366c: mov_imm:
	regs[5] = 0xb105fe53, opcode= 0x05
0x3672: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x3676: jmp_imm:
	pc += 0x1, opcode= 0x08
0x367b: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x367e: mov_imm:
	regs[20] = 0x4, opcode= 0x05
0x3684: mov_imm:
	regs[21] = 0x5, opcode= 0x05
0x368b: jmp_imm:
	pc += 0x1, opcode= 0x08
0x3690: mov_regs:
	regs[2] = regs[1], opcode= 0x04
0x3693: mov_regs:
	regs[3] = regs[1], opcode= 0x04
0x3697: jmp_imm:
	pc += 0x1, opcode= 0x08
0x369c: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x369f: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x36a3: jmp_imm:
	pc += 0x1, opcode= 0x08
0x36a8: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x36ab: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x36ae: add_regs:
	regs[4] += regs[1], opcode= 0x03
0x36b1: mov_imm:
	regs[5] = 0xade8b34c, opcode= 0x05
0x36b7: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x36ba: add_regs:
	regs[0] += regs[4], opcode= 0x03
0x36bd: mov_regs:
	regs[2] = regs[0], opcode= 0x04
0x36c0: mov_regs:
	regs[3] = regs[0], opcode= 0x04
0x36c3: shl_regs:
	regs[2] <<= regs[20], opcode= 0x02
0x36c6: shr_regs:
	regs[3] >>= regs[21], opcode= 0x0a
0x36ca: jmp_imm:
	pc += 0x1, opcode= 0x08
0x36cf: mov_regs:
	regs[4] = regs[2], opcode= 0x04
0x36d2: xor_regs:
	regs[4] ^= regs[3], opcode= 0x06
0x36d6: jmp_imm:
	pc += 0x1, opcode= 0x08
0x36db: add_regs:
	regs[4] += regs[0], opcode= 0x03
0x36de: mov_imm:
	regs[5] = 0x750815bd, opcode= 0x05
0x36e4: xor_regs:
	regs[4] ^= regs[5], opcode= 0x06
0x36e7: add_regs:
	regs[1] += regs[4], opcode= 0x03
0x36ea: mov_imm:
	regs[30] = 0xed334401, opcode= 0x05
0x36f0: mov_imm:
	regs[31] = 0x8ddda9ad, opcode= 0x05
0x36f6: xor_regs:
	regs[0] ^= regs[30], opcode= 0x06
0x36fa: jmp_imm:
	pc += 0x1, opcode= 0x08
0x36ff: xor_regs:
	regs[1] ^= regs[31], opcode= 0x06
max register index:31
