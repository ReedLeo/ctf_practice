0x7ff7a5d419d3: vm_jz, opcode=6
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f01
	regs=[ 0x1,0x28,0x0,0x1,0x0,0x0 ]
	vmPc(0x5b)-> 0x6|0x5f|0x5|0x0|0x0|0x3|0x3|0x0|0x2|0x1
	vmSp(0x1)-> 0x0|0x0
NotEq=1949437697, no jump, continue

0x7ff7a5d419bb: vm_jmp, opcode=5
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x1,0x28,0x0,0x1,0x0,0x0 ]
	vmPc(0x5d)-> 0x5|0x0|0x0|0x3|0x3|0x0|0x2|0x1|0x0|0x3
	vmSp(0x1)-> 0x0|0x0
jump to 0x3030000

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x1,0x28,0x0,0x1,0x0,0x0 ]
	vmPc(0x0)-> 0x0|0x3|0x2|0x0|0x3|0x0|0x2|0x3|0x0|0x0
	vmSp(0x1)-> 0x0|0x0
regs[0x2] = 0x0

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x1,0x28,0x0,0x1,0x0,0x0 ]
	vmPc(0x4)-> 0x3|0x0|0x2|0x3|0x0|0x0|0x0|0x0|0x0|0x2
	vmSp(0x1)-> 0x0|0x0
regs[0x2](==0x0) += regs[0x3](==0x1), res=0x1

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x1,0x28,0x1,0x1,0x0,0x0 ]
	vmPc(0x8)-> 0x0|0x0|0x0|0x0|0x0|0x2|0x1|0x0|0x0|0x3
	vmSp(0x1)-> 0x0|0x0
regs[0] = userInput[0x1] = 0x61

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x61,0x28,0x1,0x1,0x0,0x0 ]
	vmPc(0xc)-> 0x0|0x2|0x1|0x0|0x0|0x3|0x2|0x32|0x3|0x0
	vmSp(0x1)-> 0x0|0x0
regs[0x1] = regs[0x0]

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x61,0x61,0x1,0x1,0x0,0x0 ]
	vmPc(0x10)-> 0x0|0x3|0x2|0x32|0x3|0x0|0x2|0x3|0x0|0x0
	vmSp(0x1)-> 0x0|0x0
regs[0x2] = 0x32

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x61,0x61,0x32,0x1,0x0,0x0 ]
	vmPc(0x14)-> 0x3|0x0|0x2|0x3|0x0|0x0|0x0|0x0|0x3|0x0
	vmSp(0x1)-> 0x0|0x0
regs[0x2](==0x32) += regs[0x3](==0x1), res=0x33

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x61,0x61,0x33,0x1,0x0,0x0 ]
	vmPc(0x18)-> 0x0|0x0|0x0|0x0|0x3|0x0|0x1|0x0|0x0|0x3
	vmSp(0x1)-> 0x0|0x0
regs[0] = userInput[0x33] = 0xa8

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0xa8,0x61,0x33,0x1,0x0,0x0 ]
	vmPc(0x1c)-> 0x3|0x0|0x1|0x0|0x0|0x3|0x2|0x64|0x3|0x0
	vmSp(0x1)-> 0x0|0x0
regs[0x1](==0x61) += regs[0x0](==0xa8), res=0x109
// r1 = usrInput[1] + key[1+0x32]{0xa8}

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0xa8,0x109,0x33,0x1,0x0,0x0 ]
	vmPc(0x20)-> 0x0|0x3|0x2|0x64|0x3|0x0|0x2|0x3|0x0|0x0
	vmSp(0x1)-> 0x0|0x0
regs[0x2] = 0x64

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0xa8,0x109,0x64,0x1,0x0,0x0 ]
	vmPc(0x24)-> 0x3|0x0|0x2|0x3|0x0|0x0|0x0|0x0|0x3|0x3
	vmSp(0x1)-> 0x0|0x0
regs[0x2](==0x64) += regs[0x3](==0x1), res=0x65

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0xa8,0x109,0x65,0x1,0x0,0x0 ]
	vmPc(0x28)-> 0x0|0x0|0x0|0x0|0x3|0x3|0x1|0x0|0x0|0x3
	vmSp(0x1)-> 0x0|0x0
regs[0] = userInput[0x65] = 0xa9

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0xa9,0x109,0x65,0x1,0x0,0x0 ]
	vmPc(0x2c)-> 0x3|0x3|0x1|0x0|0x0|0x3|0x0|0x8|0x0|0x2
	vmSp(0x1)-> 0x0|0x0
regs[0x1](==0x109) ^= regs[0x0](==0xa9), res=0x1a0
// r1 = (usrInput[1] + key[1+0x32]{0xa8}) ^ key[1+0x64]{0xa9}

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0xa9,0x1a0,0x65,0x1,0x0,0x0 ]
	vmPc(0x30)-> 0x0|0x3|0x0|0x8|0x0|0x2|0x2|0x1|0x3|0x4
	vmSp(0x1)-> 0x0|0x0
regs[0x0] = 0x8

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x8,0x1a0,0x65,0x1,0x0,0x0 ]
	vmPc(0x34)-> 0x0|0x2|0x2|0x1|0x3|0x4|0x1|0x0|0x3|0x5
	vmSp(0x1)-> 0x0|0x0
regs[0x2] = regs[0x1]

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x8,0x1a0,0x1a0,0x1,0x0,0x0 ]
	vmPc(0x38)-> 0x3|0x4|0x1|0x0|0x3|0x5|0x2|0x0|0x3|0x0
	vmSp(0x1)-> 0x0|0x0
regs[0x1](==0x1a0) = (regs[0x1] << regs[0x0](==0x8)) & 0xFF00, res=0xa000
// r1 = (((usrInput[1] + key[1+0x32]{0xa8}) ^ key[1+0x64]{0xa9}) << 8) &0xff00

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x8,0xa000,0x1a0,0x1,0x0,0x0 ]
	vmPc(0x3c)-> 0x3|0x5|0x2|0x0|0x3|0x0|0x1|0x2|0x0|0x2
	vmSp(0x1)-> 0x0|0x0
regs[0x2](==0x1a0) = regs[0x2] >> regs[0x0](==0x8), res=0x1
// r2 = ((usrInput[1] + key[1+0x32]{0xa8}) ^ key[1+0x64]{0xa9}) >> 8

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x8,0xa000,0x1,0x1,0x0,0x0 ]
	vmPc(0x40)-> 0x3|0x0|0x1|0x2|0x0|0x2|0x0|0x1|0x1|0x0
	vmSp(0x1)-> 0x0|0x0
regs[0x1](==0xa000) += regs[0x2](==0x1), res=0xa001

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x8,0xa001,0x1,0x1,0x0,0x0 ]
	vmPc(0x44)-> 0x0|0x2|0x0|0x1|0x1|0x0|0x0|0x3|0x0|0x1
	vmSp(0x1)-> 0x0|0x0
regs[0x0] = regs[0x1]

0x7ff7a5d4198b: vm_push, opcode=1
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0xa001,0xa001,0x1,0x1,0x0,0x0 ]
	vmPc(0x48)-> 0x1|0x0|0x0|0x3|0x0|0x1|0x3|0x0|0x3|0x0
	vmSp(0x1)-> 0x0|0x0
push_reg0: push(0xa001)

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0xa001,0xa001,0x1,0x1,0x0,0x0 ]
	vmPc(0x4a)-> 0x0|0x3|0x0|0x1|0x3|0x0|0x3|0x0|0x0|0x2
	vmSp(0x2)-> 0x0|0x0|0x35000000
regs[0x0] = 0x1

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x1,0xa001,0x1,0x1,0x0,0x0 ]
	vmPc(0x4e)-> 0x3|0x0|0x3|0x0|0x0|0x2|0x0|0x3|0x0|0x3
	vmSp(0x2)-> 0x0|0x0|0x35000000
regs[0x3](==0x1) += regs[0x0](==0x1), res=0x2

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x1,0xa001,0x1,0x2,0x0,0x0 ]
	vmPc(0x52)-> 0x0|0x2|0x0|0x3|0x0|0x3|0x1|0x28|0x4|0x6
	vmSp(0x2)-> 0x0|0x0|0x35000000
regs[0x0] = regs[0x3]

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x2,0xa001,0x1,0x2,0x0,0x0 ]
	vmPc(0x56)-> 0x0|0x3|0x1|0x28|0x4|0x6|0x5f|0x5|0x0|0x0
	vmSp(0x2)-> 0x0|0x0|0x35000000
regs[0x1] = 0x28

0x7ff7a5d419af: vm_cmp, opcode=4
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x1
	regs=[ 0x2,0x28,0x1,0x2,0x0,0x0 ]
	vmPc(0x5a)-> 0x4|0x6|0x5f|0x5|0x0|0x0|0x3|0x3|0x0|0x2
	vmSp(0x2)-> 0x0|0x0|0x35000000
reg0(0x2) != reg1(0x28) -> NotEq=True
