from z3 import *

k1 = [0x9b, 0xa8, 0x2, 0xbc, 0xac, 0x9c, 0xce, 0xfa, 0x2, 0xb9, 0xff, 0x3a, 0x74, 0x48, 0x19, 0x69, 0xe8, 0x3, 0xcb, 0xc9, 0xff, 0xfc, 0x80, 0xd6, 0x8d, 0xd7, 0x72, 0x0, 0xa7, 0x1d, 0x3d, 0x99, 0x88, 0x99, 0xbf, 0xe8, 0x96, 0x2e, 0x5d, 0x57]

k2 = [0xc9, 0xa9, 0xbd, 0x8b, 0x17, 0xc2, 0x6e, 0xf8, 0xf5, 0x6e, 0x63, 0x63, 0xd5, 0x46, 0x5d, 0x16, 0x98, 0x38, 0x30, 0x73, 0x38, 0xc1, 0x5e, 0xed, 0xb0, 0x29, 0x5a, 0x18, 0x40, 0xa7, 0xfd, 0xa, 0x1e, 0x78, 0x8b, 0x62, 0xdb, 0xf, 0x8f, 0x9c]

enc = [0x4800, 0xf100, 0x4000, 0x2100, 0x3501, 0x6400, 0x7801, 0xf900, 0x1801, 0x5200, 0x2500, 0x5d01, 0x4700, 0xfd00, 0x6901, 0x5c00, 0xaf01, 0xb200, 0xec01, 0x5201, 0x4f01, 0x1a01, 0x5000, 0x8501, 0xcd00, 0x2300, 0xf800, 0xc00, 0xcf00, 0x3d01, 0x4501, 0x8200, 0xd201, 0x2901, 0xd501, 0x601, 0xa201, 0xde00, 0xa601, 0xca01]
enc = enc[::-1] # reverse

def encrypt(plain_text):
    enc = [0]*40
    for i in range(40):
        a = (plain_text[i] + k1[i]) ^ k2[i]
        b = (a << 8) & 0xff00
        c = (a >> 8)
        enc[i] = (b + c) & 0xffffffff

flg = ''
for i in range(40):
    s = Solver()
    x = BitVec('x', 32)
    s.add(x>=0, x < 127)
    s.add(enc[i] == (((((x + k1[i]) ^ k2[i]) << 8) & 0xff00) +(((x + k1[i]) ^ k2[i]) >> 8)))
    if (s.check()):
        m = s.model()
        c = m[x].as_long()
        print(f'{i}: 0x{c:x}')
        flg += chr(c)
    else:
        continue

print(flg)
