Python>'a'*40
'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x0,0x0,0x0,0x0,0x0,0x0 ]
	vmPc(0x0)-> 0x0|0x3|0x2|0x0|0x3|0x0|0x2|0x3|0x0|0x0
	vmSp(0x0)-> 0x0
regs[0x2] = 0x0

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x0,0x0,0x0,0x0,0x0,0x0 ]
	vmPc(0x4)-> 0x3|0x0|0x2|0x3|0x0|0x0|0x0|0x0|0x0|0x2
	vmSp(0x0)-> 0x0
regs[0x2](==0x0) += regs[0x3](==0x0), res=0x0

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x0,0x0,0x0,0x0,0x0,0x0 ]
	vmPc(0x8)-> 0x0|0x0|0x0|0x0|0x0|0x2|0x1|0x0|0x0|0x3
	vmSp(0x0)-> 0x0
regs[0] = userInput[0x0] = 0x61

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x61,0x0,0x0,0x0,0x0,0x0 ]
	vmPc(0xc)-> 0x0|0x2|0x1|0x0|0x0|0x3|0x2|0x32|0x3|0x0
	vmSp(0x0)-> 0x0
regs[0x1] = regs[0x0]

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x61,0x61,0x0,0x0,0x0,0x0 ]
	vmPc(0x10)-> 0x0|0x3|0x2|0x32|0x3|0x0|0x2|0x3|0x0|0x0
	vmSp(0x0)-> 0x0
regs[0x2] = 0x32

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x61,0x61,0x32,0x0,0x0,0x0 ]
	vmPc(0x14)-> 0x3|0x0|0x2|0x3|0x0|0x0|0x0|0x0|0x3|0x0
	vmSp(0x0)-> 0x0
regs[0x2](==0x32) += regs[0x3](==0x0), res=0x32

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x61,0x61,0x32,0x0,0x0,0x0 ]
	vmPc(0x18)-> 0x0|0x0|0x0|0x0|0x3|0x0|0x1|0x0|0x0|0x3
	vmSp(0x0)-> 0x0
regs[0] = userInput[0x32] = 0x9b

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x9b,0x61,0x32,0x0,0x0,0x0 ]
	vmPc(0x1c)-> 0x3|0x0|0x1|0x0|0x0|0x3|0x2|0x64|0x3|0x0
	vmSp(0x0)-> 0x0
regs[0x1](==0x61) += regs[0x0](==0x9b), res=0xfc

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x9b,0xfc,0x32,0x0,0x0,0x0 ]
	vmPc(0x20)-> 0x0|0x3|0x2|0x64|0x3|0x0|0x2|0x3|0x0|0x0
	vmSp(0x0)-> 0x0
regs[0x2] = 0x64

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x9b,0xfc,0x64,0x0,0x0,0x0 ]
	vmPc(0x24)-> 0x3|0x0|0x2|0x3|0x0|0x0|0x0|0x0|0x3|0x3
	vmSp(0x0)-> 0x0
regs[0x2](==0x64) += regs[0x3](==0x0), res=0x64

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x9b,0xfc,0x64,0x0,0x0,0x0 ]
	vmPc(0x28)-> 0x0|0x0|0x0|0x0|0x3|0x3|0x1|0x0|0x0|0x3
	vmSp(0x0)-> 0x0
regs[0] = userInput[0x64] = 0xc9

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0xc9,0xfc,0x64,0x0,0x0,0x0 ]
	vmPc(0x2c)-> 0x3|0x3|0x1|0x0|0x0|0x3|0x0|0x8|0x0|0x2
	vmSp(0x0)-> 0x0
regs[0x1](==0xfc) ^= regs[0x0](==0xc9), res=0x35
// ((usrInput[0] + key[0x32]{==0x9b}) ^ key[0x64]{0==xc9})

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0xc9,0x35,0x64,0x0,0x0,0x0 ]
	vmPc(0x30)-> 0x0|0x3|0x0|0x8|0x0|0x2|0x2|0x1|0x3|0x4
	vmSp(0x0)-> 0x0
regs[0x0] = 0x8

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x8,0x35,0x64,0x0,0x0,0x0 ]
	vmPc(0x34)-> 0x0|0x2|0x2|0x1|0x3|0x4|0x1|0x0|0x3|0x5
	vmSp(0x0)-> 0x0
regs[0x2] = regs[0x1]

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x8,0x35,0x35,0x0,0x0,0x0 ]
	vmPc(0x38)-> 0x3|0x4|0x1|0x0|0x3|0x5|0x2|0x0|0x3|0x0
	vmSp(0x0)-> 0x0
regs[0x1](==0x35) = (regs[0x1] << regs[0x0](==0x8)) & 0xFF00, res=0x3500
//  r1 = (((usrInput[0] + key[0x32]{==0x9b}) ^ key[0x64]{0==xc9}) << imm{==8})&0xff00

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x8,0x3500,0x35,0x0,0x0,0x0 ]
	vmPc(0x3c)-> 0x3|0x5|0x2|0x0|0x3|0x0|0x1|0x2|0x0|0x2
	vmSp(0x0)-> 0x0
regs[0x2](==0x35) = regs[0x2] >> regs[0x0](==0x8), res=0x0
//  r2 =  ((usrInput[0] + key[0x32]{==0x9b}) ^ key[0x64]{0==xc9}) >> imm{==8}

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x8,0x3500,0x0,0x0,0x0,0x0 ]
	vmPc(0x40)-> 0x3|0x0|0x1|0x2|0x0|0x2|0x0|0x1|0x1|0x0
	vmSp(0x0)-> 0x0
regs[0x1](==0x3500) += regs[0x2](==0x0), res=0x3500

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x8,0x3500,0x0,0x0,0x0,0x0 ]
	vmPc(0x44)-> 0x0|0x2|0x0|0x1|0x1|0x0|0x0|0x3|0x0|0x1
	vmSp(0x0)-> 0x0
regs[0x0] = regs[0x1]

0x7ff7a5d4198b: vm_push, opcode=1
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x3500,0x3500,0x0,0x0,0x0,0x0 ]
	vmPc(0x48)-> 0x1|0x0|0x0|0x3|0x0|0x1|0x3|0x0|0x3|0x0
	vmSp(0x0)-> 0x0
push_reg0: push(0x3500)
// push r0, r0 == encrypt(usrInput[0])

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x3500,0x3500,0x0,0x0,0x0,0x0 ]
	vmPc(0x4a)-> 0x0|0x3|0x0|0x1|0x3|0x0|0x3|0x0|0x0|0x2
	vmSp(0x1)-> 0x0|0x0
regs[0x0] = 0x1

0x7ff7a5d419a3: vm_arithmetic, opcode=3
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x1,0x3500,0x0,0x0,0x0,0x0 ]
	vmPc(0x4e)-> 0x3|0x0|0x3|0x0|0x0|0x2|0x0|0x3|0x0|0x3
	vmSp(0x1)-> 0x0|0x0
regs[0x3](==0x0) += regs[0x0](==0x1), res=0x1

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x1,0x3500,0x0,0x1,0x0,0x0 ]
	vmPc(0x52)-> 0x0|0x2|0x0|0x3|0x0|0x3|0x1|0x28|0x4|0x6
	vmSp(0x1)-> 0x0|0x0
regs[0x0] = regs[0x3]

0x7ff7a5d4197f: vm_mov, opcode=0
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x1,0x3500,0x0,0x1,0x0,0x0 ]
	vmPc(0x56)-> 0x0|0x3|0x1|0x28|0x4|0x6|0x5f|0x5|0x0|0x0
	vmSp(0x1)-> 0x0|0x0
regs[0x1] = 0x28

0x7ff7a5d419af: vm_cmp, opcode=4
	userInput@0x7ff7a5d45040
	vmStack@0x7ff7a5d45d40
	vmOpcodes@0x7ff7a5d45360
	vmNotEq=0x74320f00
	regs=[ 0x1,0x28,0x0,0x1,0x0,0x0 ]
	vmPc(0x5a)-> 0x4|0x6|0x5f|0x5|0x0|0x0|0x3|0x3|0x0|0x2
	vmSp(0x1)-> 0x0|0x0
reg0(0x1) != reg1(0x28) -> NotEq=False
// for i in range(40):
